{
  "data": {
    "scripts": {
      "testnet": {
        "version": "0.42",
        "basic": {
          "addKey": "aW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKICAgICAgICBzaWduZXIua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQogICAgfQp9",
          "getAccountInfo": "cHViIHN0cnVjdCBSZXN1bHQgewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0CiAgcHViIGxldCBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHN0b3JhZ2VVc2VkOiBVSW50NjQKICBwdWIgbGV0IHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgYmFsYW5jZTogVUZpeDY0LAogICAgYXZhaWxhYmxlQmFsYW5jZTogVUZpeDY0LAogICAgc3RvcmFnZVVzZWQ6IFVJbnQ2NCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgICBzZWxmLmF2YWlsYWJsZUJhbGFuY2UgPSBhdmFpbGFibGVCYWxhbmNlCiAgICBzZWxmLnN0b3JhZ2VVc2VkID0gc3RvcmFnZVVzZWQKICAgIHNlbGYuc3RvcmFnZUNhcGFjaXR5ID0gc3RvcmFnZUNhcGFjaXR5CiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIHJldHVybiBSZXN1bHQoCiAgICBhZGRyZXNzOiBhY2NvdW50LmFkZHJlc3MsCiAgICBiYWxhbmNlOiBhY2NvdW50LmJhbGFuY2UsCiAgICBhdmFpbGFibGVCYWxhbmNlOiBhY2NvdW50LmF2YWlsYWJsZUJhbGFuY2UsCiAgICBzdG9yYWdlVXNlZDogYWNjb3VudC5zdG9yYWdlVXNlZCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogYWNjb3VudC5zdG9yYWdlQ2FwYWNpdHkKICApCn0=",
          "getAccountTotalFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93PCZGbG93VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgcmVmZXJlbmNlIHRvIHRoZSBWYXVsdCIpCiAgICBsZXQgdW5sb2NrZWRCYWxhbmNlID0gdW5sb2NrZWRWYXVsdC5iYWxhbmNlCiAgICAgICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZSArIHVubG9ja2VkQmFsYW5jZQp9",
          "getAccountTotalLockedFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gYWNjb3VudAogICAgICAuZ2V0Q2FwYWJpbGl0eQogICAgICA8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcntMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm99PgogICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgcmV0dXJuIFVGaXg2NCgwKQogICAgfQogICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIAogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2UKfQ==",
          "getAccountTotalUnlockedFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkhCiAgICAgIC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSByZWZlcmVuY2UgdG8gdGhlIFZhdWx0IikKICAgIGxldCB1bmxvY2tlZEJhbGFuY2UgPSB1bmxvY2tlZFZhdWx0LmJhbGFuY2UKCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQoKICAgIGlmIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA+IGxvY2tlZEJhbGFuY2UgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UgKyBsb2NrZWRCYWxhbmNlCiAgICB9CgogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCArIHVubG9ja2VkQmFsYW5jZQp9",
          "getFindAddress": "aW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKLy9DaGVjayB0aGUgc3RhdHVzIG9mIGEgZmluIHVzZXIKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZykgOiBBZGRyZXNzPyB7CiAgICBsZXQgc3RhdHVzPUZJTkQuc3RhdHVzKG5hbWUpCiAgICByZXR1cm4gc3RhdHVzLm93bmVyCn0=",
          "getFindDomainByAddress": "aW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IFN0cmluZz97CnJldHVybiBGSU5ELnJldmVyc2VMb29rdXAoYWRkcmVzcykKfQ==",
          "getFlownsAddress": "aW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogQWRkcmVzcz8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZWhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQp2YXIgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1laGFzaCkKcmV0dXJuIGFkZHJlc3MKfQ==",
          "getFlownsDomainsByAddress": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKLy8gYWRkcmVzczogRmxvdyBhZGRyZXNzCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtEb21haW5zLkRvbWFpbkRldGFpbF0gewpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCmxldCBkb21haW5zOltEb21haW5zLkRvbWFpbkRldGFpbF0gPSBbXQpsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQoKZm9yIGlkIGluIGlkcyB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKQogICAgbGV0IGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQogICAgZG9tYWlucy5hcHBlbmQoZGV0YWlsKQp9CgpyZXR1cm4gZG9tYWlucwp9",
          "getStorageInfo": "IHB1YiBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKToge1N0cmluZzogVUludDY0fSB7CiAgICBsZXQgYWNjdCA9IGdldEFjY291bnQoYWRkcikKICAgIGxldCByZXQ6IHtTdHJpbmc6IFVJbnQ2NH0gPSB7fQogICAgcmV0WyJjYXBhY2l0eSJdID0gYWNjdC5zdG9yYWdlQ2FwYWNpdHkKICAgIHJldFsidXNlZCJdID0gYWNjdC5zdG9yYWdlVXNlZAogICAgcmV0WyJhdmFpbGFibGUiXSA9IGFjY3Quc3RvcmFnZUNhcGFjaXR5IC0gYWNjdC5zdG9yYWdlVXNlZAogICAgcmV0dXJuIHJldAp9",
          "getTokenBalanceWithModel": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgLmdldENhcGFiaWxpdHkoPFRva2VuQmFsYW5jZVBhdGg+KQogICAgLmJvcnJvdzwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIGNhcGFiaWxpdHkiKQoKICAgIHJldHVybiB2YXVsdFJlZi5iYWxhbmNlCn0=",
          "isLockedFlowEnable": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gZmFsc2UKICAgIH0KICAgIHJldHVybiB0cnVlCn0=",
          "isTokenStorageEnabled": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICBsZXQgcmVjZWl2ZXI6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAuZ2V0Q2FwYWJpbGl0eTwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5jaGVjaygpCiAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIC5nZXRDYXBhYmlsaXR5PCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KDxUb2tlbkJhbGFuY2VQYXRoPikKICAgIC5jaGVjaygpCiAgICByZXR1cm4gcmVjZWl2ZXIgJiYgYmFsYW5jZQp9",
          "revokeKey": "dHJhbnNhY3Rpb24oaW5kZXg6IEludCkgewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgLy8gR2V0IGEga2V5IGZyb20gYW4gYXV0aCBhY2NvdW50LgogICAgICAgIGxldCBrZXlBID0gc2lnbmVyLmtleXMucmV2b2tlKGtleUluZGV4OiBpbmRleCkKICAgIH0KfQ==",
          "withdrawAllUnlockedFlow": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhbW91bnQ6IFVGaXg2NAoKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IGFjY3QuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQoKICAgICAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgICAgLmdldENhcGFiaWxpdHk8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcntMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm99PgogICAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQoKICAgICAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgICAgICBwYW5pYygiQ291bGQgbm90IGdldCBmbG93IGxvY2tlZCB0b2tlbiB2YXVsdCIpCiAgICAgICAgfQoKICAgICAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICAgICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAgICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICAgICAgLy8gaWYgbG9ja2VkQmFsYW5jZSA9PSBVRml4NjQoMCkgewogICAgICAgIC8vICAgICBwYW5pYygiTm90IGVub3VnaCBhbW91bnQgdG8gd2l0aGRyYXciKQogICAgICAgIC8vIH0KCiAgICAgICAgc2VsZi5hbW91bnQgPSBsb2NrZWRCYWxhbmNlVW5sb2NrZWQKICAgIAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogc2VsZi5hbW91bnQpKQogICAgfQp9",
          "withdrawUnlockedFlow": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKdHJhbnNhY3Rpb24oKSB7CgogICAgbGV0IGhvbGRlclJlZjogJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpKQogICAgfQp9"
        },
        "account": {
          "getBookmark": "aW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzLCB0YXJnZXQ6IEFkZHJlc3MpOiAmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJre0Zsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya1B1YmxpY30/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgewogICAgcmV0dXJuIGNvbGxlY3Rpb24uYm9ycm93UHVibGljQWNjb3VudEJvb2ttYXJrKGFkZHJlc3M6IHRhcmdldCkKICB9IAoKICByZXR1cm4gbmlsCn0=",
          "getBookmarks": "aW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzKTogJntBZGRyZXNzOiBGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfX0/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGFjY291bnQgYm9va21hcmsgY29sbGVjdGlvbiIpCgogIHJldHVybiBjb2xsZWN0aW9uLmdldEFjY291bnRCb29rbWFya3MoKQp9"
        },
        "collection": {
          "checkNFTCollection": "ICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgICBpbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCiAgICAvLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCiAgICAvLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgogICAgcHViIGZ1biBjaGVjazxUb2tlbj5WYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KDxUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAuY2hlY2soKQogICAgICAgIHJldHVybiB2YXVsdFJlZgogICAgfQoKICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICAgIHJldHVybiBjaGVjazxUb2tlbj5WYXVsdChhZGRyZXNzOiBhZGRyZXNzKQogICAgfQ==",
          "enableNFTStorage": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICBpZiBzaWduZXIuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikgPT0gbmlsIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIHNpZ25lci5zYXZlKDwtY29sbGVjdGlvbiwgdG86IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgfQogICAgaWYgKHNpZ25lci5nZXRDYXBhYmlsaXR5PCY8Q29sbGVjdGlvblB1YmxpY1R5cGU+Pig8Q29sbGVjdGlvblB1YmxpY1BhdGg+KS5ib3Jyb3coKSA9PSBuaWwpIHsKICAgICAgICBzaWduZXIudW5saW5rKDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgc2lnbmVyLmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICB9CiAgICB9Cn0=",
          "getCatalogTypeData": "aW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbigpOiB7U3RyaW5nIDoge1N0cmluZyA6IEJvb2x9fSB7CiAgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dUeXBlRGF0YSgpCiAgcmV0dXJuIGNhdGFsb2cKfQ==",
          "getNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgVmlld0luZm8gewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgcHViIGxldCB0aHVtYm5haWw6IEFueVN0cnVjdHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgcHViIGxldCByYXJpdHk6IFN0cmluZz8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDogQW55U3RydWN0e01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBzdG9yYWdlUGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICB9CgogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgKQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogc3RvcmFnZVBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTCatalogByCollectionIds": "aW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbihjb2xsZWN0aW9uSWRlbnRpZmllcnM6IFtTdHJpbmddKToge1N0cmluZzogTkZUQ2F0YWxvZy5ORlRDYXRhbG9nTWV0YWRhdGF9IHsKICBsZXQgcmVzOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gPSB7fQogIGZvciBjb2xsZWN0aW9uSUQgaW4gY29sbGVjdGlvbklkZW50aWZpZXJzIHsKICAgICAgaWYgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dFbnRyeShjb2xsZWN0aW9uSWRlbnRpZmllcjogY29sbGVjdGlvbklEKSB7CiAgICAgICAgcmVzW2NvbGxlY3Rpb25JRF0gPSBjYXRhbG9nCiAgICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTCollection": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4JCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBwdWIgbGV0IG5hbWU6IFN0cmluZwogIHB1YiBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIHB1YiBsZXQgbWVkaWFUeXBlOiBTdHJpbmcKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgfQp9CgpwdWIgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgpwdWIgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcpOiBORlRDb2xsZWN0aW9uIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkhCiAgcmV0dXJuIE5GVENvbGxlY3Rpb24oCiAgICBpZDogYWNjb3VudC50eXBlKGF0OiBwYXRoKSEuaWRlbnRpZmllciwKICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aCksCiAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICApCn0=",
          "getNFTDisplays": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgVmlld0luZm8gewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgcHViIGxldCB0aHVtYm5haWw6IEFueVN0cnVjdHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgcHViIGxldCByYXJpdHk6IFN0cmluZz8KICBwdWIgbGV0IGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwoKICBpbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiBBbnlTdHJ1Y3R7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/LCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgICBzZWxmLmNvbGxlY3Rpb25EaXNwbGF5ID0gY29sbGVjdGlvbkRpc3BsYXkKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBzdG9yYWdlUGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgIH0KCiAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgKCFjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQpIHsKICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgfQogICAgICB9CgogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICByYXJpdHk6IHJhcml0eURlc2MsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICkKICAgIH0gZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHN0b3JhZ2VQYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTMetadataViews": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRhdGEgewogIHB1YiBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgcHViIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgcHViIGxldCBwcm92aWRlclBhdGg6IFByaXZhdGVQYXRoCiAgcHViIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgcHViIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgcHViIGxldCBwcm92aWRlckxpbmtlZFR5cGU6IFR5cGUKCiAgaW5pdCgKICAgIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgsCiAgICBwcm92aWRlclBhdGg6IFByaXZhdGVQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgICBwcm92aWRlckxpbmtlZFR5cGU6IFR5cGUKICApIHsKICAgIHNlbGYuc3RvcmFnZVBhdGggPSBzdG9yYWdlUGF0aAogICAgc2VsZi5wdWJsaWNQYXRoID0gcHVibGljUGF0aAogICAgc2VsZi5wcm92aWRlclBhdGggPSBwcm92aWRlclBhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICAgIHNlbGYucHJvdmlkZXJMaW5rZWRUeXBlID0gcHJvdmlkZXJMaW5rZWRUeXBlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGhJRDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1N0cmluZzogQW55U3RydWN0fSA9IHt9CgogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzKSB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQoaWQ6IHRva2VuSUQpCgogIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgIHJlc1sicmFyaXR5Il0gPSByYXJpdHkKICB9CgogIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICByZXNbImRpc3BsYXkiXSA9IGRpc3BsYXkKICB9CgogIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgIHJlc1siZWRpdGlvbnMiXSA9IGVkaXRpb25zCiAgfQoKICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgIHJlc1sic2VyaWFsIl0gPSBzZXJpYWwKICB9CgogIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgcmVzWyJyb3lhbHRpZXMiXSA9IHJveWFsdGllcwogIH0KCiAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgIHJlc1sibGljZW5zZSJdID0gbGljZW5zZQogIH0KCiAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICByZXNbIm1lZGlhcyJdID0gbWVkaWFzCiAgfQoKICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICByZXNbImV4dGVybmFsVVJMIl0gPSBleHRlcm5hbFVSTAogIH0KCiAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICByZXNbInRyYWl0cyJdID0gdHJhaXRzCiAgfQoKICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICByZXNbImNvbGxlY3Rpb25EaXNwbGF5Il0gPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KCiAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgbGV0IGRhdGEgPSBDb2xsZWN0aW9uRGF0YSgKICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICBwcm92aWRlclBhdGg6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyUGF0aCwKICAgICAgcHVibGljQ29sbGVjdGlvbjogY29sbGVjdGlvbkRhdGEucHVibGljQ29sbGVjdGlvbiwKICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgcHJvdmlkZXJMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wcm92aWRlckxpbmtlZFR5cGUKICAgICkKICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICB9CgogIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICByZXR1cm4gcmVzCn0=",
          "sendNbaNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Ci8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJydzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiAvc3RvcmFnZS9Nb21lbnRDb2xsZWN0aW9uKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24iKQogICAgbGV0IHNlbmRlclJlZiA9IHNpZ25lcgogICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9Nb21lbnRDb2xsZWN0aW9uKQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7VG9wU2hvdC5Nb21lbnRDb2xsZWN0aW9uUHVibGljfT4oKQogICAgCiAgICBpZiByZWNpcGllbnRSZWYgPT0gbmlsIHsKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gcmVjaXBpZW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRlZmF1bHREb21haW46ICZ7RG9tYWlucy5Eb21haW5QdWJsaWN9PyA9IG5pbAogICAgCiAgICBsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbgogICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCkhCiAgICAgICAgbGV0IGlzRGVmYXVsdCA9IGRvbWFpbi5nZXRUZXh0KGtleTogImlzRGVmYXVsdCIpCiAgICAgICAgaWYgaXNEZWZhdWx0ID09ICJ0cnVlIiB7CiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgIH0KICAgIGxldCB0eXBlS2V5ID0gY29sbGVjdGlvblJlZi5nZXRUeXBlKCkuaWRlbnRpZmllcgogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcicncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBUb3BTaG90LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgZGVmYXVsdERvbWFpbiEuYWRkQ29sbGVjdGlvbihjb2xsZWN0aW9uOiA8LSBjb2xsZWN0aW9uKQogICAgfQogICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdE5GVChrZXk6IHR5cGVLZXksIHRva2VuOiA8LSBuZnQsIHNlbmRlclJlZjogc2VuZGVyUmVmICkKICAgIH0gZWxzZSB7CiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
          "sendNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyCiAgICAgICAgICAgIC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gcmVjaXBpZW50CiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+fT4oKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQ=="
        },
        "contract": {
          "getContractNames": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbU3RyaW5nXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIGFjY291bnQuY29udHJhY3RzLm5hbWVzCn0="
        },
        "domain": {
          "claimFTFromInbox": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDpTdHJpbmcsIGtleTpTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgdmF1bHRSZWY6ICY8VG9rZW4+LlZhdWx0CnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKCiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpIAogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KCiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICBpZiB2YXVsdFJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKICAgIHNlbGYudmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgfSBlbHNlIHsKICAgIHNlbGYudmF1bHRSZWYgPSB2YXVsdFJlZiEKICAgIH0KfQpleGVjdXRlIHsKICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd1ZhdWx0KGtleToga2V5LCBhbW91bnQ6IGFtb3VudCkpCn0KfQ==",
          "claimNFTFromInbox": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKLy8ga2V5IHdpbGwgYmUgJ0EuZjhkNmUwNTg2YjBhMjBjNy5Eb21haW5zLkNvbGxlY3Rpb24nIG9mIGEgTkZUIGNvbGxlY3Rpb24KdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcsIGtleTogU3RyaW5nLCBpdGVtSWQ6IFVJbnQ2NCkgewp2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0KdmFyIGNvbGxlY3Rpb25SZWY6ICY8TkZUPi5Db2xsZWN0aW9uCnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKICAgIHZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfT8gPSBuaWwKICAgIGxldCBjb2xsZWN0aW9uUHJpdmF0ZSA9IGFjY291bnQuYm9ycm93PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHJpdmF0ZX0+KGZyb206IERvbWFpbnMuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA/PyBwYW5pYygiQ291bGQgbm90IGZpbmQgeW91ciBkb21haW4gY29sbGVjdGlvbiBjYXAiKQoKICAgIGxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCiAgICBpZiBpZCAhPW5pbCB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQoKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBhY2NvdW50Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBzZWxmLmNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pPz8gcGFuaWMoIkNhbiBub3QgYm9ycm93IGNvbGxlY3Rpb24iKQogICAgfSBlbHNlIHsKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGNvbGxlY3Rpb25SZWYhCiAgICB9Cgp9CmV4ZWN1dGUgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3TkZUKGtleToga2V5LCBpdGVtSWQ6IGl0ZW1JZCkpCn0KfQ==",
          "getAddressOfDomain": "aW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpOiBBZGRyZXNzPyB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldEFkZHJlc3NPZkRvbWFpbihuYW1lOiBuYW1lLCByb290OiByb290KQp9",
          "getDefaultDomainsOfAddress": "aW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFN0cmluZ30gewogIHJldHVybiBEb21haW5VdGlscy5nZXREZWZhdWx0RG9tYWluc09mQWRkcmVzcyhhZGRyZXNzKQp9",
          "getFlownsInbox": "aW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIGdldERldGFpbChuYW1lSGFzaDogU3RyaW5nKTogRG9tYWlucy5Eb21haW5EZXRhaWw/IHsKbGV0IGFkZHJlc3MgPSBEb21haW5zLmdldFJlY29yZHMobmFtZUhhc2gpID8/IHBhbmljKCJEb21haW4gbm90IGV4aXN0IikKbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCmxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQp2YXIgZGV0YWlsOiBEb21haW5zLkRvbWFpbkRldGFpbD8gPSBuaWwKCmxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCmlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkISkKICAgIGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQp9CgpyZXR1cm4gZGV0YWlsCn0KCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQpyZXR1cm4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBuYW1lSGFzaCkKfQ==",
          "sendInboxNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewoKcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIKICAgIC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgbGV0IHJlY2lwaWVudFJlZiA9IHJlY2lwaWVudAogICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgIGlmIHJlY2lwaWVudFJlZiA9PSBuaWwgewogICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluIAogICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICBkZWZhdWx0RG9tYWluID0gZG9tYWluCiAgICAgICAgfQogICAgfQogICAgbGV0IHR5cGVLZXkgPSBjb2xsZWN0aW9uUmVmLmdldFR5cGUoKS5pZGVudGlmaWVyCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCiAgICBpZiBkZWZhdWx0RG9tYWluIS5jaGVja0NvbGxlY3Rpb24oa2V5OiB0eXBlS2V5KSA9PSBmYWxzZSB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBkZWZhdWx0RG9tYWluIS5hZGRDb2xsZWN0aW9uKGNvbGxlY3Rpb246IDwtIGNvbGxlY3Rpb24pCiAgICB9CiAgICBkZWZhdWx0RG9tYWluIS5kZXBvc2l0TkZUKGtleTogdHlwZUtleSwgdG9rZW46IDwtIG5mdCwgc2VuZGVyUmVmOiBzZW5kZXJSZWYgKQogICAgfSBlbHNlIHsKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
          "transferInboxTokens": "IGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBEb21haW5zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIGlmIHJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgICAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCgogICAgICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgICAgIGlmIGlkcy5sZW5ndGggPT0gMCB7CiAgICAgICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgICAgICAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgZG9tYWluIGluYm94CiAgICAgICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdFZhdWx0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0LCBzZW5kZXJSZWY6IHNlbGYuc2VuZGVyUmVmKQoKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQp9"
        },
        "ft": {
          "addToken": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICBpZihzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pICE9IG5pbCkgewogICAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgc2lnbmVyLnNhdmUoPC08VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAKICAgICAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgICAgIDxUb2tlblJlY2VpdmVyUGF0aD4sCiAgICAgICAgICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKICAgICAgICAKICAgICAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICAgICAgPFRva2VuQmFsYW5jZVBhdGg+LAogICAgICAgICAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICAgICApCiAgICB9Cn0=",
          "enableTokenStorage": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewoKcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICBpZihzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pID09IG5pbCkgewogICAgc2lnbmVyLnNhdmUoPC08VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgIH0KCiAgICBzaWduZXIudW5saW5rKAogICAgPFRva2VuUmVjZWl2ZXJQYXRoPgogICAgKQoKICAgIHNpZ25lci5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigKICAgIDxUb2tlblJlY2VpdmVyUGF0aD4sCiAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIHNpZ25lci51bmxpbmsoCiAgICA8VG9rZW5CYWxhbmNlUGF0aD4KICAgICkKCiAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCn0KfQ==",
          "transferTokens": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQEZ1bmdpYmxlVG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikhCiAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ==",
          "isTokenListEnabled": "CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OA0KaW1wb3J0IEZVU0QgZnJvbSAweGUyMjNkOGE2MjllNDljNjgNCmltcG9ydCBPcmlnaW5Ub2tlbiBmcm9tIDB4Nzg5NTUwNDMyNjI3ZTE2Yw0KaW1wb3J0IEZsb3ZhdGFyRHVzdFRva2VuIGZyb20gMHg5MzkyYTRhN2MzZjQ5YTBiDQppbXBvcnQgRmlhdFRva2VuIGZyb20gMHhhOTgzZmVjYmVkNjIxMTYzCgogICAgCiAgICBwdWIgZnVuIGNoZWNrRmxvd1Rva2VuVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IHJlY2VpdmVyOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuZ2V0Q2FwYWJpbGl0eTwmRmxvd1Rva2VuLlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQogICAgICAuY2hlY2soKQogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZGbG93VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKQogICAgICAgLmNoZWNrKCkKCiAgICAgIGxldCBmbGFnID0gcmVjZWl2ZXIgJiYgYmFsYW5jZQoKICAgICAgIGxldCByZWNlaXZlcjE6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQogICAgICAgLmNoZWNrKCkKICAgICAgIGxldCBiYWxhbmNlMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgICAuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgICAgICAuY2hlY2soKQoKICAgICAgICBsZXQgZmxhZzEgPSByZWNlaXZlcjEgJiYgYmFsYW5jZTEKCiAgICAgICByZXR1cm4gZmxhZyB8fCBmbGFnMQogICAgfQogICAgDQoKICAgIHB1YiBmdW4gY2hlY2tGVVNEVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IHJlY2VpdmVyOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuZ2V0Q2FwYWJpbGl0eTwmRlVTRC5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mdXNkUmVjZWl2ZXIpCiAgICAgIC5jaGVjaygpCiAgICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmdldENhcGFiaWxpdHk8JkZVU0QuVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mdXNkQmFsYW5jZSkKICAgICAgIC5jaGVjaygpCgogICAgICBsZXQgZmxhZyA9IHJlY2VpdmVyICYmIGJhbGFuY2UKCiAgICAgICBsZXQgcmVjZWl2ZXIxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oL3B1YmxpYy9mdXNkUmVjZWl2ZXIpCiAgICAgICAuY2hlY2soKQogICAgICAgbGV0IGJhbGFuY2UxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mdXNkQmFsYW5jZSkKICAgICAgICAuY2hlY2soKQoKICAgICAgICBsZXQgZmxhZzEgPSByZWNlaXZlcjEgJiYgYmFsYW5jZTEKCiAgICAgICByZXR1cm4gZmxhZyB8fCBmbGFnMQogICAgfQogICAgDQoKICAgIHB1YiBmdW4gY2hlY2tPcmlnaW5Ub2tlblZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgIGxldCByZWNlaXZlcjogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgLmdldENhcGFiaWxpdHk8Jk9yaWdpblRva2VuLlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL29yaWdpblRpY2tldFJlY2VpdmVyKQogICAgICAuY2hlY2soKQogICAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZPcmlnaW5Ub2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL29yaWdpblRpY2tldEJhbGFuY2UpCiAgICAgICAuY2hlY2soKQoKICAgICAgbGV0IGZsYWcgPSByZWNlaXZlciAmJiBiYWxhbmNlCgogICAgICAgbGV0IHJlY2VpdmVyMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvb3JpZ2luVGlja2V0UmVjZWl2ZXIpCiAgICAgICAuY2hlY2soKQogICAgICAgbGV0IGJhbGFuY2UxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9vcmlnaW5UaWNrZXRCYWxhbmNlKQogICAgICAgIC5jaGVjaygpCgogICAgICAgIGxldCBmbGFnMSA9IHJlY2VpdmVyMSAmJiBiYWxhbmNlMQoKICAgICAgIHJldHVybiBmbGFnIHx8IGZsYWcxCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja0Zsb3ZhdGFyRHVzdFRva2VuVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IHJlY2VpdmVyOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuZ2V0Q2FwYWJpbGl0eTwmRmxvdmF0YXJEdXN0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvRmxvdmF0YXJEdXN0VG9rZW5SZWNlaXZlcikKICAgICAgLmNoZWNrKCkKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuZ2V0Q2FwYWJpbGl0eTwmRmxvdmF0YXJEdXN0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9GbG92YXRhckR1c3RUb2tlbkJhbGFuY2UpCiAgICAgICAuY2hlY2soKQoKICAgICAgbGV0IGZsYWcgPSByZWNlaXZlciAmJiBiYWxhbmNlCgogICAgICAgbGV0IHJlY2VpdmVyMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvRmxvdmF0YXJEdXN0VG9rZW5SZWNlaXZlcikKICAgICAgIC5jaGVjaygpCiAgICAgICBsZXQgYmFsYW5jZTE6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL0Zsb3ZhdGFyRHVzdFRva2VuQmFsYW5jZSkKICAgICAgICAuY2hlY2soKQoKICAgICAgICBsZXQgZmxhZzEgPSByZWNlaXZlcjEgJiYgYmFsYW5jZTEKCiAgICAgICByZXR1cm4gZmxhZyB8fCBmbGFnMQogICAgfQogICAgDQoKICAgIHB1YiBmdW4gY2hlY2tGaWF0VG9rZW5WYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICBsZXQgcmVjZWl2ZXI6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgIC5nZXRDYXBhYmlsaXR5PCZGaWF0VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvVVNEQ1ZhdWx0UmVjZWl2ZXIpCiAgICAgIC5jaGVjaygpCiAgICAgIGxldCBiYWxhbmNlOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgLmdldENhcGFiaWxpdHk8JkZpYXRUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL1VTRENWYXVsdEJhbGFuY2UpCiAgICAgICAuY2hlY2soKQoKICAgICAgbGV0IGZsYWcgPSByZWNlaXZlciAmJiBiYWxhbmNlCgogICAgICAgbGV0IHJlY2VpdmVyMTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KC9wdWJsaWMvVVNEQ1ZhdWx0UmVjZWl2ZXIpCiAgICAgICAuY2hlY2soKQogICAgICAgbGV0IGJhbGFuY2UxOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9VU0RDVmF1bHRCYWxhbmNlKQogICAgICAgIC5jaGVjaygpCgogICAgICAgIGxldCBmbGFnMSA9IHJlY2VpdmVyMSAmJiBiYWxhbmNlMQoKICAgICAgIHJldHVybiBmbGFnIHx8IGZsYWcxCiAgICB9CiAgICAKCiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiB7U3RyaW5nOiBCb29sfSB7CiAgICAgIHJldHVybiB7CiAgICAiQS43ZTYwZGYwNDJhOWMwODY4LkZsb3dUb2tlbiIgOgogICAgY2hlY2tGbG93VG9rZW5WYXVsdChhZGRyZXNzOiBhZGRyZXNzKQogICAgLAogICAgIkEuZTIyM2Q4YTYyOWU0OWM2OC5GVVNEIiA6CiAgICBjaGVja0ZVU0RWYXVsdChhZGRyZXNzOiBhZGRyZXNzKQogICAgLAogICAgIkEuNzg5NTUwNDMyNjI3ZTE2Yy5PcmlnaW5Ub2tlbiIgOgogICAgY2hlY2tPcmlnaW5Ub2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICAsCiAgICAiQS45MzkyYTRhN2MzZjQ5YTBiLkZsb3ZhdGFyRHVzdFRva2VuIiA6CiAgICBjaGVja0Zsb3ZhdGFyRHVzdFRva2VuVmF1bHQoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICJBLmE5ODNmZWNiZWQ2MjExNjMuRmlhdFRva2VuIiA6CiAgICBjaGVja0ZpYXRUb2tlblZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9CiAgICB9CiAg",
          "getTokenListBalance": "CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OA0KaW1wb3J0IEZVU0QgZnJvbSAweGUyMjNkOGE2MjllNDljNjgNCmltcG9ydCBPcmlnaW5Ub2tlbiBmcm9tIDB4Nzg5NTUwNDMyNjI3ZTE2Yw0KaW1wb3J0IEZsb3ZhdGFyRHVzdFRva2VuIGZyb20gMHg5MzkyYTRhN2MzZjQ5YTBiDQppbXBvcnQgRmlhdFRva2VuIGZyb20gMHhhOTgzZmVjYmVkNjIxMTYzCgogICAgCiAgICBwdWIgZnVuIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgICAgICAKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja0ZVU0RCYWxhbmNlKGFkZHJlc3M6IEFkZHJlc3MpIDogVUZpeDY0IHsKICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9mdXNkQmFsYW5jZSkKICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgICAgICAKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja09yaWdpblRva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvb3JpZ2luVGlja2V0QmFsYW5jZSkKICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgICAgICAKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICANCgogICAgcHViIGZ1biBjaGVja0Zsb3ZhdGFyRHVzdFRva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvRmxvdmF0YXJEdXN0VG9rZW5CYWxhbmNlKQogICAgICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpID8/IG5pbAogICAgICAgIAogICAgICAKICAgICAgaWYgdmF1bHRSZWYgIT0gbmlsIHsKICAgICAgICAKICAgICAgICByZXR1cm4gdmF1bHRSZWYhLmJhbGFuY2UKICAgICAgfQogICAgICAKICAgICAgcmV0dXJuIDAuMAogICAgICAKICAgIH0KICAgIA0KCiAgICBwdWIgZnVuIGNoZWNrRmlhdFRva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvVVNEQ1ZhdWx0QmFsYW5jZSkKICAgICAgICAuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKSA/PyBuaWwKICAgICAgICAKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICAKCiAgICBwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiB7U3RyaW5nOiBVRml4NjR9IHsKICAgICAgcmV0dXJuIHsKICAgICAgIkEuN2U2MGRmMDQyYTljMDg2OC5GbG93VG9rZW4iIDoKICAgIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgLAogICAgICAiQS5lMjIzZDhhNjI5ZTQ5YzY4LkZVU0QiIDoKICAgIGNoZWNrRlVTREJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuNzg5NTUwNDMyNjI3ZTE2Yy5PcmlnaW5Ub2tlbiIgOgogICAgY2hlY2tPcmlnaW5Ub2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuOTM5MmE0YTdjM2Y0OWEwYi5GbG92YXRhckR1c3RUb2tlbiIgOgogICAgY2hlY2tGbG92YXRhckR1c3RUb2tlbkJhbGFuY2UoYWRkcmVzczogYWRkcmVzcykKICAgICwKICAgICAgIkEuYTk4M2ZlY2JlZDYyMTE2My5GaWF0VG9rZW4iIDoKICAgIGNoZWNrRmlhdFRva2VuQmFsYW5jZShhZGRyZXNzOiBhZGRyZXNzKQogICAgfQogICAgfQogIA=="
        },
        "hybridCustody": {
          "editChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcmVzczogQWRkcmVzcywgbmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IFN0cmluZykgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgbGV0IGQgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkoCiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsKQogICAgICAgICkKCiAgICAgICAgbS5zZXRDaGlsZEFjY291bnREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWRkcmVzcywgZCkKICAgIH0KfQ==",
          "getAccessibleCoinInfo": "IGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFRva2VuSW5mbyB7CnB1YiBsZXQgaWQ6IFN0cmluZwpwdWIgbGV0IGJhbGFuY2U6IFVGaXg2NAoKaW5pdChpZDogU3RyaW5nLCBiYWxhbmNlOiBVRml4NjQpIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQp9Cn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IFtUb2tlbkluZm9dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICB2YXIgY29pbkluZm9MaXN0OiBbVG9rZW5JbmZvXSA9IFtdCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPSBmb3VuZFR5cGVzCgogICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZhdWx0QmFsYW5jZXMKICAgICAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKHZhdWx0VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvaW5JbmZvTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiBjb2luSW5mb0xpc3QKfQo=",
          "getAccessibleCollectionAndIds": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IFtVSW50NjRdfSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIG5mdHMKfQ==",
          "getAccessibleCollectionAndIdsDisplay": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgpwdWIgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNvbGxlY3Rpb25MaXN0OiBbTkZUQ29sbGVjdGlvbl0gPSBbXQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZS5pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWNjb3VudCwgcGF0aDogcGF0aCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIGNvbGxlY3Rpb25MaXN0Cn0=",
          "getAccessibleCollectionsAndIds": "Ly8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBzY3JpcHQgeW91IGNhbiBleGVjdXRlIG9uIEZsb3cgTmV0d29yawppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiB7U3RyaW5nOiBbVUludDY0XX19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICAvLyBBZGRyZXNzIC0+IENvbGxlY3Rpb24gVHlwZSAtPiBvd25lZE5GVHMKICAgIHZhciBhY2Nlc3NpYmxlTkZUczoge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gID0ge30KCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogICAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmZ0cy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIGNvbGxlY3Rpb24uZ2V0SURzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIGFjY2Vzc2libGVORlRzW2FkZHJlc3NdID0gbmZ0cwogICAgfQogICAgcmV0dXJuIGFjY2Vzc2libGVORlRzCn0=",
          "getAccessibleFungibleToken": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFVGaXg2NH0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHRCYWxhbmNlcy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIHZhdWx0LmJhbGFuY2UpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgCiAgICByZXR1cm4gdmF1bHRCYWxhbmNlcwp9",
          "getChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCiAgICBwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKTogW0FkZHJlc3NdIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQogICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQogICAgcmV0dXJuIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKQp9Cg==",
          "getChildAccountMeta": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiB7QWRkcmVzczogQW55U3RydWN0fSB7CmxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQpsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KZm9yIGFkZHJlc3MgaW4gbS5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBjID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBub3QgZm91bmQiKQogICAgbGV0IGQgPSBjLnJlc29sdmVWaWV3KFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpKQogICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBkKQp9CnJldHVybiBkYXRhCn0=",
          "getChildAccountNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IExpbmtlZEFjY291bnRzIGZyb20gMHhDaGlsZEFjY291bnQKCi8vLyBDdXN0b20gc3RydWN0IHRvIG1ha2UgaW50ZXJwcmV0YXRpb24gb2YgTkZUICYgQ29sbGVjdGlvbiBkYXRhIGVhc3kgY2xpZW50IHNpZGUKcHViIHN0cnVjdCBORlREYXRhIHsKICAgIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICAgIHB1YiBsZXQgdGh1bWJuYWlsOiBTdHJpbmcKICAgIHB1YiBsZXQgcmVzb3VyY2VJRDogVUludDY0CiAgICBwdWIgbGV0IG93bmVyQWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgY29sbGVjdGlvbk5hbWU6IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvbkRlc2NyaXB0aW9uOiBTdHJpbmc/CiAgICBwdWIgbGV0IGNvbGxlY3Rpb25VUkw6IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogU3RyaW5nCiAgICBwdWIgbGV0IGNvbGxlY3Rpb25QdWJsaWNQYXRoSWRlbnRpZmllcjogU3RyaW5nPwoKICAgIGluaXQoCiAgICAgICAgbmFtZTogU3RyaW5nLAogICAgICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsCiAgICAgICAgdGh1bWJuYWlsOiBTdHJpbmcsCiAgICAgICAgcmVzb3VyY2VJRDogVUludDY0LAogICAgICAgIG93bmVyQWRkcmVzczogQWRkcmVzcz8sCiAgICAgICAgY29sbGVjdGlvbk5hbWU6IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvbkRlc2NyaXB0aW9uOiBTdHJpbmc/LAogICAgICAgIGNvbGxlY3Rpb25VUkw6IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogU3RyaW5nLAogICAgICAgIGNvbGxlY3Rpb25QdWJsaWNQYXRoSWRlbnRpZmllcjogU3RyaW5nPwogICAgKSB7CiAgICAgICAgc2VsZi5uYW1lID0gbmFtZQogICAgICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICAgICAgc2VsZi5yZXNvdXJjZUlEID0gcmVzb3VyY2VJRAogICAgICAgIHNlbGYub3duZXJBZGRyZXNzID0gb3duZXJBZGRyZXNzCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uTmFtZSA9IGNvbGxlY3Rpb25OYW1lCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uRGVzY3JpcHRpb24gPSBjb2xsZWN0aW9uRGVzY3JpcHRpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb25VUkwgPSBjb2xsZWN0aW9uVVJMCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyID0gY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcgogICAgICAgIHNlbGYuY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyID0gY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyCiAgICB9Cn0KCi8vLyBIZWxwZXIgZnVuY3Rpb24gdGhhdCByZXRyaWV2ZXMgZGF0YSBhYm91dCBhbGwgcHVibGljbHkgYWNjZXNzaWJsZSBORlRzIGluIGFuIGFjY291bnQKLy8vCnB1YiBmdW4gZ2V0QWxsVmlld3NGcm9tQWRkcmVzcyhfIGFkZHJlc3M6IEFkZHJlc3MpOiBbTkZURGF0YV0gewogICAgLy8gR2V0IHRoZSBhY2NvdW50CiAgICBsZXQgYWNjb3VudDogQXV0aEFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogICAgLy8gSW5pdCBmb3IgcmV0dXJuIHZhbHVlCiAgICBsZXQgZGF0YTogW05GVERhdGFdID0gW10KICAgIC8vIEFzc2lnbiB0aGUgdHlwZXMgd2UnbGwgbmVlZAogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgICBsZXQgZGlzcGxheVR5cGU6IFR5cGUgPSBUeXBlPE1ldGFkYXRhVmlld3MuRGlzcGxheT4oKQogICAgbGV0IGNvbGxlY3Rpb25EaXNwbGF5VHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT4oKQogICAgbGV0IGNvbGxlY3Rpb25EYXRhVHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQoKICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIHB1YmxpYyBwYXRoCiAgICBhY2NvdW50LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIGlmIGl0J3MgYSBDb2xsZWN0aW9uIHdlJ3JlIGludGVyZXN0ZWQgaW4sIGlmIHNvLCBnZXQgYSByZWZlcmVuY2UKICAgICAgICBpZiB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIENvbGxlY3Rpb24ncyBORlRzLCBjb250aW51aW5nIGlmIHRoZSBORlQgcmVzb2x2ZXMgdGhlIHZpZXdzIHdlIHdhbnQKICAgICAgICAgICAgICAgIGZvciBpZCBpbiBjb2xsZWN0aW9uUmVmLmdldElEcygpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZXJSZWY6ICZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlcn0gPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogaWQpCiAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhkaXNwbGF5VHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuRGlzcGxheT8gewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhjb2xsZWN0aW9uRGlzcGxheVR5cGUpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhjb2xsZWN0aW9uRGF0YVR5cGUpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdWlsZCBvdXIgTkZURGF0YSBzdHJ1Y3QgZnJvbSB0aGUgbWV0YWRhdGEKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5mdERhdGEgPSBORlREYXRhKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLnVyaSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJRDogcmVzb2x2ZXJSZWYudXVpZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG93bmVyQWRkcmVzczogcmVzb2x2ZXJSZWYub3duZXI/LmFkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTmFtZTogY29sbGVjdGlvbkRpc3BsYXk/Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uRGVzY3JpcHRpb246IGNvbGxlY3Rpb25EaXNwbGF5Py5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25VUkw6IGNvbGxlY3Rpb25EaXNwbGF5Py5leHRlcm5hbFVSTD8udXJsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogcGF0aC50b1N0cmluZygpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBjb2xsZWN0aW9uRGF0YT8ucHVibGljUGF0aD8udG9TdHJpbmcoKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCBpdCB0byBvdXIgZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFwcGVuZChuZnREYXRhKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKICAgIHJldHVybiBkYXRhCn0KCi8vLyBTY3JpcHQgdGhhdCByZXRyaWV2ZSBkYXRhIGFib3V0IGFsbCBwdWJsaWNseSBhY2Nlc3NpYmxlIE5GVHMgaW4gYW4gYWNjb3VudCBhbmQgYW55IG9mIGl0cwovLy8gY2hpbGQgYWNjb3VudHMKLy8vCi8vLyBOb3RlIHRoYXQgdGhpcyBzY3JpcHQgZG9lcyBub3QgY29uc2lkZXIgYWNjb3VudHMgd2l0aCBleGNlcHRpb25hbGx5IGxhcmdlIGNvbGxlY3Rpb25zIAovLy8gd2hpY2ggd291bGQgcmVzdWx0IGluIG1lbW9yeSBlcnJvcnMuIFRvIGNvbXBvc2UgYSBzY3JpcHQgdGhhdCBkb2VzIGNvdmVyIGFjY291bnRzIHdpdGgKLy8vIGEgbGFyZ2UgbnVtYmVyIG9mIHN1Yi1hY2NvdW50cyBhbmQvb3IgTkZUcyB3aXRoaW4gdGhvc2UgYWNjb3VudHMsIHNlZSBleGFtcGxlIDUgaW4KLy8vIHRoZSBORlQgQ2F0YWxvZydzIFJFQURNRTogaHR0cHM6Ly9naXRodWIuY29tL2RhcHBlcmxhYnMvbmZ0LWNhdGFsb2cgYW5kIGFkYXB0IGZvciB1c2UKLy8vIHdpdGggTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvbgovLy8KcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiB7QWRkcmVzczogW05GVERhdGFdfSB7CiAgICBsZXQgYWxsTkZURGF0YToge0FkZHJlc3M6IFtORlREYXRhXX0gPSB7fQogICAgCiAgICAvLyBBZGQgYWxsIHJldHJpZXZlZCB2aWV3cyB0byB0aGUgcnVubmluZyBtYXBwaW5nIGluZGV4ZWQgb24gYWRkcmVzcwogICAgYWxsTkZURGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKGFkZHJlc3MpKQogICAgCiAgICAvKiBJdGVyYXRlIG92ZXIgYW55IGNoaWxkIGFjY291bnRzICovIAogICAgLy8KICAgIC8vIEdldCByZWZlcmVuY2UgdG8gTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvbiBpZiBpdCBleGlzdHMKICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gZ2V0QWNjb3VudChhZGRyZXNzKS5nZXRDYXBhYmlsaXR5PCZMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9ue0xpbmtlZEFjY291bnRzLkNvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgICAgICApLmJvcnJvdygpIHsKICAgICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBsaW5rZWQgYWNjb3VudCBpbiBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uCiAgICAgICAgZm9yIGNoaWxkQWRkcmVzcyBpbiBjb2xsZWN0aW9uUmVmLmdldExpbmtlZEFjY291bnRBZGRyZXNzZXMoKSB7CiAgICAgICAgICAgIGlmICFhbGxORlREYXRhLmNvbnRhaW5zS2V5KGNoaWxkQWRkcmVzcykgewogICAgICAgICAgICAgICAgLy8gSW5zZXJ0IHRoZSBORlQgbWV0YWRhdGEgZm9yIHRob3NlIE5GVHMgaW4gZWFjaCBjaGlsZCBhY2NvdW50CiAgICAgICAgICAgICAgICAvLyBpbmRleGluZyBvbiB0aGUgYWNjb3VudCdzIGFkZHJlc3MKICAgICAgICAgICAgICAgIGFsbE5GVERhdGEuaW5zZXJ0KGtleTogY2hpbGRBZGRyZXNzLCBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKGNoaWxkQWRkcmVzcykpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gYWxsTkZURGF0YSAKfQ==",
          "getChildNFTInfo": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIAogICAgcHViIHN0cnVjdCBORlRJbmZvIHsKICAgICAgcHViIGxldCBpZDogU3RyaW5nCiAgICAgIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQogICAgCiAgICAgIGluaXQoaWQ6IFN0cmluZywgaWRMaXN0OiBbVUludDY0XSkgewogICAgICAgIHNlbGYuaWQgPSBpZAogICAgICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgICAgIH0KICAgIH0KICAgIAogICAgcHViIHN0cnVjdCBDaGlsZE5GVEluZm8gewogICAgICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICAgICAgcHViIGxldCBpbmZvOiBbTkZUSW5mb10KICAgIAogICAgICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIGluZm86IFtORlRJbmZvXSkgewogICAgICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgICAgICBzZWxmLmluZm8gPSBpbmZvCiAgICAgIH0KICAgIH0KICAgIAogICAgcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpOiBDaGlsZE5GVEluZm8gewogICAgICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICAKICAgICAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQogICAgCiAgICAgICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgICAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKICAgIAogICAgICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkKQogICAgICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICAgICAgbGV0IG5mdHM6IFtORlRJbmZvXSA9IFtdCiAgICAgICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAogICAgCiAgICAgICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9KQogICAgICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkXSA9IGZvdW5kVHlwZXMKICAgIAogICAgICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAKICAgICAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRdID09IG5pbCB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgIAogICAgICAgICAgICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmZ0cy5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBORlRJbmZvKGlkOiB0eXBlLmlkZW50aWZpZXIsIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfSkKICAgIAogICAgICAgIHJldHVybiBDaGlsZE5GVEluZm8oYWRkcmVzczogY2hpbGQsIGluZm86IG5mdHMpCiAgICB9",
          "unlinkChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCnRyYW5zYWN0aW9uKGNoaWxkOiBBZGRyZXNzKSB7CiAgICBwcmVwYXJlIChhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgbWFuYWdlci5yZW1vdmVDaGlsZChhZGRyOiBjaGlsZCkKICAgIH0KfQ=="
        },
        "staking": {
          "checkSetup": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBCb29sIHsKICAgIHJldHVybiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWRkcmVzcykKfQ==",
          "createDelegator": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlZ2lzdGVycyBhIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uIHJlc291cmNlCi8vLyBmb3IgdGhlIHNwZWNpZmllZCBub2RlSUQgYW5kIHRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGNvbW1pdAoKdHJhbnNhY3Rpb24oaWQ6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
          "createStake": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgbmV3IHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGZyb20gdGhlIGxvY2tlZCB2YXVsdCBhcmUgdXNlZCBmaXJzdCwgaWYgaXQgZXhpc3RzCi8vLyBmb2xsb3dlZCBieSB0aGUgdG9rZW5zIGZyb20gdGhlIHVubG9ja2VkIHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "getApr": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICBsZXQgYXByID0gRmxvd0lEVGFibGVTdGFraW5nLmdldEVwb2NoVG9rZW5QYXlvdXQoKSAvIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRUb3RhbFN0YWtlZCgpIC8gNy4wICogMzY1LjAgKiAoMS4wIC0gRmxvd0lEVGFibGVTdGFraW5nLmdldFJld2FyZEN1dFBlcmNlbnRhZ2UoKSkKICAgIHJldHVybiBhcHIKfQ==",
          "getApyWeekly": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICBsZXQgYXByID0gRmxvd0lEVGFibGVTdGFraW5nLmdldEVwb2NoVG9rZW5QYXlvdXQoKSAvIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRUb3RhbFN0YWtlZCgpICogNTQuMCAqICgxLjAgLSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0UmV3YXJkQ3V0UGVyY2VudGFnZSgpKQogICAgcmV0dXJuIGFwcgp9",
          "getDelegatesIndo": "CmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgpwdWIgc3RydWN0IERlbGVnYXRlSW5mbyB7CiAgICBwdWIgbGV0IGRlbGVnYXRvcklEOiBVSW50MzIKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgZGVsZWdhdGVkTm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbwogICAgcHViIGxldCByZXN0YWthYmxlVW5zdGFrZWRUb2tlbnM6IFVGaXg2NAoKICAgIGluaXQoZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8pIHsKICAgICAgICBzZWxmLmRlbGVnYXRvcklEID0gZGVsZWdhdG9ySW5mby5pZAogICAgICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgICAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCiAgICAgICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9ySW5mby5ub2RlSUQpCiAgICAgICAgc2VsZi5kZWxlZ2F0ZWROb2RlSW5mbyA9IG5vZGVJbmZvCiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYudW5zdGFrYWJsZVRva2VucyA9IHNlbGYudG9rZW5zU3Rha2VkICsgc2VsZi50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
          "getDelegatesInfoArray": "CmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhGbG93VGFibGVTdGFraW5nCi8vIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweFN0YWtpbmdDb2xsZWN0aW9uCiAgICAgICAgCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKTogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSB7CgogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmID0gZ2V0QWNjb3VudChhY2NvdW50KQogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7Rmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljfT4oRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiY2Fubm90IGJvcnJvdyByZWZlcmVuY2UgdG8gYWNjdC5TdGFraW5nQ29sbGVjdGlvbiIpCgogICAgcmV0dXJuIHN0YWtpbmdDb2xsZWN0aW9uUmVmLmdldEFsbERlbGVnYXRvckluZm8oKQp9",
          "getDelegatorInfo": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
          "getEpochMetadata": "aW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKGVwb2NoQ291bnRlcjogVUludDY0KTogRmxvd0Vwb2NoLkVwb2NoTWV0YWRhdGE/IHsKICByZXR1cm4gRmxvd0Vwb2NoLmdldEVwb2NoTWV0YWRhdGEoZXBvY2hDb3VudGVyKQp9",
          "getNodeInfo": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
          "getNodesInfo": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgcHViIHZhciBub2RlQ291bnQ6IFVJbnQ2NAogICAgcHViIHZhciBkZWxlZ2F0ZUNvdW50OiBVSW50NjQKCiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBpbml0KGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSwgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dKSB7CgogICAgICAgIHNlbGYubm9kZUNvdW50ID0gVUludDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gVUludDY0KDApCgogICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgICAgIHNlbGYubm9kZUNvdW50ID0gc2VsZi5ub2RlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgICAgIGZvciBkZWxlZ2F0ZUluZm8gaW4gYWxsRGVsZWdhdGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gc2VsZi5kZWxlZ2F0ZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
          "getStakeInfo": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
          "getStakingInfo": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgRXBvY2hJbmZvIHsKICBwdWIgbGV0IGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NAogIHB1YiBsZXQgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CgogIGluaXQoCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NCwKICAgICAgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CiAgKSB7CiAgICAgIHNlbGYuY3VycmVudEVwb2NoQ291bnRlciA9IGN1cnJlbnRFcG9jaENvdW50ZXIKICAgICAgc2VsZi5jdXJyZW50RXBvY2hQaGFzZSA9IGN1cnJlbnRFcG9jaFBoYXNlCiAgfQp9CgpwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/CgogIGluaXQoc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPykgewogICAgc2VsZi5zdGFraW5nSW5mbyA9IHN0YWtpbmdJbmZvCiAgfQp9CgpwdWIgc3RydWN0IFN0YWtpbmdJbmZvIHsKICBwdWIgbGV0IGVwb2NoSW5mbzogRXBvY2hJbmZvCiAgcHViIGxldCBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzICAgCiAgcHViIGxldCBsb2NrZWRCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHVubG9ja0xpbWl0OiBVRml4NjQKICBwdWIgbGV0IG5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/CgogIGluaXQoCiAgICBlcG9jaEluZm86IEVwb2NoSW5mbywKICAgIGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MsCiAgICBsb2NrZWRCYWxhbmNlOiBVRml4NjQsCiAgICB1bmxvY2tMaW1pdDogVUZpeDY0LAogICAgbm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPywKICApIHsKICAgIHNlbGYuZXBvY2hJbmZvID0gZXBvY2hJbmZvCiAgICBzZWxmLmxvY2tlZEFkZHJlc3MgPSBsb2NrZWRBZGRyZXNzCiAgICBzZWxmLmxvY2tlZEJhbGFuY2UgPSBsb2NrZWRCYWxhbmNlCiAgICBzZWxmLnVubG9ja0xpbWl0ID0gdW5sb2NrTGltaXQKICAgIHNlbGYubm9kZUluZm8gPSBub2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JOb2RlSW5mbyA9IGRlbGVnYXRvck5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvckluZm8gPSBkZWxlZ2F0b3JJbmZvCiAgfQp9CgpwdWIgc3RydWN0IE5vZGVJbmZvIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgCiAgcHViIGxldCBkZWxlZ2F0b3JJRENvdW50ZXI6IFVJbnQzMgogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nKSB7CiAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpIAoKICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgc2VsZi5uZXR3b3JraW5nQWRkcmVzcyA9IG5vZGVJbmZvLm5ldHdvcmtpbmdBZGRyZXNzCiAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CiAgfQp9CgpwdWIgc3RydWN0IERlbGVnYXRvckluZm8gewogIHB1YiBsZXQgaWQ6IFVJbnQzMgogIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpIHsKICAgIGxldCBkZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKCiAgICBzZWxmLmlkID0gZGVsZWdhdG9ySW5mby5pZAogICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IHRva2VuSG9sZGVyUmVmID0gCiAgICAgIGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgICAuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQoKICB2YXIgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPyA9IG5pbAogIGlmIGxldCB0b2tlbkhvbGRlciA9IHRva2VuSG9sZGVyUmVmIHsKICAgIGxldCBsb2NrZWRBZGRyZXNzID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEFkZHJlc3MoKSAgICAgICAKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IHVubG9ja0xpbWl0ID0gdG9rZW5Ib2xkZXIuZ2V0VW5sb2NrTGltaXQoKQogICAgCiAgICB2YXIgbm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgaWYgbGV0IG5vZGVJRCA9IHRva2VuSG9sZGVyLmdldE5vZGVJRCgpIHsKICAgICAgbm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKICAgIH0KCiAgICB2YXIgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgdmFyIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/ID0gbmlsCiAgICBpZiBsZXQgZGVsZWdhdG9yTm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9yTm9kZUlEKCkgewogICAgICBpZiBsZXQgZGVsZWdhdG9ySUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JJRCgpIHsKICAgICAgICBkZWxlZ2F0b3JOb2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlEKQogICAgICAgIGRlbGVnYXRvckluZm8gPSBEZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICAgIH0gCiAgICB9IAoKICAgIGxldCBlcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
          "restakeReward": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
          "restakeUnstaked": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgdW5zdGFrZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlVW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
          "setup": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gc2V0cyB1cCBhbiBhY2NvdW50IHRvIHVzZSBhIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gSXQgd2lsbCB3b3JrIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IGhhdmUgYSByZWd1bGFyIGFjY291bnQsIGEgdHdvLWFjY291bnQgbG9ja2VkIHRva2VucyBzZXR1cCwKLy8vIG9yIHN0YWtpbmcgb2JqZWN0cyBzdG9yZWQgaW4gdGhlIHVubG9ja2VkIGFjY291bnQKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPT0gbmlsIHsKCiAgICAgICAgICAgIC8vIENyZWF0ZSBwcml2YXRlIGNhcGFiaWxpdGllcyBmb3IgdGhlIHRva2VuIGhvbGRlciBhbmQgdW5sb2NrZWQgdmF1bHQKICAgICAgICAgICAgbGV0IGxvY2tlZEhvbGRlciA9IHNpZ25lci5saW5rPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KC9wcml2YXRlL2Zsb3dUb2tlbkhvbGRlciwgdGFyZ2V0OiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIubGluazwmRmxvd1Rva2VuLlZhdWx0PigvcHJpdmF0ZS9mbG93VG9rZW5WYXVsdCwgdGFyZ2V0OiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBsb2NrZWRIb2xkZXIpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBuaWwpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHB1YmxpYyBsaW5rIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICAgICAgc2lnbmVyLmxpbms8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgICAgIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY1BhdGgsCiAgICAgICAgICAgICAgICB0YXJnZXQ6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBzdGFraW5nIGNvbGxlY3Rpb24gcmVmZXJlbmNlIikKCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBub2RlIHN0YWtlciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3IgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
          "unstake": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0cyB1bnN0YWtpbmcgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVxdWVzdFVuc3Rha2luZyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "withdrawLocked": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZVTkdJQkxFVE9LRU5BRERSRVNTCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZMT1dUT0tFTkFERFJFU1MKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TE9DS0VEVE9LRU5BRERSRVNTCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6ICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IGFjY3QuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSkKICAgIH0KfQ==",
          "withdrawReward": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgcmV3YXJkZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdAoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "withdrawUnstaked": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHVuc3Rha2VkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQgaWYgaXQgaXMgdGhlcmUKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLndpdGhkcmF3VW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0="
        },
        "storage": {
          "enableTokenStorage": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKLy8gdG9kbyB3aXRoIHZhcgp0cmFuc2FjdGlvbiB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIGlmKHNpZ25lci5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikgPT0gbmlsKSB7CiAgICBzaWduZXIuc2F2ZSg8LTxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgfQoKICAgIHNpZ25lci51bmxpbmsoCiAgICA8VG9rZW5SZWNlaXZlclBhdGg+CiAgICApCgogICAgc2lnbmVyLmxpbms8JjxUb2tlbj4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCgogICAgc2lnbmVyLnVubGluaygKICAgIDxUb2tlbkJhbGFuY2VQYXRoPgogICAgKQoKICAgIHNpZ25lci5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgPFRva2VuQmFsYW5jZVBhdGg+LAogICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKfQp9",
          "getBasicPublicItems": "cHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPrivateItems": "cHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aAogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPrivatePaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHJpdmF0ZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbUHJpdmF0ZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnByaXZhdGVQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getPublicItem": "Ly8gQSB3b3JrYXJvdW5kIG1ldGhvZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPublicItems": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQoKICBwdWIgbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgcHViIGxldCBpc0NvbGxlY3Rpb25DYXA6IEJvb2wKICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQoKICBwdWIgbGV0IGlzQmFsYW5jZUNhcDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/LCAKICAgIGlzQ29sbGVjdGlvbkNhcDogQm9vbCwgCiAgICB0b2tlbklEczogW1VJbnQ2NF0sCiAgICBpc0JhbGFuY2VDYXA6IEJvb2wsCiAgICBiYWxhbmNlOiBVRml4NjQ/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgICBzZWxmLmlzQ29sbGVjdGlvbkNhcCA9IGlzQ29sbGVjdGlvbkNhcAogICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICBzZWxmLmlzQmFsYW5jZUNhcCA9IGlzQmFsYW5jZUNhcAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhNYXA6IHtTdHJpbmc6IEJvb2x9KTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCgogIGxldCBpdGVtczogW0l0ZW1dID0gW10KICBsZXQgYmFsYW5jZUNhcFR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZBbnlSZXNvdXJjZXtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj4oKQoKICBhY2NvdW50LmZvckVhY2hQdWJsaWMoZnVuIChwYXRoOiBQdWJsaWNQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgdmFyIGlzQ29sbGVjdGlvbkNhcCA9IGZhbHNlCiAgICB2YXIgaXNCYWxhbmNlQ2FwID0gZmFsc2UKICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgaWYgKHR5cGUuaXNTdWJ0eXBlKG9mOiBiYWxhbmNlQ2FwVHlwZSkpIHsKICAgICAgaXNCYWxhbmNlQ2FwID0gdHJ1ZQogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgICAuZ2V0Q2FwYWJpbGl0eShwYXRoKQogICAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkKCiAgICAgIGlmIGxldCB2YXVsdCA9IHZhdWx0UmVmIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdC5iYWxhbmNlCiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSkgewogICAgICBpc0NvbGxlY3Rpb25DYXAgPSB0cnVlCiAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvblJlZiB7CiAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgIH0KICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aCwKICAgICAgaXNDb2xsZWN0aW9uQ2FwOiBpc0NvbGxlY3Rpb25DYXAsCiAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgaXNCYWxhbmNlQ2FwOiBpc0JhbGFuY2VDYXAsCiAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiB0cnVlCiAgfSkKCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getPublicPaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHVibGljUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQdWJsaWNQYXRoXSA9IFtdCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getStoragePaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbU3RvcmFnZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnN0b3JhZ2VQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getStoredItems": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getStoredResource": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlSZXNvdXJjZT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55UmVzb3VyY2U+KGZyb206IHBhdGgpCn0=",
          "getStoredStruct": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlTdHJ1Y3Q/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoU3RyKSEKICByZXR1cm4gYWNjb3VudC5ib3Jyb3c8JkFueVN0cnVjdD4oZnJvbTogcGF0aCkKfQ=="
        },
        "switchboard": {
          "getSwitchboard": "aW1wb3J0IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZCBmcm9tIDB4RnVuZ2libGVUb2tlblN3aXRjaGJvYXJkCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFN3aXRjaGJvYXJkSW5mbyB7CiAgcHViIGxldCB2YXVsdFR5cGVzOiBbVHlwZV0KCiAgaW5pdCh2YXVsdFR5cGVzOiBbVHlwZV0pIHsKICAgIHNlbGYudmF1bHRUeXBlcyA9IHZhdWx0VHlwZXMKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3dpdGNoYm9hcmRJbmZvPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGlmIGxldCBib2FyZCA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQuU3dpdGNoYm9hcmQ+KGZyb206IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5TdG9yYWdlUGF0aCkgewogICAgbGV0IHR5cGVzID0gYm9hcmQuZ2V0VmF1bHRUeXBlcygpCiAgICByZXR1cm4gU3dpdGNoYm9hcmRJbmZvKHZhdWx0VHlwZXM6IHR5cGVzKQogIH0KICByZXR1cm4gbmlsCn0="
        },
        "nft": {
          "checkNFTListEnabledNew": "",
          "checkNFTListEnabled": ""
        }
      },
      "mainnet": {
        "version": "0.42",
        "basic": {
          "addKey": "aW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IGtleSA9IFB1YmxpY0tleSgKICAgICAgICAgICAgcHVibGljS2V5OiBwdWJsaWNLZXkuZGVjb2RlSGV4KCksCiAgICAgICAgICAgIHNpZ25hdHVyZUFsZ29yaXRobTogU2lnbmF0dXJlQWxnb3JpdGhtKHJhd1ZhbHVlOiBzaWduYXR1cmVBbGdvcml0aG0pIQogICAgICAgICkKICAgICAgICBzaWduZXIua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQogICAgfQp9",
          "getAccountInfo": "cHViIHN0cnVjdCBSZXN1bHQgewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0CiAgcHViIGxldCBhdmFpbGFibGVCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHN0b3JhZ2VVc2VkOiBVSW50NjQKICBwdWIgbGV0IHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgYmFsYW5jZTogVUZpeDY0LAogICAgYXZhaWxhYmxlQmFsYW5jZTogVUZpeDY0LAogICAgc3RvcmFnZVVzZWQ6IFVJbnQ2NCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgICBzZWxmLmF2YWlsYWJsZUJhbGFuY2UgPSBhdmFpbGFibGVCYWxhbmNlCiAgICBzZWxmLnN0b3JhZ2VVc2VkID0gc3RvcmFnZVVzZWQKICAgIHNlbGYuc3RvcmFnZUNhcGFjaXR5ID0gc3RvcmFnZUNhcGFjaXR5CiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIHJldHVybiBSZXN1bHQoCiAgICBhZGRyZXNzOiBhY2NvdW50LmFkZHJlc3MsCiAgICBiYWxhbmNlOiBhY2NvdW50LmJhbGFuY2UsCiAgICBhdmFpbGFibGVCYWxhbmNlOiBhY2NvdW50LmF2YWlsYWJsZUJhbGFuY2UsCiAgICBzdG9yYWdlVXNlZDogYWNjb3VudC5zdG9yYWdlVXNlZCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogYWNjb3VudC5zdG9yYWdlQ2FwYWNpdHkKICApCn0=",
          "getAccountTotalFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93PCZGbG93VG9rZW4uVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oKQogICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IEJhbGFuY2UgcmVmZXJlbmNlIHRvIHRoZSBWYXVsdCIpCiAgICBsZXQgdW5sb2NrZWRCYWxhbmNlID0gdW5sb2NrZWRWYXVsdC5iYWxhbmNlCiAgICAgICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZSArIHVubG9ja2VkQmFsYW5jZQp9",
          "getAccountTotalLockedFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gYWNjb3VudAogICAgICAuZ2V0Q2FwYWJpbGl0eQogICAgICA8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcntMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm99PgogICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKICAgIGlmIGxvY2tlZEFjY291bnRJbmZvQ2FwID09IG5pbCB8fCAhKGxvY2tlZEFjY291bnRJbmZvQ2FwIS5jaGVjaygpKSB7CiAgICAgICAgcmV0dXJuIFVGaXg2NCgwKQogICAgfQogICAgCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICBsZXQgbG9ja2VkQmFsYW5jZSA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldExvY2tlZEFjY291bnRCYWxhbmNlKCkKICAgIAogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2UKfQ==",
          "getAccountTotalUnlockedFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IHVubG9ja2VkVmF1bHQgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5KC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkhCiAgICAgIC5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgQmFsYW5jZSByZWZlcmVuY2UgdG8gdGhlIFZhdWx0IikKICAgIGxldCB1bmxvY2tlZEJhbGFuY2UgPSB1bmxvY2tlZFZhdWx0LmJhbGFuY2UKCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQoKICAgIGlmIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA+IGxvY2tlZEJhbGFuY2UgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UgKyBsb2NrZWRCYWxhbmNlCiAgICB9CgogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCArIHVubG9ja2VkQmFsYW5jZQp9",
          "getFindAddress": "aW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKLy9DaGVjayB0aGUgc3RhdHVzIG9mIGEgZmluIHVzZXIKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZykgOiBBZGRyZXNzPyB7CiAgICBsZXQgc3RhdHVzPUZJTkQuc3RhdHVzKG5hbWUpCiAgICByZXR1cm4gc3RhdHVzLm93bmVyCn0=",
          "getFindDomainByAddress": "aW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IFN0cmluZz97CnJldHVybiBGSU5ELnJldmVyc2VMb29rdXAoYWRkcmVzcykKfQ==",
          "getFlownsAddress": "aW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogQWRkcmVzcz8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZWhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQp2YXIgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1laGFzaCkKcmV0dXJuIGFkZHJlc3MKfQ==",
          "getFlownsDomainsByAddress": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKLy8gYWRkcmVzczogRmxvdyBhZGRyZXNzCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtEb21haW5zLkRvbWFpbkRldGFpbF0gewpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCmxldCBkb21haW5zOltEb21haW5zLkRvbWFpbkRldGFpbF0gPSBbXQpsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQoKZm9yIGlkIGluIGlkcyB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKQogICAgbGV0IGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQogICAgZG9tYWlucy5hcHBlbmQoZGV0YWlsKQp9CgpyZXR1cm4gZG9tYWlucwp9",
          "getStorageInfo": "IHB1YiBmdW4gbWFpbihhZGRyOiBBZGRyZXNzKToge1N0cmluZzogVUludDY0fSB7CiAgICBsZXQgYWNjdCA9IGdldEFjY291bnQoYWRkcikKICAgIGxldCByZXQ6IHtTdHJpbmc6IFVJbnQ2NH0gPSB7fQogICAgcmV0WyJjYXBhY2l0eSJdID0gYWNjdC5zdG9yYWdlQ2FwYWNpdHkKICAgIHJldFsidXNlZCJdID0gYWNjdC5zdG9yYWdlVXNlZAogICAgcmV0WyJhdmFpbGFibGUiXSA9IGFjY3Quc3RvcmFnZUNhcGFjaXR5IC0gYWNjdC5zdG9yYWdlVXNlZAogICAgcmV0dXJuIHJldAp9",
          "getTokenBalanceWithModel": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCgogICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgLmdldENhcGFiaWxpdHkoPFRva2VuQmFsYW5jZVBhdGg+KQogICAgLmJvcnJvdzwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigpCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIGNhcGFiaWxpdHkiKQoKICAgIHJldHVybiB2YXVsdFJlZi5iYWxhbmNlCn0=",
          "isLockedFlowEnable": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgIC5nZXRDYXBhYmlsaXR5CiAgICAgIDwmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVye0xvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb30+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gZmFsc2UKICAgIH0KICAgIHJldHVybiB0cnVlCn0=",
          "isTokenStorageEnabled": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICBsZXQgcmVjZWl2ZXI6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAuZ2V0Q2FwYWJpbGl0eTwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5jaGVjaygpCiAgICBsZXQgYmFsYW5jZTogQm9vbCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIC5nZXRDYXBhYmlsaXR5PCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KDxUb2tlbkJhbGFuY2VQYXRoPikKICAgIC5jaGVjaygpCiAgICByZXR1cm4gcmVjZWl2ZXIgJiYgYmFsYW5jZQp9",
          "revokeKey": "dHJhbnNhY3Rpb24oaW5kZXg6IEludCkgewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgLy8gR2V0IGEga2V5IGZyb20gYW4gYXV0aCBhY2NvdW50LgogICAgICAgIGxldCBrZXlBID0gc2lnbmVyLmtleXMucmV2b2tlKGtleUluZGV4OiBpbmRleCkKICAgIH0KfQ==",
          "withdrawAllUnlockedFlow": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICBsZXQgaG9sZGVyUmVmOiAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyCiAgICBsZXQgdmF1bHRSZWY6ICZGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhbW91bnQ6IFVGaXg2NAoKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IGFjY3QuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQoKICAgICAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9DYXAgPSBhY2NvdW50CiAgICAgICAgLmdldENhcGFiaWxpdHk8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcntMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm99PgogICAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQoKICAgICAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgICAgICBwYW5pYygiQ291bGQgbm90IGdldCBmbG93IGxvY2tlZCB0b2tlbiB2YXVsdCIpCiAgICAgICAgfQoKICAgICAgICBsZXQgbG9ja2VkQWNjb3VudEluZm9SZWYgPSBsb2NrZWRBY2NvdW50SW5mb0NhcCEuYm9ycm93KCkhCiAgICAgICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAgICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICAgICAgLy8gaWYgbG9ja2VkQmFsYW5jZSA9PSBVRml4NjQoMCkgewogICAgICAgIC8vICAgICBwYW5pYygiTm90IGVub3VnaCBhbW91bnQgdG8gd2l0aGRyYXciKQogICAgICAgIC8vIH0KCiAgICAgICAgc2VsZi5hbW91bnQgPSBsb2NrZWRCYWxhbmNlVW5sb2NrZWQKICAgIAogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogc2VsZi5hbW91bnQpKQogICAgfQp9",
          "withdrawUnlockedFlow": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKdHJhbnNhY3Rpb24oKSB7CgogICAgbGV0IGhvbGRlclJlZjogJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CgogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gYWNjdC5ib3Jyb3c8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IGFjY3QuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBmbG93IHRva2VuIHZhdWx0IHJlZiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi52YXVsdFJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5ob2xkZXJSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpKQogICAgfQp9"
        },
        "account": {
          "getBookmark": "aW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzLCB0YXJnZXQ6IEFkZHJlc3MpOiAmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJre0Zsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya1B1YmxpY30/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgewogICAgcmV0dXJuIGNvbGxlY3Rpb24uYm9ycm93UHVibGljQWNjb3VudEJvb2ttYXJrKGFkZHJlc3M6IHRhcmdldCkKICB9IAoKICByZXR1cm4gbmlsCn0=",
          "getBookmarks": "aW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzKTogJntBZGRyZXNzOiBGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfX0/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGFjY291bnQgYm9va21hcmsgY29sbGVjdGlvbiIpCgogIHJldHVybiBjb2xsZWN0aW9uLmdldEFjY291bnRCb29rbWFya3MoKQp9"
        },
        "collection": {
          "checkNFTCollection": "ICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgICBpbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCiAgICAvLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCiAgICAvLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgogICAgcHViIGZ1biBjaGVjazxUb2tlbj5WYXVsdChhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQKICAgICAgICAuZ2V0Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KDxUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgICAgICAuY2hlY2soKQogICAgICAgIHJldHVybiB2YXVsdFJlZgogICAgfQoKICAgIHB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IEJvb2wgewogICAgICAgIHJldHVybiBjaGVjazxUb2tlbj5WYXVsdChhZGRyZXNzOiBhZGRyZXNzKQogICAgfQ==",
          "enableNFTStorage": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICBpZiBzaWduZXIuYm9ycm93PCY8TkZUPi5Db2xsZWN0aW9uPihmcm9tOiA8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikgPT0gbmlsIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgIHNpZ25lci5zYXZlKDwtY29sbGVjdGlvbiwgdG86IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgfQogICAgaWYgKHNpZ25lci5nZXRDYXBhYmlsaXR5PCY8Q29sbGVjdGlvblB1YmxpY1R5cGU+Pig8Q29sbGVjdGlvblB1YmxpY1BhdGg+KS5ib3Jyb3coKSA9PSBuaWwpIHsKICAgICAgICBzaWduZXIudW5saW5rKDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgc2lnbmVyLmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICB9CiAgICB9Cn0=",
          "getCatalogTypeData": "aW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbigpOiB7U3RyaW5nIDoge1N0cmluZyA6IEJvb2x9fSB7CiAgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dUeXBlRGF0YSgpCiAgcmV0dXJuIGNhdGFsb2cKfQ==",
          "getNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgVmlld0luZm8gewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgcHViIGxldCB0aHVtYm5haWw6IEFueVN0cnVjdHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgcHViIGxldCByYXJpdHk6IFN0cmluZz8KCiAgaW5pdChuYW1lOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiBTdHJpbmcsIHRodW1ibmFpbDogQW55U3RydWN0e01ldGFkYXRhVmlld3MuRmlsZX0sIHJhcml0eTogU3RyaW5nPykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBzdG9yYWdlUGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme01ldGFkYXRhVmlld3MuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICB9CgogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgKQogICAgfSBlbHNlIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogc3RvcmFnZVBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTCatalogByCollectionIds": "aW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbihjb2xsZWN0aW9uSWRlbnRpZmllcnM6IFtTdHJpbmddKToge1N0cmluZzogTkZUQ2F0YWxvZy5ORlRDYXRhbG9nTWV0YWRhdGF9IHsKICBsZXQgcmVzOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gPSB7fQogIGZvciBjb2xsZWN0aW9uSUQgaW4gY29sbGVjdGlvbklkZW50aWZpZXJzIHsKICAgICAgaWYgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dFbnRyeShjb2xsZWN0aW9uSWRlbnRpZmllcjogY29sbGVjdGlvbklEKSB7CiAgICAgICAgcmVzW2NvbGxlY3Rpb25JRF0gPSBjYXRhbG9nCiAgICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTCollection": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4JCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IENvbGxlY3Rpb25EaXNwbGF5IHsKICBwdWIgbGV0IG5hbWU6IFN0cmluZwogIHB1YiBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIHB1YiBsZXQgbWVkaWFUeXBlOiBTdHJpbmcKCiAgaW5pdChuYW1lOiBTdHJpbmcsIHNxdWFyZUltYWdlOiBTdHJpbmcsIG1lZGlhVHlwZTogU3RyaW5nKSB7CiAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICBzZWxmLnNxdWFyZUltYWdlID0gc3F1YXJlSW1hZ2UKICAgIHNlbGYubWVkaWFUeXBlID0gbWVkaWFUeXBlCiAgfQp9CgpwdWIgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIHB1YiBsZXQgaWQ6IFN0cmluZwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgpwdWIgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcpOiBORlRDb2xsZWN0aW9uIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBzdG9yYWdlUGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkhCiAgcmV0dXJuIE5GVENvbGxlY3Rpb24oCiAgICBpZDogYWNjb3VudC50eXBlKGF0OiBwYXRoKSEuaWRlbnRpZmllciwKICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aCksCiAgICBpZExpc3Q6IGNvbGxlY3Rpb24uZ2V0SURzKCkKICApCn0=",
          "getNFTDisplays": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgVmlld0luZm8gewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgcHViIGxldCB0aHVtYm5haWw6IEFueVN0cnVjdHtNZXRhZGF0YVZpZXdzLkZpbGV9CiAgcHViIGxldCByYXJpdHk6IFN0cmluZz8KICBwdWIgbGV0IGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwoKICBpbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiBBbnlTdHJ1Y3R7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/LCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgICBzZWxmLmNvbGxlY3Rpb25EaXNwbGF5ID0gY29sbGVjdGlvbkRpc3BsYXkKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBzdG9yYWdlUGF0aElELAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IG5pbAogICAgICApCiAgICB9CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlcikgewogICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgIH0KCiAgICAgIHZhciBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgKCFjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQpIHsKICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSB0cnVlCiAgICAgICAgfQogICAgICB9CgogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgdGh1bWJuYWlsOiBkaXNwbGF5LnRodW1ibmFpbCwKICAgICAgICByYXJpdHk6IHJhcml0eURlc2MsCiAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICkKICAgIH0gZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHN0b3JhZ2VQYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTMetadataViews": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRhdGEgewogIHB1YiBsZXQgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoCiAgcHViIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgcHViIGxldCBwcm92aWRlclBhdGg6IFByaXZhdGVQYXRoCiAgcHViIGxldCBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlCiAgcHViIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgcHViIGxldCBwcm92aWRlckxpbmtlZFR5cGU6IFR5cGUKCiAgaW5pdCgKICAgIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgsCiAgICBwcm92aWRlclBhdGg6IFByaXZhdGVQYXRoLAogICAgcHVibGljQ29sbGVjdGlvbjogVHlwZSwKICAgIHB1YmxpY0xpbmtlZFR5cGU6IFR5cGUsCiAgICBwcm92aWRlckxpbmtlZFR5cGU6IFR5cGUKICApIHsKICAgIHNlbGYuc3RvcmFnZVBhdGggPSBzdG9yYWdlUGF0aAogICAgc2VsZi5wdWJsaWNQYXRoID0gcHVibGljUGF0aAogICAgc2VsZi5wcm92aWRlclBhdGggPSBwcm92aWRlclBhdGgKICAgIHNlbGYucHVibGljQ29sbGVjdGlvbiA9IHB1YmxpY0NvbGxlY3Rpb24KICAgIHNlbGYucHVibGljTGlua2VkVHlwZSA9IHB1YmxpY0xpbmtlZFR5cGUKICAgIHNlbGYucHJvdmlkZXJMaW5rZWRUeXBlID0gcHJvdmlkZXJMaW5rZWRUeXBlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgc3RvcmFnZVBhdGhJRDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1N0cmluZzogQW55U3RydWN0fSA9IHt9CgogIGxldCBwYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogc3RvcmFnZVBhdGhJRCkhCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKQogIGlmIGNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgIHBhbmljKCJHZXQgQ29sbGVjdGlvbiBGYWlsZWQiKQogIH0KCiAgbGV0IHR5cGUgPSBhY2NvdW50LnR5cGUoYXQ6IHBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZXtNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgaWYgKCFjb25mb3JtZWRNZXRhZGF0YVZpZXdzKSB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dORlQoaWQ6IHRva2VuSUQpCgogIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgIHJlc1sicmFyaXR5Il0gPSByYXJpdHkKICB9CgogIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICByZXNbImRpc3BsYXkiXSA9IGRpc3BsYXkKICB9CgogIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgIHJlc1siZWRpdGlvbnMiXSA9IGVkaXRpb25zCiAgfQoKICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgIHJlc1sic2VyaWFsIl0gPSBzZXJpYWwKICB9CgogIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgcmVzWyJyb3lhbHRpZXMiXSA9IHJveWFsdGllcwogIH0KCiAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgIHJlc1sibGljZW5zZSJdID0gbGljZW5zZQogIH0KCiAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICByZXNbIm1lZGlhcyJdID0gbWVkaWFzCiAgfQoKICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICByZXNbImV4dGVybmFsVVJMIl0gPSBleHRlcm5hbFVSTAogIH0KCiAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICByZXNbInRyYWl0cyJdID0gdHJhaXRzCiAgfQoKICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICByZXNbImNvbGxlY3Rpb25EaXNwbGF5Il0gPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KCiAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgbGV0IGRhdGEgPSBDb2xsZWN0aW9uRGF0YSgKICAgICAgc3RvcmFnZVBhdGg6IGNvbGxlY3Rpb25EYXRhLnN0b3JhZ2VQYXRoLAogICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICBwcm92aWRlclBhdGg6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyUGF0aCwKICAgICAgcHVibGljQ29sbGVjdGlvbjogY29sbGVjdGlvbkRhdGEucHVibGljQ29sbGVjdGlvbiwKICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgcHJvdmlkZXJMaW5rZWRUeXBlOiBjb2xsZWN0aW9uRGF0YS5wcm92aWRlckxpbmtlZFR5cGUKICAgICkKICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICB9CgogIHJlc1sidG9rZW5JZCJdID0gdG9rZW5JRAoKICByZXR1cm4gcmVzCn0=",
          "sendNbaNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Ci8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJydzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiAvc3RvcmFnZS9Nb21lbnRDb2xsZWN0aW9uKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24iKQogICAgbGV0IHNlbmRlclJlZiA9IHNpZ25lcgogICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9Nb21lbnRDb2xsZWN0aW9uKQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7VG9wU2hvdC5Nb21lbnRDb2xsZWN0aW9uUHVibGljfT4oKQogICAgCiAgICBpZiByZWNpcGllbnRSZWYgPT0gbmlsIHsKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gcmVjaXBpZW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRlZmF1bHREb21haW46ICZ7RG9tYWlucy5Eb21haW5QdWJsaWN9PyA9IG5pbAogICAgCiAgICBsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbgogICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCkhCiAgICAgICAgbGV0IGlzRGVmYXVsdCA9IGRvbWFpbi5nZXRUZXh0KGtleTogImlzRGVmYXVsdCIpCiAgICAgICAgaWYgaXNEZWZhdWx0ID09ICJ0cnVlIiB7CiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgIH0KICAgIGxldCB0eXBlS2V5ID0gY29sbGVjdGlvblJlZi5nZXRUeXBlKCkuaWRlbnRpZmllcgogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcicncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBUb3BTaG90LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgZGVmYXVsdERvbWFpbiEuYWRkQ29sbGVjdGlvbihjb2xsZWN0aW9uOiA8LSBjb2xsZWN0aW9uKQogICAgfQogICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdE5GVChrZXk6IHR5cGVLZXksIHRva2VuOiA8LSBuZnQsIHNlbmRlclJlZjogc2VuZGVyUmVmICkKICAgIH0gZWxzZSB7CiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
          "sendNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyCiAgICAgICAgICAgIC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgICAgIGxldCBkZXBvc2l0UmVmID0gcmVjaXBpZW50CiAgICAgICAgICAgIC5nZXRDYXBhYmlsaXR5KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb24+fT4oKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQ=="
        },
        "contract": {
          "getContractNames": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbU3RyaW5nXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIGFjY291bnQuY29udHJhY3RzLm5hbWVzCn0="
        },
        "domain": {
          "claimFTFromInbox": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDpTdHJpbmcsIGtleTpTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgdmF1bHRSZWY6ICY8VG9rZW4+LlZhdWx0CnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKCiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpIAogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KCiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICBpZiB2YXVsdFJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKICAgIHNlbGYudmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgfSBlbHNlIHsKICAgIHNlbGYudmF1bHRSZWYgPSB2YXVsdFJlZiEKICAgIH0KfQpleGVjdXRlIHsKICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd1ZhdWx0KGtleToga2V5LCBhbW91bnQ6IGFtb3VudCkpCn0KfQ==",
          "claimNFTFromInbox": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKLy8ga2V5IHdpbGwgYmUgJ0EuZjhkNmUwNTg2YjBhMjBjNy5Eb21haW5zLkNvbGxlY3Rpb24nIG9mIGEgTkZUIGNvbGxlY3Rpb24KdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcsIGtleTogU3RyaW5nLCBpdGVtSWQ6IFVJbnQ2NCkgewp2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0KdmFyIGNvbGxlY3Rpb25SZWY6ICY8TkZUPi5Db2xsZWN0aW9uCnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKICAgIHZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfT8gPSBuaWwKICAgIGxldCBjb2xsZWN0aW9uUHJpdmF0ZSA9IGFjY291bnQuYm9ycm93PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHJpdmF0ZX0+KGZyb206IERvbWFpbnMuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA/PyBwYW5pYygiQ291bGQgbm90IGZpbmQgeW91ciBkb21haW4gY29sbGVjdGlvbiBjYXAiKQoKICAgIGxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCiAgICBpZiBpZCAhPW5pbCB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQoKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBhY2NvdW50Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBzZWxmLmNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pPz8gcGFuaWMoIkNhbiBub3QgYm9ycm93IGNvbGxlY3Rpb24iKQogICAgfSBlbHNlIHsKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGNvbGxlY3Rpb25SZWYhCiAgICB9Cgp9CmV4ZWN1dGUgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3TkZUKGtleToga2V5LCBpdGVtSWQ6IGl0ZW1JZCkpCn0KfQ==",
          "getAddressOfDomain": "aW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpOiBBZGRyZXNzPyB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldEFkZHJlc3NPZkRvbWFpbihuYW1lOiBuYW1lLCByb290OiByb290KQp9",
          "getDefaultDomainsOfAddress": "aW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFN0cmluZ30gewogIHJldHVybiBEb21haW5VdGlscy5nZXREZWZhdWx0RG9tYWluc09mQWRkcmVzcyhhZGRyZXNzKQp9",
          "getFlownsInbox": "aW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIGdldERldGFpbChuYW1lSGFzaDogU3RyaW5nKTogRG9tYWlucy5Eb21haW5EZXRhaWw/IHsKbGV0IGFkZHJlc3MgPSBEb21haW5zLmdldFJlY29yZHMobmFtZUhhc2gpID8/IHBhbmljKCJEb21haW4gbm90IGV4aXN0IikKbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCmxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQp2YXIgZGV0YWlsOiBEb21haW5zLkRvbWFpbkRldGFpbD8gPSBuaWwKCmxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCmlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkISkKICAgIGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQp9CgpyZXR1cm4gZGV0YWlsCn0KCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQpyZXR1cm4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBuYW1lSGFzaCkKfQ==",
          "sendInboxNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewoKcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIKICAgIC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgbGV0IHJlY2lwaWVudFJlZiA9IHJlY2lwaWVudAogICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgIGlmIHJlY2lwaWVudFJlZiA9PSBuaWwgewogICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluIAogICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICBkZWZhdWx0RG9tYWluID0gZG9tYWluCiAgICAgICAgfQogICAgfQogICAgbGV0IHR5cGVLZXkgPSBjb2xsZWN0aW9uUmVmLmdldFR5cGUoKS5pZGVudGlmaWVyCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCiAgICBpZiBkZWZhdWx0RG9tYWluIS5jaGVja0NvbGxlY3Rpb24oa2V5OiB0eXBlS2V5KSA9PSBmYWxzZSB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBkZWZhdWx0RG9tYWluIS5hZGRDb2xsZWN0aW9uKGNvbGxlY3Rpb246IDwtIGNvbGxlY3Rpb24pCiAgICB9CiAgICBkZWZhdWx0RG9tYWluIS5kZXBvc2l0TkZUKGtleTogdHlwZUtleSwgdG9rZW46IDwtIG5mdCwgc2VuZGVyUmVmOiBzZW5kZXJSZWYgKQogICAgfSBlbHNlIHsKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
          "transferInboxTokens": "IGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBEb21haW5zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIGlmIHJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgICAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCgogICAgICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgICAgIGlmIGlkcy5sZW5ndGggPT0gMCB7CiAgICAgICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgICAgICAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgZG9tYWluIGluYm94CiAgICAgICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdFZhdWx0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0LCBzZW5kZXJSZWY6IHNlbGYuc2VuZGVyUmVmKQoKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQp9"
        },
        "ft": {
          "addToken": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgp0cmFuc2FjdGlvbiB7CiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgICAgICBpZihzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pICE9IG5pbCkgewogICAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgc2lnbmVyLnNhdmUoPC08VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAKICAgICAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgICAgIDxUb2tlblJlY2VpdmVyUGF0aD4sCiAgICAgICAgICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgICAgICkKICAgICAgICAKICAgICAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICAgICAgPFRva2VuQmFsYW5jZVBhdGg+LAogICAgICAgICAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICAgICApCiAgICB9Cn0=",
          "enableTokenStorage": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewoKcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICBpZihzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pID09IG5pbCkgewogICAgc2lnbmVyLnNhdmUoPC08VG9rZW4+LmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IDxUb2tlblN0b3JhZ2VQYXRoPikKICAgIH0KCiAgICBzaWduZXIudW5saW5rKAogICAgPFRva2VuUmVjZWl2ZXJQYXRoPgogICAgKQoKICAgIHNpZ25lci5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigKICAgIDxUb2tlblJlY2VpdmVyUGF0aD4sCiAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIHNpZ25lci51bmxpbmsoCiAgICA8VG9rZW5CYWxhbmNlUGF0aD4KICAgICkKCiAgICBzaWduZXIubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgIDxUb2tlbkJhbGFuY2VQYXRoPiwKICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCn0KfQ==",
          "transferTokens": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQEZ1bmdpYmxlVG9rZW4uVmF1bHQKCiAgICBwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAvLyBHZXQgdGhlIHJlY2lwaWVudCdzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICBsZXQgcmVjZWl2ZXJSZWYgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikhCiAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVjZWl2ZXIgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBWYXVsdCIpCgogICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ==",
          "isTokenListEnabled": "",
          "getTokenListBalance": ""
        },
        "hybridCustody": {
          "editChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcmVzczogQWRkcmVzcywgbmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IFN0cmluZykgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgbGV0IGQgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkoCiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsKQogICAgICAgICkKCiAgICAgICAgbS5zZXRDaGlsZEFjY291bnREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWRkcmVzcywgZCkKICAgIH0KfQ==",
          "getAccessibleCoinInfo": "IGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFRva2VuSW5mbyB7CnB1YiBsZXQgaWQ6IFN0cmluZwpwdWIgbGV0IGJhbGFuY2U6IFVGaXg2NAoKaW5pdChpZDogU3RyaW5nLCBiYWxhbmNlOiBVRml4NjQpIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQp9Cn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IFtUb2tlbkluZm9dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICB2YXIgY29pbkluZm9MaXN0OiBbVG9rZW5JbmZvXSA9IFtdCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPSBmb3VuZFR5cGVzCgogICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZhdWx0QmFsYW5jZXMKICAgICAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKHZhdWx0VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvaW5JbmZvTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiBjb2luSW5mb0xpc3QKfQo=",
          "getAccessibleCollectionAndIds": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IFtVSW50NjRdfSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIG5mdHMKfQ==",
          "getAccessibleCollectionAndIdsDisplay": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgpwdWIgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNvbGxlY3Rpb25MaXN0OiBbTkZUQ29sbGVjdGlvbl0gPSBbXQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZS5pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWNjb3VudCwgcGF0aDogcGF0aCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIGNvbGxlY3Rpb25MaXN0Cn0=",
          "getAccessibleCollectionsAndIds": "Ly8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBzY3JpcHQgeW91IGNhbiBleGVjdXRlIG9uIEZsb3cgTmV0d29yawppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiB7U3RyaW5nOiBbVUludDY0XX19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICAvLyBBZGRyZXNzIC0+IENvbGxlY3Rpb24gVHlwZSAtPiBvd25lZE5GVHMKICAgIHZhciBhY2Nlc3NpYmxlTkZUczoge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gID0ge30KCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogICAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmZ0cy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIGNvbGxlY3Rpb24uZ2V0SURzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIGFjY2Vzc2libGVORlRzW2FkZHJlc3NdID0gbmZ0cwogICAgfQogICAgcmV0dXJuIGFjY2Vzc2libGVORlRzCn0=",
          "getAccessibleFungibleToken": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFVGaXg2NH0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHRCYWxhbmNlcy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIHZhdWx0LmJhbGFuY2UpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgCiAgICByZXR1cm4gdmF1bHRCYWxhbmNlcwp9",
          "getChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCiAgICBwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKTogW0FkZHJlc3NdIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQogICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQogICAgcmV0dXJuIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKQp9Cg==",
          "getChildAccountMeta": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiB7QWRkcmVzczogQW55U3RydWN0fSB7CmxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQpsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KZm9yIGFkZHJlc3MgaW4gbS5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBjID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBub3QgZm91bmQiKQogICAgbGV0IGQgPSBjLnJlc29sdmVWaWV3KFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpKQogICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBkKQp9CnJldHVybiBkYXRhCn0=",
          "getChildAccountNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IExpbmtlZEFjY291bnRzIGZyb20gMHhDaGlsZEFjY291bnQKCi8vLyBDdXN0b20gc3RydWN0IHRvIG1ha2UgaW50ZXJwcmV0YXRpb24gb2YgTkZUICYgQ29sbGVjdGlvbiBkYXRhIGVhc3kgY2xpZW50IHNpZGUKcHViIHN0cnVjdCBORlREYXRhIHsKICAgIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICAgIHB1YiBsZXQgdGh1bWJuYWlsOiBTdHJpbmcKICAgIHB1YiBsZXQgcmVzb3VyY2VJRDogVUludDY0CiAgICBwdWIgbGV0IG93bmVyQWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgY29sbGVjdGlvbk5hbWU6IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvbkRlc2NyaXB0aW9uOiBTdHJpbmc/CiAgICBwdWIgbGV0IGNvbGxlY3Rpb25VUkw6IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogU3RyaW5nCiAgICBwdWIgbGV0IGNvbGxlY3Rpb25QdWJsaWNQYXRoSWRlbnRpZmllcjogU3RyaW5nPwoKICAgIGluaXQoCiAgICAgICAgbmFtZTogU3RyaW5nLAogICAgICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsCiAgICAgICAgdGh1bWJuYWlsOiBTdHJpbmcsCiAgICAgICAgcmVzb3VyY2VJRDogVUludDY0LAogICAgICAgIG93bmVyQWRkcmVzczogQWRkcmVzcz8sCiAgICAgICAgY29sbGVjdGlvbk5hbWU6IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvbkRlc2NyaXB0aW9uOiBTdHJpbmc/LAogICAgICAgIGNvbGxlY3Rpb25VUkw6IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogU3RyaW5nLAogICAgICAgIGNvbGxlY3Rpb25QdWJsaWNQYXRoSWRlbnRpZmllcjogU3RyaW5nPwogICAgKSB7CiAgICAgICAgc2VsZi5uYW1lID0gbmFtZQogICAgICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICAgICAgc2VsZi5yZXNvdXJjZUlEID0gcmVzb3VyY2VJRAogICAgICAgIHNlbGYub3duZXJBZGRyZXNzID0gb3duZXJBZGRyZXNzCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uTmFtZSA9IGNvbGxlY3Rpb25OYW1lCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uRGVzY3JpcHRpb24gPSBjb2xsZWN0aW9uRGVzY3JpcHRpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb25VUkwgPSBjb2xsZWN0aW9uVVJMCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyID0gY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcgogICAgICAgIHNlbGYuY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyID0gY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyCiAgICB9Cn0KCi8vLyBIZWxwZXIgZnVuY3Rpb24gdGhhdCByZXRyaWV2ZXMgZGF0YSBhYm91dCBhbGwgcHVibGljbHkgYWNjZXNzaWJsZSBORlRzIGluIGFuIGFjY291bnQKLy8vCnB1YiBmdW4gZ2V0QWxsVmlld3NGcm9tQWRkcmVzcyhfIGFkZHJlc3M6IEFkZHJlc3MpOiBbTkZURGF0YV0gewogICAgLy8gR2V0IHRoZSBhY2NvdW50CiAgICBsZXQgYWNjb3VudDogQXV0aEFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogICAgLy8gSW5pdCBmb3IgcmV0dXJuIHZhbHVlCiAgICBsZXQgZGF0YTogW05GVERhdGFdID0gW10KICAgIC8vIEFzc2lnbiB0aGUgdHlwZXMgd2UnbGwgbmVlZAogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgICBsZXQgZGlzcGxheVR5cGU6IFR5cGUgPSBUeXBlPE1ldGFkYXRhVmlld3MuRGlzcGxheT4oKQogICAgbGV0IGNvbGxlY3Rpb25EaXNwbGF5VHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT4oKQogICAgbGV0IGNvbGxlY3Rpb25EYXRhVHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQoKICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIHB1YmxpYyBwYXRoCiAgICBhY2NvdW50LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIGlmIGl0J3MgYSBDb2xsZWN0aW9uIHdlJ3JlIGludGVyZXN0ZWQgaW4sIGlmIHNvLCBnZXQgYSByZWZlcmVuY2UKICAgICAgICBpZiB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIENvbGxlY3Rpb24ncyBORlRzLCBjb250aW51aW5nIGlmIHRoZSBORlQgcmVzb2x2ZXMgdGhlIHZpZXdzIHdlIHdhbnQKICAgICAgICAgICAgICAgIGZvciBpZCBpbiBjb2xsZWN0aW9uUmVmLmdldElEcygpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZXJSZWY6ICZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlcn0gPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogaWQpCiAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhkaXNwbGF5VHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuRGlzcGxheT8gewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhjb2xsZWN0aW9uRGlzcGxheVR5cGUpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhjb2xsZWN0aW9uRGF0YVR5cGUpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdWlsZCBvdXIgTkZURGF0YSBzdHJ1Y3QgZnJvbSB0aGUgbWV0YWRhdGEKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5mdERhdGEgPSBORlREYXRhKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLnVyaSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJRDogcmVzb2x2ZXJSZWYudXVpZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG93bmVyQWRkcmVzczogcmVzb2x2ZXJSZWYub3duZXI/LmFkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTmFtZTogY29sbGVjdGlvbkRpc3BsYXk/Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uRGVzY3JpcHRpb246IGNvbGxlY3Rpb25EaXNwbGF5Py5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25VUkw6IGNvbGxlY3Rpb25EaXNwbGF5Py5leHRlcm5hbFVSTD8udXJsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogcGF0aC50b1N0cmluZygpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBjb2xsZWN0aW9uRGF0YT8ucHVibGljUGF0aD8udG9TdHJpbmcoKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCBpdCB0byBvdXIgZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFwcGVuZChuZnREYXRhKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKICAgIHJldHVybiBkYXRhCn0KCi8vLyBTY3JpcHQgdGhhdCByZXRyaWV2ZSBkYXRhIGFib3V0IGFsbCBwdWJsaWNseSBhY2Nlc3NpYmxlIE5GVHMgaW4gYW4gYWNjb3VudCBhbmQgYW55IG9mIGl0cwovLy8gY2hpbGQgYWNjb3VudHMKLy8vCi8vLyBOb3RlIHRoYXQgdGhpcyBzY3JpcHQgZG9lcyBub3QgY29uc2lkZXIgYWNjb3VudHMgd2l0aCBleGNlcHRpb25hbGx5IGxhcmdlIGNvbGxlY3Rpb25zIAovLy8gd2hpY2ggd291bGQgcmVzdWx0IGluIG1lbW9yeSBlcnJvcnMuIFRvIGNvbXBvc2UgYSBzY3JpcHQgdGhhdCBkb2VzIGNvdmVyIGFjY291bnRzIHdpdGgKLy8vIGEgbGFyZ2UgbnVtYmVyIG9mIHN1Yi1hY2NvdW50cyBhbmQvb3IgTkZUcyB3aXRoaW4gdGhvc2UgYWNjb3VudHMsIHNlZSBleGFtcGxlIDUgaW4KLy8vIHRoZSBORlQgQ2F0YWxvZydzIFJFQURNRTogaHR0cHM6Ly9naXRodWIuY29tL2RhcHBlcmxhYnMvbmZ0LWNhdGFsb2cgYW5kIGFkYXB0IGZvciB1c2UKLy8vIHdpdGggTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvbgovLy8KcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiB7QWRkcmVzczogW05GVERhdGFdfSB7CiAgICBsZXQgYWxsTkZURGF0YToge0FkZHJlc3M6IFtORlREYXRhXX0gPSB7fQogICAgCiAgICAvLyBBZGQgYWxsIHJldHJpZXZlZCB2aWV3cyB0byB0aGUgcnVubmluZyBtYXBwaW5nIGluZGV4ZWQgb24gYWRkcmVzcwogICAgYWxsTkZURGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKGFkZHJlc3MpKQogICAgCiAgICAvKiBJdGVyYXRlIG92ZXIgYW55IGNoaWxkIGFjY291bnRzICovIAogICAgLy8KICAgIC8vIEdldCByZWZlcmVuY2UgdG8gTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvbiBpZiBpdCBleGlzdHMKICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gZ2V0QWNjb3VudChhZGRyZXNzKS5nZXRDYXBhYmlsaXR5PCZMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9ue0xpbmtlZEFjY291bnRzLkNvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgICAgICApLmJvcnJvdygpIHsKICAgICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBsaW5rZWQgYWNjb3VudCBpbiBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uCiAgICAgICAgZm9yIGNoaWxkQWRkcmVzcyBpbiBjb2xsZWN0aW9uUmVmLmdldExpbmtlZEFjY291bnRBZGRyZXNzZXMoKSB7CiAgICAgICAgICAgIGlmICFhbGxORlREYXRhLmNvbnRhaW5zS2V5KGNoaWxkQWRkcmVzcykgewogICAgICAgICAgICAgICAgLy8gSW5zZXJ0IHRoZSBORlQgbWV0YWRhdGEgZm9yIHRob3NlIE5GVHMgaW4gZWFjaCBjaGlsZCBhY2NvdW50CiAgICAgICAgICAgICAgICAvLyBpbmRleGluZyBvbiB0aGUgYWNjb3VudCdzIGFkZHJlc3MKICAgICAgICAgICAgICAgIGFsbE5GVERhdGEuaW5zZXJ0KGtleTogY2hpbGRBZGRyZXNzLCBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKGNoaWxkQWRkcmVzcykpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gYWxsTkZURGF0YSAKfQ==",
          "getChildNFTInfo": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKICAgIGltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAgIAogICAgcHViIHN0cnVjdCBORlRJbmZvIHsKICAgICAgcHViIGxldCBpZDogU3RyaW5nCiAgICAgIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQogICAgCiAgICAgIGluaXQoaWQ6IFN0cmluZywgaWRMaXN0OiBbVUludDY0XSkgewogICAgICAgIHNlbGYuaWQgPSBpZAogICAgICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgICAgIH0KICAgIH0KICAgIAogICAgcHViIHN0cnVjdCBDaGlsZE5GVEluZm8gewogICAgICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICAgICAgcHViIGxldCBpbmZvOiBbTkZUSW5mb10KICAgIAogICAgICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIGluZm86IFtORlRJbmZvXSkgewogICAgICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgICAgICBzZWxmLmluZm8gPSBpbmZvCiAgICAgIH0KICAgIH0KICAgIAogICAgcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcywgY2hpbGQ6IEFkZHJlc3MpOiBDaGlsZE5GVEluZm8gewogICAgICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCiAgICAKICAgICAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQogICAgCiAgICAgICAgbGV0IHByb3ZpZGVyVHlwZSA9IFR5cGU8Q2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pj4oKQogICAgICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgICAgICAvLyBJdGVyYXRlIHRocm91Z2ggY2hpbGQgYWNjb3VudHMKICAgIAogICAgICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkKQogICAgICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICAgICAgbGV0IG5mdHM6IFtORlRJbmZvXSA9IFtdCiAgICAgICAgICAgIGxldCBjaGlsZEFjY3QgPSBtYW5hZ2VyLmJvcnJvd0FjY291bnQoYWRkcjogY2hpbGQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAogICAgCiAgICAgICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9KQogICAgICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkXSA9IGZvdW5kVHlwZXMKICAgIAogICAgICAgICAgICAvLyBpdGVyYXRlIHN0b3JhZ2UsIGNoZWNrIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXIgY29udGFpbnMgdGhlIHR5cGVJZCwgaWYgc28sIGFkZCB0byBuZnRzCiAgICAgICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAKICAgICAgICAgICAgICAgIGlmIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRdID09IG5pbCB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgIAogICAgICAgICAgICAgICAgZm9yIGtleSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyLmtleXMgewogICAgICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UoY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb24gPSBhY2N0LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KGZyb206IHBhdGgpIHsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmZ0cy5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBORlRJbmZvKGlkOiB0eXBlLmlkZW50aWZpZXIsIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfSkKICAgIAogICAgICAgIHJldHVybiBDaGlsZE5GVEluZm8oYWRkcmVzczogY2hpbGQsIGluZm86IG5mdHMpCiAgICB9",
          "unlinkChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCnRyYW5zYWN0aW9uKGNoaWxkOiBBZGRyZXNzKSB7CiAgICBwcmVwYXJlIChhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgbWFuYWdlci5yZW1vdmVDaGlsZChhZGRyOiBjaGlsZCkKICAgIH0KfQ=="
        },
        "staking": {
          "checkSetup": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBCb29sIHsKICAgIHJldHVybiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWRkcmVzcykKfQ==",
          "createDelegator": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlZ2lzdGVycyBhIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uIHJlc291cmNlCi8vLyBmb3IgdGhlIHNwZWNpZmllZCBub2RlSUQgYW5kIHRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGNvbW1pdAoKdHJhbnNhY3Rpb24oaWQ6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
          "createStake": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgbmV3IHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGZyb20gdGhlIGxvY2tlZCB2YXVsdCBhcmUgdXNlZCBmaXJzdCwgaWYgaXQgZXhpc3RzCi8vLyBmb2xsb3dlZCBieSB0aGUgdG9rZW5zIGZyb20gdGhlIHVubG9ja2VkIHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "getApr": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICBsZXQgYXByID0gRmxvd0lEVGFibGVTdGFraW5nLmdldEVwb2NoVG9rZW5QYXlvdXQoKSAvIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRUb3RhbFN0YWtlZCgpIC8gNy4wICogMzY1LjAgKiAoMS4wIC0gRmxvd0lEVGFibGVTdGFraW5nLmdldFJld2FyZEN1dFBlcmNlbnRhZ2UoKSkKICAgIHJldHVybiBhcHIKfQ==",
          "getApyWeekly": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICBsZXQgYXByID0gRmxvd0lEVGFibGVTdGFraW5nLmdldEVwb2NoVG9rZW5QYXlvdXQoKSAvIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRUb3RhbFN0YWtlZCgpICogNTQuMCAqICgxLjAgLSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0UmV3YXJkQ3V0UGVyY2VudGFnZSgpKQogICAgcmV0dXJuIGFwcgp9",
          "getDelegatesIndo": "CmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgpwdWIgc3RydWN0IERlbGVnYXRlSW5mbyB7CiAgICBwdWIgbGV0IGRlbGVnYXRvcklEOiBVSW50MzIKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgZGVsZWdhdGVkTm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbwogICAgcHViIGxldCByZXN0YWthYmxlVW5zdGFrZWRUb2tlbnM6IFVGaXg2NAoKICAgIGluaXQoZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8pIHsKICAgICAgICBzZWxmLmRlbGVnYXRvcklEID0gZGVsZWdhdG9ySW5mby5pZAogICAgICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgICAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCiAgICAgICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9ySW5mby5ub2RlSUQpCiAgICAgICAgc2VsZi5kZWxlZ2F0ZWROb2RlSW5mbyA9IG5vZGVJbmZvCiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYudW5zdGFrYWJsZVRva2VucyA9IHNlbGYudG9rZW5zU3Rha2VkICsgc2VsZi50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
          "getDelegatesInfoArray": "CmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhGbG93VGFibGVTdGFraW5nCi8vIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweFN0YWtpbmdDb2xsZWN0aW9uCiAgICAgICAgCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKTogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSB7CgogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmID0gZ2V0QWNjb3VudChhY2NvdW50KQogICAgICAgIC5nZXRDYXBhYmlsaXR5PCZ7Rmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljfT4oRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiY2Fubm90IGJvcnJvdyByZWZlcmVuY2UgdG8gYWNjdC5TdGFraW5nQ29sbGVjdGlvbiIpCgogICAgcmV0dXJuIHN0YWtpbmdDb2xsZWN0aW9uUmVmLmdldEFsbERlbGVnYXRvckluZm8oKQp9",
          "getDelegatorInfo": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
          "getEpochMetadata": "aW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKGVwb2NoQ291bnRlcjogVUludDY0KTogRmxvd0Vwb2NoLkVwb2NoTWV0YWRhdGE/IHsKICByZXR1cm4gRmxvd0Vwb2NoLmdldEVwb2NoTWV0YWRhdGEoZXBvY2hDb3VudGVyKQp9",
          "getNodeInfo": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
          "getNodesInfo": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgcHViIHZhciBub2RlQ291bnQ6IFVJbnQ2NAogICAgcHViIHZhciBkZWxlZ2F0ZUNvdW50OiBVSW50NjQKCiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBpbml0KGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSwgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dKSB7CgogICAgICAgIHNlbGYubm9kZUNvdW50ID0gVUludDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gVUludDY0KDApCgogICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgICAgIHNlbGYubm9kZUNvdW50ID0gc2VsZi5ub2RlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgICAgIGZvciBkZWxlZ2F0ZUluZm8gaW4gYWxsRGVsZWdhdGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gc2VsZi5kZWxlZ2F0ZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
          "getStakeInfo": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
          "getStakingInfo": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgRXBvY2hJbmZvIHsKICBwdWIgbGV0IGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NAogIHB1YiBsZXQgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CgogIGluaXQoCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NCwKICAgICAgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CiAgKSB7CiAgICAgIHNlbGYuY3VycmVudEVwb2NoQ291bnRlciA9IGN1cnJlbnRFcG9jaENvdW50ZXIKICAgICAgc2VsZi5jdXJyZW50RXBvY2hQaGFzZSA9IGN1cnJlbnRFcG9jaFBoYXNlCiAgfQp9CgpwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/CgogIGluaXQoc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPykgewogICAgc2VsZi5zdGFraW5nSW5mbyA9IHN0YWtpbmdJbmZvCiAgfQp9CgpwdWIgc3RydWN0IFN0YWtpbmdJbmZvIHsKICBwdWIgbGV0IGVwb2NoSW5mbzogRXBvY2hJbmZvCiAgcHViIGxldCBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzICAgCiAgcHViIGxldCBsb2NrZWRCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHVubG9ja0xpbWl0OiBVRml4NjQKICBwdWIgbGV0IG5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/CgogIGluaXQoCiAgICBlcG9jaEluZm86IEVwb2NoSW5mbywKICAgIGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MsCiAgICBsb2NrZWRCYWxhbmNlOiBVRml4NjQsCiAgICB1bmxvY2tMaW1pdDogVUZpeDY0LAogICAgbm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPywKICApIHsKICAgIHNlbGYuZXBvY2hJbmZvID0gZXBvY2hJbmZvCiAgICBzZWxmLmxvY2tlZEFkZHJlc3MgPSBsb2NrZWRBZGRyZXNzCiAgICBzZWxmLmxvY2tlZEJhbGFuY2UgPSBsb2NrZWRCYWxhbmNlCiAgICBzZWxmLnVubG9ja0xpbWl0ID0gdW5sb2NrTGltaXQKICAgIHNlbGYubm9kZUluZm8gPSBub2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JOb2RlSW5mbyA9IGRlbGVnYXRvck5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvckluZm8gPSBkZWxlZ2F0b3JJbmZvCiAgfQp9CgpwdWIgc3RydWN0IE5vZGVJbmZvIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgCiAgcHViIGxldCBkZWxlZ2F0b3JJRENvdW50ZXI6IFVJbnQzMgogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nKSB7CiAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpIAoKICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgc2VsZi5uZXR3b3JraW5nQWRkcmVzcyA9IG5vZGVJbmZvLm5ldHdvcmtpbmdBZGRyZXNzCiAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CiAgfQp9CgpwdWIgc3RydWN0IERlbGVnYXRvckluZm8gewogIHB1YiBsZXQgaWQ6IFVJbnQzMgogIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpIHsKICAgIGxldCBkZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKCiAgICBzZWxmLmlkID0gZGVsZWdhdG9ySW5mby5pZAogICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IHRva2VuSG9sZGVyUmVmID0gCiAgICAgIGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgICAuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQoKICB2YXIgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPyA9IG5pbAogIGlmIGxldCB0b2tlbkhvbGRlciA9IHRva2VuSG9sZGVyUmVmIHsKICAgIGxldCBsb2NrZWRBZGRyZXNzID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEFkZHJlc3MoKSAgICAgICAKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IHVubG9ja0xpbWl0ID0gdG9rZW5Ib2xkZXIuZ2V0VW5sb2NrTGltaXQoKQogICAgCiAgICB2YXIgbm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgaWYgbGV0IG5vZGVJRCA9IHRva2VuSG9sZGVyLmdldE5vZGVJRCgpIHsKICAgICAgbm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKICAgIH0KCiAgICB2YXIgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgdmFyIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/ID0gbmlsCiAgICBpZiBsZXQgZGVsZWdhdG9yTm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9yTm9kZUlEKCkgewogICAgICBpZiBsZXQgZGVsZWdhdG9ySUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JJRCgpIHsKICAgICAgICBkZWxlZ2F0b3JOb2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlEKQogICAgICAgIGRlbGVnYXRvckluZm8gPSBEZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICAgIH0gCiAgICB9IAoKICAgIGxldCBlcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
          "restakeReward": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
          "restakeUnstaked": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgdW5zdGFrZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlVW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
          "setup": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gc2V0cyB1cCBhbiBhY2NvdW50IHRvIHVzZSBhIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gSXQgd2lsbCB3b3JrIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IGhhdmUgYSByZWd1bGFyIGFjY291bnQsIGEgdHdvLWFjY291bnQgbG9ja2VkIHRva2VucyBzZXR1cCwKLy8vIG9yIHN0YWtpbmcgb2JqZWN0cyBzdG9yZWQgaW4gdGhlIHVubG9ja2VkIGFjY291bnQKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPT0gbmlsIHsKCiAgICAgICAgICAgIC8vIENyZWF0ZSBwcml2YXRlIGNhcGFiaWxpdGllcyBmb3IgdGhlIHRva2VuIGhvbGRlciBhbmQgdW5sb2NrZWQgdmF1bHQKICAgICAgICAgICAgbGV0IGxvY2tlZEhvbGRlciA9IHNpZ25lci5saW5rPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KC9wcml2YXRlL2Zsb3dUb2tlbkhvbGRlciwgdGFyZ2V0OiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIubGluazwmRmxvd1Rva2VuLlZhdWx0PigvcHJpdmF0ZS9mbG93VG9rZW5WYXVsdCwgdGFyZ2V0OiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBsb2NrZWRIb2xkZXIpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBuaWwpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHB1YmxpYyBsaW5rIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICAgICAgc2lnbmVyLmxpbms8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgICAgIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY1BhdGgsCiAgICAgICAgICAgICAgICB0YXJnZXQ6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBzdGFraW5nIGNvbGxlY3Rpb24gcmVmZXJlbmNlIikKCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBub2RlIHN0YWtlciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3IgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
          "unstake": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0cyB1bnN0YWtpbmcgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVxdWVzdFVuc3Rha2luZyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "withdrawLocked": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZVTkdJQkxFVE9LRU5BRERSRVNTCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZMT1dUT0tFTkFERFJFU1MKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TE9DS0VEVE9LRU5BRERSRVNTCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6ICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IGFjY3QuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSkKICAgIH0KfQ==",
          "withdrawReward": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgcmV3YXJkZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdAoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "withdrawUnstaked": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHVuc3Rha2VkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQgaWYgaXQgaXMgdGhlcmUKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLndpdGhkcmF3VW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0="
        },
        "storage": {
          "enableTokenStorage": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKLy8gdG9kbyB3aXRoIHZhcgp0cmFuc2FjdGlvbiB7CgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIGlmKHNpZ25lci5ib3Jyb3c8JjxUb2tlbj4uVmF1bHQ+KGZyb206IDxUb2tlblN0b3JhZ2VQYXRoPikgPT0gbmlsKSB7CiAgICBzaWduZXIuc2F2ZSg8LTxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgfQoKICAgIHNpZ25lci51bmxpbmsoCiAgICA8VG9rZW5SZWNlaXZlclBhdGg+CiAgICApCgogICAgc2lnbmVyLmxpbms8JjxUb2tlbj4uVmF1bHR7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KAogICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgIHRhcmdldDogPFRva2VuU3RvcmFnZVBhdGg+CiAgICApCgogICAgc2lnbmVyLnVubGluaygKICAgIDxUb2tlbkJhbGFuY2VQYXRoPgogICAgKQoKICAgIHNpZ25lci5saW5rPCY8VG9rZW4+LlZhdWx0e0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KAogICAgPFRva2VuQmFsYW5jZVBhdGg+LAogICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKfQp9",
          "getBasicPublicItems": "cHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPrivateItems": "cHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aAogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPrivatePaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHJpdmF0ZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbUHJpdmF0ZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnByaXZhdGVQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getPublicItem": "Ly8gQSB3b3JrYXJvdW5kIG1ldGhvZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPublicItems": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQoKICBwdWIgbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgcHViIGxldCBpc0NvbGxlY3Rpb25DYXA6IEJvb2wKICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQoKICBwdWIgbGV0IGlzQmFsYW5jZUNhcDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/LCAKICAgIGlzQ29sbGVjdGlvbkNhcDogQm9vbCwgCiAgICB0b2tlbklEczogW1VJbnQ2NF0sCiAgICBpc0JhbGFuY2VDYXA6IEJvb2wsCiAgICBiYWxhbmNlOiBVRml4NjQ/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgICBzZWxmLmlzQ29sbGVjdGlvbkNhcCA9IGlzQ29sbGVjdGlvbkNhcAogICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICBzZWxmLmlzQmFsYW5jZUNhcCA9IGlzQmFsYW5jZUNhcAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhNYXA6IHtTdHJpbmc6IEJvb2x9KTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCgogIGxldCBpdGVtczogW0l0ZW1dID0gW10KICBsZXQgYmFsYW5jZUNhcFR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZBbnlSZXNvdXJjZXtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj4oKQoKICBhY2NvdW50LmZvckVhY2hQdWJsaWMoZnVuIChwYXRoOiBQdWJsaWNQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgdmFyIGlzQ29sbGVjdGlvbkNhcCA9IGZhbHNlCiAgICB2YXIgaXNCYWxhbmNlQ2FwID0gZmFsc2UKICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgaWYgKHR5cGUuaXNTdWJ0eXBlKG9mOiBiYWxhbmNlQ2FwVHlwZSkpIHsKICAgICAgaXNCYWxhbmNlQ2FwID0gdHJ1ZQogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgICAuZ2V0Q2FwYWJpbGl0eShwYXRoKQogICAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkKCiAgICAgIGlmIGxldCB2YXVsdCA9IHZhdWx0UmVmIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdC5iYWxhbmNlCiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSkgewogICAgICBpc0NvbGxlY3Rpb25DYXAgPSB0cnVlCiAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvblJlZiB7CiAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgIH0KICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aCwKICAgICAgaXNDb2xsZWN0aW9uQ2FwOiBpc0NvbGxlY3Rpb25DYXAsCiAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgaXNCYWxhbmNlQ2FwOiBpc0JhbGFuY2VDYXAsCiAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiB0cnVlCiAgfSkKCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getPublicPaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHVibGljUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQdWJsaWNQYXRoXSA9IFtdCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getStoragePaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbU3RvcmFnZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnN0b3JhZ2VQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getStoredItems": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getStoredResource": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlSZXNvdXJjZT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55UmVzb3VyY2U+KGZyb206IHBhdGgpCn0=",
          "getStoredStruct": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlTdHJ1Y3Q/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoU3RyKSEKICByZXR1cm4gYWNjb3VudC5ib3Jyb3c8JkFueVN0cnVjdD4oZnJvbTogcGF0aCkKfQ=="
        },
        "switchboard": {
          "getSwitchboard": "aW1wb3J0IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZCBmcm9tIDB4RnVuZ2libGVUb2tlblN3aXRjaGJvYXJkCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFN3aXRjaGJvYXJkSW5mbyB7CiAgcHViIGxldCB2YXVsdFR5cGVzOiBbVHlwZV0KCiAgaW5pdCh2YXVsdFR5cGVzOiBbVHlwZV0pIHsKICAgIHNlbGYudmF1bHRUeXBlcyA9IHZhdWx0VHlwZXMKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3dpdGNoYm9hcmRJbmZvPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGlmIGxldCBib2FyZCA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQuU3dpdGNoYm9hcmQ+KGZyb206IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5TdG9yYWdlUGF0aCkgewogICAgbGV0IHR5cGVzID0gYm9hcmQuZ2V0VmF1bHRUeXBlcygpCiAgICByZXR1cm4gU3dpdGNoYm9hcmRJbmZvKHZhdWx0VHlwZXM6IHR5cGVzKQogIH0KICByZXR1cm4gbmlsCn0="
        },
        "nft": {
          "checkNFTListEnabledNew": "",
          "checkNFTListEnabled": ""
        },
        "swap": {
          "DeployPairTemplate": "aW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4N2U2MGRmMDQyYTljMDg2OAp0cmFuc2FjdGlvbihwYWlyVGVtcGxhdGVDb2RlOiBTdHJpbmcpIHsKICAgIHByZXBhcmUoZGVwbG95QWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBsZXQgdG9rZW4wVmF1bHQgPC0gRmxvd1Rva2VuLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGxldCB0b2tlbjFWYXVsdCA8LSBGbG93VG9rZW4uY3JlYXRlRW1wdHlWYXVsdCgpCiAgICAgICAgZGVwbG95QWNjb3VudC5jb250cmFjdHMuYWRkKG5hbWU6ICJTd2FwUGFpciIsIGNvZGU6IHBhaXJUZW1wbGF0ZUNvZGUudXRmOCwgdG9rZW4wVmF1bHQ6IDwtdG9rZW4wVmF1bHQsIHRva2VuMVZhdWx0OiA8LXRva2VuMVZhdWx0KQogICAgfQp9",
          "CreatePairTemplate": "aW1wb3J0IFRva2VuME5hbWUgZnJvbSBUb2tlbjBBZGRyCmltcG9ydCBUb2tlbjFOYW1lIGZyb20gVG9rZW4xQWRkcgppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg3ZTYwZGYwNDJhOWMwODY4CmltcG9ydCBTd2FwRmFjdG9yeSBmcm9tIDB4Y2JlZDRjMzAxNDQxZGVkMgp0cmFuc2FjdGlvbigpIHsKICAgIHByZXBhcmUodXNlckFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgbGV0IGZsb3dWYXVsdFJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgYXNzZXJ0KGZsb3dWYXVsdFJlZi5iYWxhbmNlID49IDAuMDAyLCBtZXNzYWdlOiAiSW5zdWZmaWNpZW50IGJhbGFuY2UgdG8gY3JlYXRlIHBhaXIsIG1pbmltdW0gYmFsYW5jZSByZXF1aXJlbWVudDogMC4wMDIgZmxvdyIpCiAgICAgICAgbGV0IGFjY291bnRDcmVhdGlvbkZlZVZhdWx0IDwtIGZsb3dWYXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IDAuMDAxKQogICAgICAgIGxldCB0b2tlbjBWYXVsdCA8LSBUb2tlbjBOYW1lLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIGxldCB0b2tlbjFWYXVsdCA8LSBUb2tlbjFOYW1lLmNyZWF0ZUVtcHR5VmF1bHQoKQogICAgICAgIFN3YXBGYWN0b3J5LmNyZWF0ZVBhaXIodG9rZW4wVmF1bHQ6IDwtdG9rZW4wVmF1bHQsIHRva2VuMVZhdWx0OiA8LXRva2VuMVZhdWx0LCBhY2NvdW50Q3JlYXRpb25GZWU6IDwtYWNjb3VudENyZWF0aW9uRmVlVmF1bHQpCiAgICB9Cn0=",
          "AddLiquidity": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhjYmVkNGMzMDE0NDFkZWQyCmltcG9ydCBTd2FwSW50ZXJmYWNlcyBmcm9tIDB4ZGRiOTI5MDM4ZDQ1ZDRiMwppbXBvcnQgU3dhcENvbmZpZyBmcm9tIDB4ZGRiOTI5MDM4ZDQ1ZDRiMwppbXBvcnQgU3dhcEVycm9yIGZyb20gMHhkZGI5MjkwMzhkNDVkNGIzCnRyYW5zYWN0aW9uKAogICAgdG9rZW4wS2V5OiBTdHJpbmcsCiAgICB0b2tlbjFLZXk6IFN0cmluZywKICAgIHRva2VuMEluRGVzaXJlZDogVUZpeDY0LAogICAgdG9rZW4xSW5EZXNpcmVkOiBVRml4NjQsCiAgICB0b2tlbjBJbk1pbjogVUZpeDY0LAogICAgdG9rZW4xSW5NaW46IFVGaXg2NCwKICAgIGRlYWRsaW5lOiBVRml4NjQsCiAgICB0b2tlbjBWYXVsdFBhdGg6IFN0b3JhZ2VQYXRoLAogICAgdG9rZW4xVmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKKSB7CiAgICBwcmVwYXJlKHVzZXJBY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIGFzc2VydChkZWFkbGluZSA+PSBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAsIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIkFkZExpcXVpZGl0eTogZXhwaXJlZCAiLmNvbmNhdChkZWFkbGluZS50b1N0cmluZygpKS5jb25jYXQoIiA8ICIpLmNvbmNhdChnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAudG9TdHJpbmcoKSksCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuRVhQSVJFRAogICAgICAgICAgICApCiAgICAgICAgKQogICAgICAgIGxldCBwYWlyQWRkciA9IFN3YXBGYWN0b3J5LmdldFBhaXJBZGRyZXNzKHRva2VuMEtleTogdG9rZW4wS2V5LCB0b2tlbjFLZXk6IHRva2VuMUtleSkKICAgICAgICAgICAgPz8gcGFuaWMoIkFkZExpcXVpZGl0eTogbm9uZXhpc3RlbnQgcGFpciAiLmNvbmNhdCh0b2tlbjBLZXkpLmNvbmNhdCgiIDwtPiAiKS5jb25jYXQodG9rZW4xS2V5KS5jb25jYXQoIiwgY3JlYXRlIHBhaXIgZmlyc3QiKSkKICAgICAgICBsZXQgcGFpclB1YmxpY1JlZiA9IGdldEFjY291bnQocGFpckFkZHIpLmdldENhcGFiaWxpdHk8JntTd2FwSW50ZXJmYWNlcy5QYWlyUHVibGljfT4oU3dhcENvbmZpZy5QYWlyUHVibGljUGF0aCkuYm9ycm93KCkhCiAgICAgICAgbGV0IHBhaXJJbmZvID0gcGFpclB1YmxpY1JlZi5nZXRQYWlySW5mbygpCiAgICAgICAgdmFyIHRva2VuMEluID0gMC4wCiAgICAgICAgdmFyIHRva2VuMUluID0gMC4wCiAgICAgICAgdmFyIHRva2VuMFJlc2VydmUgPSAwLjAKICAgICAgICB2YXIgdG9rZW4xUmVzZXJ2ZSA9IDAuMAogICAgICAgIGlmIHRva2VuMEtleSA9PSAocGFpckluZm9bMF0gYXMhIFN0cmluZykgewogICAgICAgICAgICB0b2tlbjBSZXNlcnZlID0gKHBhaXJJbmZvWzJdIGFzISBVRml4NjQpCiAgICAgICAgICAgIHRva2VuMVJlc2VydmUgPSAocGFpckluZm9bM10gYXMhIFVGaXg2NCkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0b2tlbjBSZXNlcnZlID0gKHBhaXJJbmZvWzNdIGFzISBVRml4NjQpCiAgICAgICAgICAgIHRva2VuMVJlc2VydmUgPSAocGFpckluZm9bMl0gYXMhIFVGaXg2NCkKICAgICAgICB9CiAgICAgICAgaWYgdG9rZW4wUmVzZXJ2ZSA9PSAwLjAgJiYgdG9rZW4xUmVzZXJ2ZSA9PSAwLjAgewogICAgICAgICAgICB0b2tlbjBJbiA9IHRva2VuMEluRGVzaXJlZAogICAgICAgICAgICB0b2tlbjFJbiA9IHRva2VuMUluRGVzaXJlZAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBhbW91bnQxT3B0aW1hbCA9IFN3YXBDb25maWcucXVvdGUoYW1vdW50QTogdG9rZW4wSW5EZXNpcmVkLCByZXNlcnZlQTogdG9rZW4wUmVzZXJ2ZSwgcmVzZXJ2ZUI6IHRva2VuMVJlc2VydmUpCiAgICAgICAgICAgIGlmIChhbW91bnQxT3B0aW1hbCA8PSB0b2tlbjFJbkRlc2lyZWQpIHsKICAgICAgICAgICAgICAgIGFzc2VydChhbW91bnQxT3B0aW1hbCA+PSB0b2tlbjFJbk1pbiwgbWVzc2FnZToKICAgICAgICAgICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICAgICAgICAgIG1zZzogIlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UgZXhwZWN0IG1pbiIuY29uY2F0KHRva2VuMUluTWluLnRvU3RyaW5nKCkpLmNvbmNhdCgiIGdvdCAiKS5jb25jYXQoYW1vdW50MU9wdGltYWwudG9TdHJpbmcoKSksCiAgICAgICAgICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5TTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgdG9rZW4wSW4gPSB0b2tlbjBJbkRlc2lyZWQKICAgICAgICAgICAgICAgIHRva2VuMUluID0gYW1vdW50MU9wdGltYWwKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBhbW91bnQwT3B0aW1hbCA9IFN3YXBDb25maWcucXVvdGUoYW1vdW50QTogdG9rZW4xSW5EZXNpcmVkLCByZXNlcnZlQTogdG9rZW4xUmVzZXJ2ZSwgcmVzZXJ2ZUI6IHRva2VuMFJlc2VydmUpCiAgICAgICAgICAgICAgICBhc3NlcnQoYW1vdW50ME9wdGltYWwgPD0gdG9rZW4wSW5EZXNpcmVkKQogICAgICAgICAgICAgICAgYXNzZXJ0KGFtb3VudDBPcHRpbWFsID49IHRva2VuMEluTWluLCBtZXNzYWdlOgogICAgICAgICAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgICAgICAgICAgbXNnOiAiU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRSBleHBlY3QgbWluIi5jb25jYXQodG9rZW4wSW5NaW4udG9TdHJpbmcoKSkuY29uY2F0KCIgZ290ICIpLmNvbmNhdChhbW91bnQwT3B0aW1hbC50b1N0cmluZygpKSwKICAgICAgICAgICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICB0b2tlbjBJbiA9IGFtb3VudDBPcHRpbWFsCiAgICAgICAgICAgICAgICB0b2tlbjFJbiA9IHRva2VuMUluRGVzaXJlZAogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGxldCB0b2tlbjBWYXVsdCA8LSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuMFZhdWx0UGF0aCkhLndpdGhkcmF3KGFtb3VudDogdG9rZW4wSW4pCiAgICAgICAgbGV0IHRva2VuMVZhdWx0IDwtIHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW4xVmF1bHRQYXRoKSEud2l0aGRyYXcoYW1vdW50OiB0b2tlbjFJbikKICAgICAgICBsZXQgbHBUb2tlblZhdWx0IDwtIHBhaXJQdWJsaWNSZWYuYWRkTGlxdWlkaXR5KAogICAgICAgICAgICB0b2tlbkFWYXVsdDogPC0gdG9rZW4wVmF1bHQsCiAgICAgICAgICAgIHRva2VuQlZhdWx0OiA8LSB0b2tlbjFWYXVsdAogICAgICAgICkKICAgICAgICBsZXQgbHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCA9IFN3YXBDb25maWcuTHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aAogICAgICAgIGxldCBscFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGggPSBTd2FwQ29uZmlnLkxwVG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aAogICAgICAgIHZhciBscFRva2VuQ29sbGVjdGlvblJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmU3dhcEZhY3RvcnkuTHBUb2tlbkNvbGxlY3Rpb24+KGZyb206IGxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgaWYgbHBUb2tlbkNvbGxlY3Rpb25SZWYgPT0gbmlsIHsKICAgICAgICAgICAgZGVzdHJveSA8LSB1c2VyQWNjb3VudC5sb2FkPEBBbnlSZXNvdXJjZT4oZnJvbTogbHBUb2tlbkNvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgdXNlckFjY291bnQuc2F2ZSg8LVN3YXBGYWN0b3J5LmNyZWF0ZUVtcHR5THBUb2tlbkNvbGxlY3Rpb24oKSwgdG86IGxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIHVzZXJBY2NvdW50Lmxpbms8JntTd2FwSW50ZXJmYWNlcy5McFRva2VuQ29sbGVjdGlvblB1YmxpY30+KGxwVG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aCwgdGFyZ2V0OiBscFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICBscFRva2VuQ29sbGVjdGlvblJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmU3dhcEZhY3RvcnkuTHBUb2tlbkNvbGxlY3Rpb24+KGZyb206IGxwVG9rZW5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIGxwVG9rZW5Db2xsZWN0aW9uUmVmIS5kZXBvc2l0KHBhaXJBZGRyOiBwYWlyQWRkciwgbHBUb2tlblZhdWx0OiA8LSBscFRva2VuVmF1bHQpCiAgICB9Cn0=",
          "RemoveLiquidity": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKaW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhjYmVkNGMzMDE0NDFkZWQyCmltcG9ydCBTd2FwSW50ZXJmYWNlcyBmcm9tIDB4ZGRiOTI5MDM4ZDQ1ZDRiMwppbXBvcnQgU3dhcENvbmZpZyBmcm9tIDB4ZGRiOTI5MDM4ZDQ1ZDRiMwppbXBvcnQgU3dhcEVycm9yIGZyb20gMHhkZGI5MjkwMzhkNDVkNGIzCnRyYW5zYWN0aW9uKAogICAgdG9rZW4wS2V5OiBTdHJpbmcsCiAgICB0b2tlbjFLZXk6IFN0cmluZywKICAgIGxwVG9rZW5BbW91bnQ6IFVGaXg2NCwKICAgIHRva2VuME91dE1pbjogVUZpeDY0LAogICAgdG9rZW4xT3V0TWluOiBVRml4NjQsCiAgICBkZWFkbGluZTogVUZpeDY0LAogICAgdG9rZW4wVmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHRva2VuMVZhdWx0UGF0aDogU3RvcmFnZVBhdGgsCikgewogICAgcHJlcGFyZSh1c2VyQWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBhc3NlcnQoZGVhZGxpbmUgPj0gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wLCBtZXNzYWdlOgogICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICBtc2c6ICJSZW1vdmVMaXF1aWRpdHk6IGV4cGlyZWQgIi5jb25jYXQoZGVhZGxpbmUudG9TdHJpbmcoKSkuY29uY2F0KCIgPCAiKS5jb25jYXQoZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wLnRvU3RyaW5nKCkpLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLkVYUElSRUQKICAgICAgICAgICAgKQogICAgICAgICkKICAgICAgICBsZXQgcGFpckFkZHIgPSBTd2FwRmFjdG9yeS5nZXRQYWlyQWRkcmVzcyh0b2tlbjBLZXk6IHRva2VuMEtleSwgdG9rZW4xS2V5OiB0b2tlbjFLZXkpCiAgICAgICAgICAgID8/IHBhbmljKCJSZW1vdmVMaXF1aWRpdHk6IG5vbmV4aXN0ZW50IHBhaXIgIi5jb25jYXQodG9rZW4wS2V5KS5jb25jYXQoIiA8LT4gIikuY29uY2F0KHRva2VuMUtleSkuY29uY2F0KCIsIGNyZWF0ZSBwYWlyIGZpcnN0IikpCiAgICAgICAgbGV0IGxwVG9rZW5Db2xsZWN0aW9uUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZTd2FwRmFjdG9yeS5McFRva2VuQ29sbGVjdGlvbj4oZnJvbTogU3dhcENvbmZpZy5McFRva2VuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiUmVtb3ZlTGlxdWlkaXR5OiBjYW5ub3QgYm9ycm93IHJlZmVyZW5jZSB0byBMcFRva2VuQ29sbGVjdGlvbiIpCiAgICAgICAgbGV0IGxwVG9rZW5SZW1vdmUgPC0gbHBUb2tlbkNvbGxlY3Rpb25SZWYud2l0aGRyYXcocGFpckFkZHI6IHBhaXJBZGRyLCBhbW91bnQ6IGxwVG9rZW5BbW91bnQpCiAgICAgICAgbGV0IHRva2VucyA8LSBnZXRBY2NvdW50KHBhaXJBZGRyKS5nZXRDYXBhYmlsaXR5PCZ7U3dhcEludGVyZmFjZXMuUGFpclB1YmxpY30+KFN3YXBDb25maWcuUGFpclB1YmxpY1BhdGgpLmJvcnJvdygpIS5yZW1vdmVMaXF1aWRpdHkobHBUb2tlblZhdWx0OiA8LWxwVG9rZW5SZW1vdmUpCiAgICAgICAgbGV0IHRva2VuMFZhdWx0IDwtIHRva2Vuc1swXS53aXRoZHJhdyhhbW91bnQ6IHRva2Vuc1swXS5iYWxhbmNlKQogICAgICAgIGxldCB0b2tlbjFWYXVsdCA8LSB0b2tlbnNbMV0ud2l0aGRyYXcoYW1vdW50OiB0b2tlbnNbMV0uYmFsYW5jZSkKICAgICAgICBkZXN0cm95IHRva2VucwogICAgICAgIGFzc2VydCh0b2tlbjBWYXVsdC5iYWxhbmNlID49IHRva2VuME91dE1pbiAmJiB0b2tlbjFWYXVsdC5iYWxhbmNlID49IHRva2VuMU91dE1pbiwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiUmVtb3ZlTGlxdWlkaXR5OiBJTlNVRkZJQ0lFTlRfUkVNT1ZFX0xJUVVJRElUWV9PVVRfQU1PVU5UIiwKICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5TTElQUEFHRV9PRkZTRVRfVE9PX0xBUkdFCiAgICAgICAgICAgICkKICAgICAgICApCiAgICAgICAgbGV0IGxvY2FsVmF1bHQwUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbjBWYXVsdFBhdGgpIQogICAgICAgIGxldCBsb2NhbFZhdWx0MVJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW4xVmF1bHRQYXRoKSEKICAgICAgICBpZiB0b2tlbjBWYXVsdC5pc0luc3RhbmNlKGxvY2FsVmF1bHQwUmVmLmdldFR5cGUoKSkgewogICAgICAgICAgICBsb2NhbFZhdWx0MFJlZi5kZXBvc2l0KGZyb206IDwtdG9rZW4wVmF1bHQpCiAgICAgICAgICAgIGxvY2FsVmF1bHQxUmVmLmRlcG9zaXQoZnJvbTogPC10b2tlbjFWYXVsdCkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsb2NhbFZhdWx0MFJlZi5kZXBvc2l0KGZyb206IDwtdG9rZW4xVmF1bHQpCiAgICAgICAgICAgIGxvY2FsVmF1bHQxUmVmLmRlcG9zaXQoZnJvbTogPC10b2tlbjBWYXVsdCkKICAgICAgICB9CiAgICB9Cn0=",
          "SwapExactTokensForTokens": "aW1wb3J0IFRva2VuMU5hbWUgZnJvbSBUb2tlbjFBZGRyCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBTd2FwUm91dGVyIGZyb20gMHgyZjhhZjVlZDA1YmJkZTBkCmltcG9ydCBTd2FwRXJyb3IgZnJvbSAweGRkYjkyOTAzOGQ0NWQ0YjMKdHJhbnNhY3Rpb24oCiAgICB0b2tlbktleUZsYXRTcGxpdFBhdGg6IFtTdHJpbmddLAogICAgYW1vdW50SW5TcGxpdDogW1VGaXg2NF0sCiAgICBhbW91bnRPdXRNaW46IFVGaXg2NCwKICAgIGRlYWRsaW5lOiBVRml4NjQsCiAgICB0b2tlbkluVmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHRva2VuT3V0VmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHRva2VuT3V0UmVjZWl2ZXJQYXRoOiBQdWJsaWNQYXRoLAogICAgdG9rZW5PdXRCYWxhbmNlUGF0aDogUHVibGljUGF0aCwKKSB7CiAgICBwcmVwYXJlKHVzZXJBY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIGFzc2VydChkZWFkbGluZSA+PSBnZXRDdXJyZW50QmxvY2soKS50aW1lc3RhbXAsIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIkVYUElSRUQiLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLkVYUElSRUQKICAgICAgICAgICAgKQogICAgICAgICkKICAgICAgICBsZXQgbGVuID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoLmxlbmd0aAogICAgICAgIGxldCB0b2tlbkluS2V5ID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoWzBdCiAgICAgICAgbGV0IHRva2VuT3V0S2V5ID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoW2xlbi0xXQogICAgICAgIHZhciB0b2tlbk91dEFtb3VudFRvdGFsID0gMC4wCiAgICAgICAgdmFyIHRva2VuT3V0UmVjZWl2ZXJSZWYgPSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgIGlmIHRva2VuT3V0UmVjZWl2ZXJSZWYgPT0gbmlsIHsKICAgICAgICAgICAgdXNlckFjY291bnQuc2F2ZSg8LSBUb2tlbjFOYW1lLmNyZWF0ZUVtcHR5VmF1bHQoKSwgdG86IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgICAgICB1c2VyQWNjb3VudC5saW5rPCZUb2tlbjFOYW1lLlZhdWx0e0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Pih0b2tlbk91dFJlY2VpdmVyUGF0aCwgdGFyZ2V0OiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICAgICAgdXNlckFjY291bnQubGluazwmVG9rZW4xTmFtZS5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9Pih0b2tlbk91dEJhbGFuY2VQYXRoLCB0YXJnZXQ6IHRva2VuT3V0VmF1bHRQYXRoKQogICAgICAgICAgICB0b2tlbk91dFJlY2VpdmVyUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICB9CiAgICAgICAgdmFyIHBhdGhJbmRleCA9IDAKICAgICAgICB2YXIgaSA9IDAKICAgICAgICB2YXIgcGF0aDogW1N0cmluZ10gPSBbXQogICAgICAgIHdoaWxlKGkgPCBsZW4pIHsKICAgICAgICAgICAgdmFyIGN1clRva2VuS2V5ID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoW2ldCiAgICAgICAgICAgIHBhdGguYXBwZW5kKGN1clRva2VuS2V5KQogICAgICAgICAgICBpZiAoY3VyVG9rZW5LZXkgPT0gdG9rZW5PdXRLZXkpIHsKICAgICAgICAgICAgICAgIGxvZyhwYXRoKQogICAgICAgICAgICAgICAgbGV0IHRva2VuSW5BbW91bnQgPSBhbW91bnRJblNwbGl0W3BhdGhJbmRleF0KICAgICAgICAgICAgICAgIGxldCB0b2tlbkluVmF1bHQgPC0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbkluVmF1bHRQYXRoKSEud2l0aGRyYXcoYW1vdW50OiB0b2tlbkluQW1vdW50KQogICAgICAgICAgICAgICAgbGV0IHRva2VuT3V0VmF1bHQgPC0gU3dhcFJvdXRlci5zd2FwV2l0aFBhdGgodmF1bHRJbjogPC0gdG9rZW5JblZhdWx0LCB0b2tlbktleVBhdGg6IHBhdGgsIGV4YWN0QW1vdW50czogbmlsKQogICAgICAgICAgICAgICAgdG9rZW5PdXRBbW91bnRUb3RhbCA9IHRva2VuT3V0QW1vdW50VG90YWwgKyB0b2tlbk91dFZhdWx0LmJhbGFuY2UKICAgICAgICAgICAgICAgIHRva2VuT3V0UmVjZWl2ZXJSZWYhLmRlcG9zaXQoZnJvbTogPC0gdG9rZW5PdXRWYXVsdCkKICAgICAgICAgICAgICAgIHBhdGggPSBbXQogICAgICAgICAgICAgICAgcGF0aEluZGV4ID0gcGF0aEluZGV4ICsgMQogICAgICAgICAgICB9CiAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgIH0KICAgICAgICBhc3NlcnQodG9rZW5PdXRBbW91bnRUb3RhbCA+PSBhbW91bnRPdXRNaW4sIG1lc3NhZ2U6CiAgICAgICAgICAgIFN3YXBFcnJvci5FcnJvckVuY29kZSgKICAgICAgICAgICAgICAgIG1zZzogIlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UgZXhwZWN0IG1pbiAiLmNvbmNhdChhbW91bnRPdXRNaW4udG9TdHJpbmcoKSkuY29uY2F0KCIgZ290ICIpLmNvbmNhdCh0b2tlbk91dEFtb3VudFRvdGFsLnRvU3RyaW5nKCkpLAogICAgICAgICAgICAgICAgZXJyOiBTd2FwRXJyb3IuRXJyb3JDb2RlLlNMSVBQQUdFX09GRlNFVF9UT09fTEFSR0UKICAgICAgICAgICAgKQogICAgICAgICkKICAgIH0KfQ==",
          "SwapTokensForExactTokens": "aW1wb3J0IFRva2VuMU5hbWUgZnJvbSBUb2tlbjFBZGRyCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHg5YTA3NjZkOTNiNjYwOGI3CmltcG9ydCBTd2FwUm91dGVyIGZyb20gMHgyZjhhZjVlZDA1YmJkZTBkCmltcG9ydCBTd2FwRXJyb3IgZnJvbSAweGRkYjkyOTAzOGQ0NWQ0YjMKdHJhbnNhY3Rpb24oCiAgICB0b2tlbktleUZsYXRTcGxpdFBhdGg6IFtTdHJpbmddLAogICAgYW1vdW50T3V0U3BsaXQ6IFtVRml4NjRdLAogICAgYW1vdW50SW5NYXg6IFVGaXg2NCwKICAgIGRlYWRsaW5lOiBVRml4NjQsCiAgICB0b2tlbkluVmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHRva2VuT3V0VmF1bHRQYXRoOiBTdG9yYWdlUGF0aCwKICAgIHRva2VuT3V0UmVjZWl2ZXJQYXRoOiBQdWJsaWNQYXRoLAogICAgdG9rZW5PdXRCYWxhbmNlUGF0aDogUHVibGljUGF0aCwKKSB7CiAgICBwcmVwYXJlKHVzZXJBY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIGFzc2VydCggZGVhZGxpbmUgPj0gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wLCBtZXNzYWdlOgogICAgICAgICAgICBTd2FwRXJyb3IuRXJyb3JFbmNvZGUoCiAgICAgICAgICAgICAgICBtc2c6ICJFWFBJUkVEIiwKICAgICAgICAgICAgICAgIGVycjogU3dhcEVycm9yLkVycm9yQ29kZS5FWFBJUkVECiAgICAgICAgICAgICkKICAgICAgICApCiAgICAgICAgbGV0IGxlbiA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aC5sZW5ndGgKICAgICAgICBsZXQgdG9rZW5JbktleSA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aFswXQogICAgICAgIGxldCB0b2tlbk91dEtleSA9IHRva2VuS2V5RmxhdFNwbGl0UGF0aFtsZW4tMV0KICAgICAgICB2YXIgdG9rZW5PdXRBbW91bnRUb3RhbCA9IDAuMAogICAgICAgIHZhciB0b2tlbk91dFJlY2VpdmVyUmVmID0gdXNlckFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICBpZiB0b2tlbk91dFJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgICAgIHVzZXJBY2NvdW50LnNhdmUoPC0gVG9rZW4xTmFtZS5jcmVhdGVFbXB0eVZhdWx0KCksIHRvOiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICAgICAgdXNlckFjY291bnQubGluazwmVG9rZW4xTmFtZS5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4odG9rZW5PdXRSZWNlaXZlclBhdGgsIHRhcmdldDogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgICAgIHVzZXJBY2NvdW50Lmxpbms8JlRva2VuMU5hbWUuVmF1bHR7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4odG9rZW5PdXRCYWxhbmNlUGF0aCwgdGFyZ2V0OiB0b2tlbk91dFZhdWx0UGF0aCkKICAgICAgICAgICAgdG9rZW5PdXRSZWNlaXZlclJlZiA9IHVzZXJBY2NvdW50LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogdG9rZW5PdXRWYXVsdFBhdGgpCiAgICAgICAgfQogICAgICAgIHZhciBwYXRoSW5kZXggPSAwCiAgICAgICAgdmFyIGkgPSAwCiAgICAgICAgdmFyIHBhdGg6IFtTdHJpbmddID0gW10KICAgICAgICB2YXIgYW1vdW50SW5Ub3RhbCA9IDAuMAogICAgICAgIHdoaWxlKGkgPCBsZW4pIHsKICAgICAgICAgICAgdmFyIGN1clRva2VuS2V5ID0gdG9rZW5LZXlGbGF0U3BsaXRQYXRoW2ldCiAgICAgICAgICAgIHBhdGguYXBwZW5kKGN1clRva2VuS2V5KQogICAgICAgICAgICBpZiAoY3VyVG9rZW5LZXkgPT0gdG9rZW5PdXRLZXkpIHsKICAgICAgICAgICAgICAgIGxvZyhwYXRoKQogICAgICAgICAgICAgICAgbGV0IHRva2VuT3V0RXhwZWN0QW1vdW50ID0gYW1vdW50T3V0U3BsaXRbcGF0aEluZGV4XQogICAgICAgICAgICAgICAgbGV0IGFtb3VudHMgPSBTd2FwUm91dGVyLmdldEFtb3VudHNJbihhbW91bnRPdXQ6IHRva2VuT3V0RXhwZWN0QW1vdW50LCB0b2tlbktleVBhdGg6IHBhdGgpCiAgICAgICAgICAgICAgICBsZXQgdG9rZW5JbkFtb3VudCA9IGFtb3VudHNbMF0KICAgICAgICAgICAgICAgIGFtb3VudEluVG90YWwgPSBhbW91bnRJblRvdGFsICsgdG9rZW5JbkFtb3VudAogICAgICAgICAgICAgICAgbGV0IHRva2VuSW5WYXVsdCA8LSB1c2VyQWNjb3VudC5ib3Jyb3c8JkZ1bmdpYmxlVG9rZW4uVmF1bHQ+KGZyb206IHRva2VuSW5WYXVsdFBhdGgpIS53aXRoZHJhdyhhbW91bnQ6IHRva2VuSW5BbW91bnQpCiAgICAgICAgICAgICAgICBsZXQgdG9rZW5PdXRWYXVsdCA8LSBTd2FwUm91dGVyLnN3YXBXaXRoUGF0aCh2YXVsdEluOiA8LSB0b2tlbkluVmF1bHQsIHRva2VuS2V5UGF0aDogcGF0aCwgZXhhY3RBbW91bnRzOiBhbW91bnRzKQogICAgICAgICAgICAgICAgdG9rZW5PdXRBbW91bnRUb3RhbCA9IHRva2VuT3V0QW1vdW50VG90YWwgKyB0b2tlbk91dFZhdWx0LmJhbGFuY2UKICAgICAgICAgICAgICAgIHRva2VuT3V0UmVjZWl2ZXJSZWYhLmRlcG9zaXQoZnJvbTogPC0gdG9rZW5PdXRWYXVsdCkKICAgICAgICAgICAgICAgIHBhdGggPSBbXQogICAgICAgICAgICAgICAgcGF0aEluZGV4ID0gcGF0aEluZGV4ICsgMQogICAgICAgICAgICB9CiAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgIH0KICAgICAgICBhc3NlcnQoYW1vdW50SW5Ub3RhbCA8PSBhbW91bnRJbk1heCwgbWVzc2FnZToKICAgICAgICAgICAgU3dhcEVycm9yLkVycm9yRW5jb2RlKAogICAgICAgICAgICAgICAgbXNnOiAiU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRSIsCiAgICAgICAgICAgICAgICBlcnI6IFN3YXBFcnJvci5FcnJvckNvZGUuU0xJUFBBR0VfT0ZGU0VUX1RPT19MQVJHRQogICAgICAgICAgICApCiAgICAgICAgKQogICAgfQp9",
          "MintAllTokens": "",
          "QueryTokenNames": "cHViIGZ1biBtYWluKHF1ZXJ5QWRkcjogQWRkcmVzcyk6IFtTdHJpbmddIHsKICAgIGxldCBuYW1lcyA9IGdldEFjY291bnQocXVlcnlBZGRyKS5jb250cmFjdHMubmFtZXMKICAgIGxldCB0b2tlbk5hbWVzOiBbU3RyaW5nXSA9IFtdCiAgICBsZXQgY29sb246IFVJbnQ4ID0gNTgKICAgIGxldCBzcGFjZTogVUludDggPSAzMgogICAgbGV0IGJyYWNlOiBVSW50OCA9IDEyMwogICAgbGV0IHRva2VuSW5kZW50aWZpZXI6IFtVSW50OF0gPSBbNzAsIDExNywgMTEwLCAxMDMsIDEwNSwgOTgsIDEwOCwgMTAxLCA4NCwgMTExLCAxMDcsIDEwMSwgMTEwXSAKICAgIGxldCBpbmRlbnRpZmllckxlbmd0aCA9IHRva2VuSW5kZW50aWZpZXIubGVuZ3RoCiAgICBmb3IgbmFtZSBpbiBuYW1lcyB7CiAgICAgICAgbGV0IGNvZGUgPSBnZXRBY2NvdW50KHF1ZXJ5QWRkcikuY29udHJhY3RzLmdldChuYW1lOiBuYW1lKSEuY29kZQogICAgICAgIGxldCBjb2RlTGVuZ3RoID0gY29kZS5sZW5ndGgKICAgICAgICB2YXIgaXNUb2tlbiA9IGZhbHNlCiAgICAgICAgdmFyIGkgPSAxMwogICAgICAgIHdoaWxlKGkgPCBjb2RlTGVuZ3RoLTEpIHsKICAgICAgICAgICAgaWYgY29kZVtpXSA9PSBicmFjZSB7CiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGNvZGVbaV0gPT0gY29sb24gJiYgY29kZVtpKzFdID09IHNwYWNlIHsKICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICAgICAgd2hpbGUoY29kZVtpXSA9PSBzcGFjZSAmJiBpIDwgY29kZUxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIGogPSAwCiAgICAgICAgICAgICAgICB3aGlsZShqIDwgaW5kZW50aWZpZXJMZW5ndGggJiYgaSA8IGNvZGVMZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICBpZiBjb2RlW2ldID09IHRva2VuSW5kZW50aWZpZXJbal0gewogICAgICAgICAgICAgICAgICAgICAgICBpID0gaSArIDEKICAgICAgICAgICAgICAgICAgICAgICAgaiA9IGogKyAxCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBqID09IGluZGVudGlmaWVyTGVuZ3RoICYmIChjb2RlW2ldPT1zcGFjZSB8fCBjb2RlW2ldPT1icmFjZSkgewogICAgICAgICAgICAgICAgICAgIGlzVG9rZW4gPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGkgPSBpICsgMQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIGlzVG9rZW4gewogICAgICAgICAgICB0b2tlbk5hbWVzLmFwcGVuZChuYW1lKQogICAgICAgIH0KICAgIH0KICAgIGxvZyh0b2tlbk5hbWVzKQogICAgcmV0dXJuIHRva2VuTmFtZXMKfQ==",
          "QueryPairArrayAddr": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhjYmVkNGMzMDE0NDFkZWQyCnB1YiBmdW4gbWFpbihmcm9tOiBVSW50NjQsIHRvOiBVSW50NjQpOiBbQWRkcmVzc10gewogICAgcmV0dXJuIFN3YXBGYWN0b3J5LmdldFNsaWNlZFBhaXJzKGZyb206IGZyb20sIHRvOiB0bykKfQo=",
          "QueryPairArrayInfo": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhjYmVkNGMzMDE0NDFkZWQyCgpwdWIgZnVuIG1haW4oZnJvbTogVUludDY0LCB0bzogVUludDY0KTogW0FueVN0cnVjdF0gewogICAgaWYgZnJvbSA8IDE2ICYmIHRvID4gMTYgewogICAgICAgIGxldCBhMTogW0FueVN0cnVjdF0gPSBTd2FwRmFjdG9yeS5nZXRTbGljZWRQYWlySW5mb3MoZnJvbTogMCwgdG86IDE1KSBhcyEgW0FueVN0cnVjdF0KICAgICAgICBsZXQgYTI6IFtBbnlTdHJ1Y3RdID0gU3dhcEZhY3RvcnkuZ2V0U2xpY2VkUGFpckluZm9zKGZyb206IDE5LCB0bzogdG8pIGFzISBbQW55U3RydWN0XQogICAgICAgIGZvciBwIGluIGEyIHsgYTEuYXBwZW5kKHApIH0KICAgICAgICByZXR1cm4gYTEKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIFN3YXBGYWN0b3J5LmdldFNsaWNlZFBhaXJJbmZvcyhmcm9tOiBmcm9tLCB0bzogdG8pCiAgICB9ICAgIAp9Cg==",
          "QueryPairInfoByAddrs": "aW1wb3J0IFN3YXBJbnRlcmZhY2VzIGZyb20gMHhkZGI5MjkwMzhkNDVkNGIzCmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhkZGI5MjkwMzhkNDVkNGIzCnB1YiBmdW4gbWFpbihwYWlyQWRkcnM6IFtBZGRyZXNzXSk6IFtBbnlTdHJ1Y3RdIHsKICAgIHZhciByZXM6IFtBbnlTdHJ1Y3RdID0gW10KICAgIHZhciBpID0gMAogICAgdmFyIGxlbiA9IHBhaXJBZGRycy5sZW5ndGgKICAgIHdoaWxlKGkgPCBsZW4pIHsKICAgICAgICByZXMuYXBwZW5kKAogICAgICAgICAgICBnZXRBY2NvdW50KHBhaXJBZGRyc1tpXSkuZ2V0Q2FwYWJpbGl0eTwme1N3YXBJbnRlcmZhY2VzLlBhaXJQdWJsaWN9PihTd2FwQ29uZmlnLlBhaXJQdWJsaWNQYXRoKS5ib3Jyb3coKSEuZ2V0UGFpckluZm8oKQogICAgICAgICkKICAgICAgICBpID0gaSArIDEKICAgIH0KICAgIHJldHVybiByZXMKfQo=",
          "QueryPairInfoByTokenKey": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhjYmVkNGMzMDE0NDFkZWQyCnB1YiBmdW4gbWFpbih0b2tlbjBLZXk6U3RyaW5nICx0b2tlbjFLZXk6U3RyaW5nKTogQW55U3RydWN0PyB7CiAgICByZXR1cm4gU3dhcEZhY3RvcnkuZ2V0UGFpckluZm8odG9rZW4wS2V5OiB0b2tlbjBLZXksIHRva2VuMUtleTogdG9rZW4xS2V5KQp9",
          "QueryUserAllLiquidities": "aW1wb3J0IFN3YXBGYWN0b3J5IGZyb20gMHhjYmVkNGMzMDE0NDFkZWQyCmltcG9ydCBTd2FwQ29uZmlnIGZyb20gMHhkZGI5MjkwMzhkNDVkNGIzCmltcG9ydCBTd2FwSW50ZXJmYWNlcyBmcm9tIDB4ZGRiOTI5MDM4ZDQ1ZDRiMwpwdWIgZnVuIG1haW4odXNlckFkZHI6IEFkZHJlc3MpOiB7QWRkcmVzczogVUZpeDY0fSB7CiAgICB2YXIgbHBUb2tlbkNvbGxlY3Rpb25QdWJsaWNQYXRoID0gU3dhcENvbmZpZy5McFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgIGxldCBscFRva2VuQ29sbGVjdGlvbkNhcCA9IGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntTd2FwSW50ZXJmYWNlcy5McFRva2VuQ29sbGVjdGlvblB1YmxpY30+KGxwVG9rZW5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgIGlmIGxwVG9rZW5Db2xsZWN0aW9uQ2FwLmNoZWNrKCkgPT0gZmFsc2UgewogICAgICAgIHJldHVybiB7fQogICAgfQogICAgbGV0IGxwVG9rZW5Db2xsZWN0aW9uUmVmID0gbHBUb2tlbkNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICBsZXQgbGlxdWlkaXR5UGFpckFkZHJzID0gbHBUb2tlbkNvbGxlY3Rpb25SZWYuZ2V0QWxsTFBUb2tlbnMoKQogICAgdmFyIHJlczoge0FkZHJlc3M6IFVGaXg2NH0gPSB7fQogICAgZm9yIHBhaXJBZGRyIGluIGxpcXVpZGl0eVBhaXJBZGRycyB7CiAgICAgICAgdmFyIGxwVG9rZW5BbW91bnQgPSBscFRva2VuQ29sbGVjdGlvblJlZi5nZXRMcFRva2VuQmFsYW5jZShwYWlyQWRkcjogcGFpckFkZHIpCiAgICAgICAgcmVzW3BhaXJBZGRyXSA9IGxwVG9rZW5BbW91bnQKICAgIH0KICAgIHJldHVybiByZXMKfQ==",
          "QueryTimestamp": "cHViIGZ1biBtYWluKCk6IFVGaXg2NCB7CiAgICByZXR1cm4gZ2V0Q3VycmVudEJsb2NrKCkudGltZXN0YW1wCn0=",
          "QueryVaultBalanceBatched": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKcHViIGZ1biBtYWluKHVzZXJBZGRyOiBBZGRyZXNzLCB2YXVsdFBhdGhzOiBbUHVibGljUGF0aF0pOiBbVUZpeDY0XSB7CiAgICB2YXIgYmFsYW5jZXM6IFtVRml4NjRdID0gW10KICAgIGZvciB2YXVsdFBhdGggaW4gdmF1bHRQYXRocyB7CiAgICAgICAgbGV0IHZhdWx0QmFsYW5jZSA9IGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9Pih2YXVsdFBhdGgpCiAgICAgICAgaWYgdmF1bHRCYWxhbmNlLmNoZWNrKCkgPT0gZmFsc2UgfHwgdmF1bHRCYWxhbmNlLmJvcnJvdygpID09IG5pbCB7CiAgICAgICAgICAgIGJhbGFuY2VzLmFwcGVuZCgwLjApCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgYmFsYW5jZXMuYXBwZW5kKHZhdWx0QmFsYW5jZS5ib3Jyb3coKSEuYmFsYW5jZSkKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gYmFsYW5jZXMKfQ==",
          "QueryTokenPathPrefix": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweDlhMDc2NmQ5M2I2NjA4YjcKcHViIGZ1biBtYWluKHRva2VuTmFtZTogU3RyaW5nLCB0b2tlbkFkZHI6IEFkZHJlc3MsIHVzZXJBZGRyOiBBZGRyZXNzKToge1N0cmluZzogQW55U3RydWN0fSB7CiAgICBsZXQgY29kZSA9IGdldEFjY291bnQodG9rZW5BZGRyKS5jb250cmFjdHMuZ2V0KG5hbWU6IHRva2VuTmFtZSkhLmNvZGUKICAgIHZhciBsb2NhbFByZWZpeCA9ICIiCiAgICB2YXIgYmFsYW5jZVBhdGggPSAvcHVibGljL1BhdGhQcmVmaXgxQmFsYW5jZQogICAgdmFyIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDFSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MSIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4MkJhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDJSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MiIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4M0JhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDNSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4MyIKICAgIH0KICAgIGJhbGFuY2VQYXRoID0gL3B1YmxpYy9QYXRoUHJlZml4NEJhbGFuY2UKICAgIHJlY2VpdmVyUGF0aCA9IC9wdWJsaWMvUGF0aFByZWZpeDRSZWNlaXZlcgogICAgaWYgZ2V0QWNjb3VudCh1c2VyQWRkcikuZ2V0Q2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KGJhbGFuY2VQYXRoKS5jaGVjaygpICYmIGdldEFjY291bnQodXNlckFkZHIpLmdldENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocmVjZWl2ZXJQYXRoKS5jaGVjaygpIHsKICAgICAgICBsb2NhbFByZWZpeCA9ICJQYXRoUHJlZml4NCIKICAgIH0KICAgIHJldHVybiB7CiAgICAgICAgIkxvY2FsUHJlZml4IjogbG9jYWxQcmVmaXgsCiAgICAgICAgIlRva2VuQ29kZSI6IGNvZGUKICAgIH0KfQ==",
          "CenterTokens": [
            "A.7e60df042a9c0868.FlowToken",
            "A.f9dad0d4c14a92b5.wFlow",
            "A.e5b5624186770886.FUSD",
            "A.f9dad0d4c14a92b5.BUSD",
            "A.f9dad0d4c14a92b5.USDT",
            "A.e5b5624186770886.USDC",
            "A.48adb192e4b081b0.BLT"
          ]
        }
      },
      "previewnet": {
        "version": "1.0",
        "basic": {
          "addKey": "aW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5OiBTdHJpbmcsIHNpZ25hdHVyZUFsZ29yaXRobTogVUludDgsIGhhc2hBbGdvcml0aG06IFVJbnQ4LCB3ZWlnaHQ6IFVGaXg2NCkgewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQm9ycm93VmFsdWUgfCBTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGxldCBhY2NvdW50ID0gQWNjb3VudChwYXllcjogc2lnbmVyKQogICAgICAgIGFjY291bnQua2V5cy5hZGQoCiAgICAgICAgICAgIHB1YmxpY0tleToga2V5LAogICAgICAgICAgICBoYXNoQWxnb3JpdGhtOiBIYXNoQWxnb3JpdGhtKHJhd1ZhbHVlOiBoYXNoQWxnb3JpdGhtKSEsCiAgICAgICAgICAgIHdlaWdodDogd2VpZ2h0CiAgICAgICAgKQogICAgfQp9",
          "addKeyTemp": "aW1wb3J0IENyeXB0bwoKdHJhbnNhY3Rpb24ocHVibGljS2V5czogW0NyeXB0by5LZXlMaXN0RW50cnldLCBjb250cmFjdHM6IHtTdHJpbmc6IFN0cmluZ30pIHsKCXByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlIHwgU3RvcmFnZSkgJkFjY291bnQpIHsKCgkJbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgoJCS8vIGFkZCBhbGwgdGhlIGtleXMgdG8gdGhlIGFjY291bnQKCQlmb3Iga2V5IGluIHB1YmxpY0tleXMgewoJCQlhY2NvdW50LmtleXMuYWRkKHB1YmxpY0tleToga2V5LnB1YmxpY0tleSwgaGFzaEFsZ29yaXRobToga2V5Lmhhc2hBbGdvcml0aG0sIHdlaWdodDoga2V5LndlaWdodCkKCQl9CgkJCgkJLy8gYWRkIGNvbnRyYWN0cyBpZiBwcm92aWRlZAoJCWZvciBjb250cmFjdCBpbiBjb250cmFjdHMua2V5cyB7CgkJCWFjY291bnQuY29udHJhY3RzLmFkZChuYW1lOiBjb250cmFjdCwgY29kZTogY29udHJhY3RzW2NvbnRyYWN0XSEuZGVjb2RlSGV4KCkpCgkJfQoJfQp9",
          "getAccountInfo": "YWNjZXNzKGFsbCkgc3RydWN0IFJlc3VsdCB7CiAgYWNjZXNzKGFsbCkgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBhY2Nlc3MoYWxsKSBsZXQgYmFsYW5jZTogVUZpeDY0CiAgYWNjZXNzKGFsbCkgbGV0IGF2YWlsYWJsZUJhbGFuY2U6IFVGaXg2NAogIGFjY2VzcyhhbGwpIGxldCBzdG9yYWdlVXNlZDogVUludDY0CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLAogICAgYmFsYW5jZTogVUZpeDY0LAogICAgYXZhaWxhYmxlQmFsYW5jZTogVUZpeDY0LAogICAgc3RvcmFnZVVzZWQ6IFVJbnQ2NCwKICAgIHN0b3JhZ2VDYXBhY2l0eTogVUludDY0CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLmJhbGFuY2UgPSBiYWxhbmNlCiAgICBzZWxmLmF2YWlsYWJsZUJhbGFuY2UgPSBhdmFpbGFibGVCYWxhbmNlCiAgICBzZWxmLnN0b3JhZ2VVc2VkID0gc3RvcmFnZVVzZWQKICAgIHNlbGYuc3RvcmFnZUNhcGFjaXR5ID0gc3RvcmFnZUNhcGFjaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogUmVzdWx0IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICByZXR1cm4gUmVzdWx0KAogICAgYWRkcmVzczogYWNjb3VudC5hZGRyZXNzLAogICAgYmFsYW5jZTogYWNjb3VudC5iYWxhbmNlLAogICAgYXZhaWxhYmxlQmFsYW5jZTogYWNjb3VudC5hdmFpbGFibGVCYWxhbmNlLAogICAgc3RvcmFnZVVzZWQ6IGFjY291bnQuc3RvcmFnZS51c2VkLAogICAgc3RvcmFnZUNhcGFjaXR5OiBhY2NvdW50LnN0b3JhZ2UuY2FwYWNpdHkKICApCn0=",
          "getAccountTotalFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwovLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5Ci8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBVRml4NjQgewogICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICBsZXQgdW5sb2NrZWRWYXVsdCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQ8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQogICAgICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldAogICAgICA8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4KICAgICAgKExvY2tlZFRva2Vucy5Mb2NrZWRBY2NvdW50SW5mb1B1YmxpY1BhdGgpCiAgICBpZiBsb2NrZWRBY2NvdW50SW5mb0NhcCA9PSBuaWwgfHwgIShsb2NrZWRBY2NvdW50SW5mb0NhcCEuY2hlY2soKSkgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UKICAgIH0KICAgIAogICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgbGV0IGxvY2tlZEJhbGFuY2UgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRMb2NrZWRBY2NvdW50QmFsYW5jZSgpCiAgICAKICAgIHJldHVybiBsb2NrZWRCYWxhbmNlICsgdW5sb2NrZWRCYWxhbmNlCn0=",
          "getAccountTotalLockedFlowBalance": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKLy8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gVUZpeDY0KDApCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgCiAgICByZXR1cm4gbG9ja2VkQmFsYW5jZQp9",
          "getAccountTotalUnlockedFlowBalance": "Ly8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogVUZpeDY0IHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgIGxldCB1bmxvY2tlZFZhdWx0ID0gYWNjb3VudAogICAgICAuY2FwYWJpbGl0aWVzLmdldDwmRmxvd1Rva2VuLlZhdWx0PigvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpIQogICAgICAuYm9ycm93KCkKICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIHJlZmVyZW5jZSB0byB0aGUgVmF1bHQiKQogICAgbGV0IHVubG9ja2VkQmFsYW5jZSA9IHVubG9ja2VkVmF1bHQuYmFsYW5jZQoKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb0NhcCA9IGFjY291bnQKICAgICAgLmNhcGFiaWxpdGllcy5nZXQKICAgICAgPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+CiAgICAgIChMb2NrZWRUb2tlbnMuTG9ja2VkQWNjb3VudEluZm9QdWJsaWNQYXRoKQogICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICByZXR1cm4gdW5sb2NrZWRCYWxhbmNlCiAgICB9CiAgICAKICAgIGxldCBsb2NrZWRBY2NvdW50SW5mb1JlZiA9IGxvY2tlZEFjY291bnRJbmZvQ2FwIS5ib3Jyb3coKSEKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA9IGxvY2tlZEFjY291bnRJbmZvUmVmLmdldFVubG9ja0xpbWl0KCkKCiAgICBpZiBsb2NrZWRCYWxhbmNlID09IFVGaXg2NCgwKSB7CiAgICAgICAgcmV0dXJuIHVubG9ja2VkQmFsYW5jZQogICAgfQoKICAgIGlmIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCA+IGxvY2tlZEJhbGFuY2UgewogICAgICAgIHJldHVybiB1bmxvY2tlZEJhbGFuY2UgKyBsb2NrZWRCYWxhbmNlCiAgICB9CgogICAgcmV0dXJuIGxvY2tlZEJhbGFuY2VVbmxvY2tlZCArIHVubG9ja2VkQmFsYW5jZQp9",
          "getFindAddress": "aW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKLy9DaGVjayB0aGUgc3RhdHVzIG9mIGEgZmluIHVzZXIKcHViIGZ1biBtYWluKG5hbWU6IFN0cmluZykgOiBBZGRyZXNzPyB7CiAgICBsZXQgc3RhdHVzPUZJTkQuc3RhdHVzKG5hbWUpCiAgICByZXR1cm4gc3RhdHVzLm93bmVyCn0=",
          "getFindDomainByAddress": "aW1wb3J0IEZJTkQgZnJvbSAweEZpbmQKCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IFN0cmluZz97CnJldHVybiBGSU5ELnJldmVyc2VMb29rdXAoYWRkcmVzcykKfQ==",
          "getFlownsAddress": "aW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpIDogQWRkcmVzcz8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZWhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQp2YXIgYWRkcmVzcyA9IERvbWFpbnMuZ2V0UmVjb3JkcyhuYW1laGFzaCkKcmV0dXJuIGFkZHJlc3MKfQ==",
          "getFlownsDomainsByAddress": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKLy8gYWRkcmVzczogRmxvdyBhZGRyZXNzCgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtEb21haW5zLkRvbWFpbkRldGFpbF0gewpsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKbGV0IGNvbGxlY3Rpb25DYXAgPSBhY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQpsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCmxldCBkb21haW5zOltEb21haW5zLkRvbWFpbkRldGFpbF0gPSBbXQpsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQoKZm9yIGlkIGluIGlkcyB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKQogICAgbGV0IGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQogICAgZG9tYWlucy5hcHBlbmQoZGV0YWlsKQp9CgpyZXR1cm4gZG9tYWlucwp9",
          "getStorageInfo": "IGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHI6IEFkZHJlc3MpOiB7U3RyaW5nOiBVSW50NjR9IHsKICAgIGxldCBhY2N0ID0gZ2V0QWNjb3VudChhZGRyKQogICAgbGV0IHJldDoge1N0cmluZzogVUludDY0fSA9IHt9CiAgICByZXRbImNhcGFjaXR5Il0gPSBhY2N0LnN0b3JhZ2UuY2FwYWNpdHkKICAgIHJldFsidXNlZCJdID0gYWNjdC5zdG9yYWdlLnVzZWQKICAgIHJldFsiYXZhaWxhYmxlIl0gPSBhY2N0LnN0b3JhZ2UuY2FwYWNpdHkgLSAgYWNjdC5zdG9yYWdlLnVzZWQKICAgIHJldHVybiByZXQKfQ==",
          "getTokenBalanceWithModel": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFVGaXg2NCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKCiAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntGdW5naWJsZVRva2VuLkJhbGFuY2V9Pig8VG9rZW5CYWxhbmNlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBCYWxhbmNlIGNhcGFiaWxpdHkiKQoKICAgIHJldHVybiB2YXVsdFJlZi5iYWxhbmNlCn0=",
          "isLockedFlowEnable": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TG9ja2VkVG9rZW5zCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICAgIHJldHVybiBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdHMoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKfQ==",
          "isTokenStorageEnabled": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAKICAgIGxldCByZWNlaXZlciA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmV4aXN0cyg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgbGV0IGJhbGFuY2UgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KQoKICAgIHJldHVybiByZWNlaXZlciAmJiBiYWxhbmNlCn0=",
          "revokeKey": "dHJhbnNhY3Rpb24oaW5kZXg6IEludCkgewogICAgcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgLy8gR2V0IGEga2V5IGZyb20gYW4gYXV0aCBhY2NvdW50LgogICAgICAgIGxldCBrZXlBID0gc2lnbmVyLmtleXMucmV2b2tlKGtleUluZGV4OiBpbmRleCkKICAgIH0KfQ==",
          "test": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGEwMjI1ZTcwMDBhYzgyYTkKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
          "withdrawAllUnlockedFlow": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwovLyBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4ZWU4Mjg1NmJmMjBlMmFhNgovLyBpbXBvcnQgRmxvd1Rva2VuIGZyb20gMHgwYWU1M2NiNmUzZjQyYTc5Ci8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCnRyYW5zYWN0aW9uKCkgewoKICAgIGxldCBob2xkZXJSZWY6IGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcgogICAgbGV0IHZhdWx0UmVmOiAmRmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYW1vdW50OiBVRml4NjQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgc2VsZi5ob2xkZXJSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyPihmcm9tOiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gVG9rZW5Ib2xkZXIiKQoKCQkJCXNlbGYudmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dUb2tlbi5WYXVsdD4oZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGZsb3cgdG9rZW4gdmF1bHQgcmVmIikKCiAgICAgICAgbGV0IGxvY2tlZEFjY291bnRJbmZvQ2FwID0gc2lnbmVyCiAgICAgICAgLmNhcGFiaWxpdGllcy5nZXQ8JkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4KICAgICAgICAoTG9ja2VkVG9rZW5zLkxvY2tlZEFjY291bnRJbmZvUHVibGljUGF0aCkKCiAgICAgICAgaWYgbG9ja2VkQWNjb3VudEluZm9DYXAgPT0gbmlsIHx8ICEobG9ja2VkQWNjb3VudEluZm9DYXAhLmNoZWNrKCkpIHsKICAgICAgICAgICAgcGFuaWMoIkNvdWxkIG5vdCBnZXQgZmxvdyBsb2NrZWQgdG9rZW4gdmF1bHQiKQogICAgICAgIH0KCiAgICAgICAgbGV0IGxvY2tlZEFjY291bnRJbmZvUmVmID0gbG9ja2VkQWNjb3VudEluZm9DYXAhLmJvcnJvdygpIQogICAgICAgIGxldCBsb2NrZWRCYWxhbmNlID0gbG9ja2VkQWNjb3VudEluZm9SZWYuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgICAgIGxldCBsb2NrZWRCYWxhbmNlVW5sb2NrZWQgPSBsb2NrZWRBY2NvdW50SW5mb1JlZi5nZXRVbmxvY2tMaW1pdCgpCgogICAgICAgIC8vIGlmIGxvY2tlZEJhbGFuY2UgPT0gVUZpeDY0KDApIHsKICAgICAgICAvLyAgICAgcGFuaWMoIk5vdCBlbm91Z2ggYW1vdW50IHRvIHdpdGhkcmF3IikKICAgICAgICAvLyB9CgogICAgICAgIHNlbGYuYW1vdW50ID0gbG9ja2VkQmFsYW5jZVVubG9ja2VkCiAgICAKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnZhdWx0UmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLmhvbGRlclJlZi53aXRoZHJhdyhhbW91bnQ6IHNlbGYuYW1vdW50KSkKICAgIH0KfQ==",
          "withdrawUnlockedFlow": "Ly8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCi8vIGltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweExvY2tlZFRva2VucwoKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3Cgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6IGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuaG9sZGVyUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oZnJvbTogTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIFRva2VuSG9sZGVyIikKCiAgICAgICAgc2VsZi52YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSkKICAgIH0KfQ=="
        },
        "account": {
          "getBookmark": "aW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzLCB0YXJnZXQ6IEFkZHJlc3MpOiAmRmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJre0Zsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya1B1YmxpY30/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgewogICAgcmV0dXJuIGNvbGxlY3Rpb24uYm9ycm93UHVibGljQWNjb3VudEJvb2ttYXJrKGFkZHJlc3M6IHRhcmdldCkKICB9IAoKICByZXR1cm4gbmlsCn0=",
          "getBookmarks": "aW1wb3J0IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrIGZyb20gMHhGbG93dmlld0FjY291bnRCb29rbWFyawoKcHViIGZ1biBtYWluKG93bmVyOiBBZGRyZXNzKTogJntBZGRyZXNzOiBGbG93dmlld0FjY291bnRCb29rbWFyay5BY2NvdW50Qm9va21hcmt7Rmxvd3ZpZXdBY2NvdW50Qm9va21hcmsuQWNjb3VudEJvb2ttYXJrUHVibGljfX0/IHsKICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KG93bmVyKQogIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JkZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb24+KGZyb206IEZsb3d2aWV3QWNjb3VudEJvb2ttYXJrLkFjY291bnRCb29rbWFya0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGFjY291bnQgYm9va21hcmsgY29sbGVjdGlvbiIpCgogIHJldHVybiBjb2xsZWN0aW9uLmdldEFjY291bnRCb29rbWFya3MoKQp9"
        },
        "collection": {
          "checkNFTCollection": "ICAgIGltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCiAgICBpbXBvcnQgPE5GVD4gZnJvbSA8TkZUQWRkcmVzcz4KCiAgICAvLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCiAgICAvLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuZXhpc3QoPFRva2VuQ29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgIHJldHVybiB2YXVsdFJlZgogICAgfQoKICAgIGFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpIDogQm9vbCB7CiAgICAgICAgcmV0dXJuIGNoZWNrPFRva2VuPlZhdWx0KGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9",
          "enableNFTStorage": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Cgp0cmFuc2FjdGlvbiB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KSA9PSBuaWwgewogICAgICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSA8TkZUPi5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbiwgdG86IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgICAgIH0KICAgICAgICBpZiAoc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4pID09IG5pbCkgewogICAgICAgICAgICBzaWduZXIuY2FwYWJpbGl0aWVzLnVucHVibGlzaCg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICBsZXQgY2FwID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCY8TkZUPi5Db2xsZWN0aW9uPig8Q29sbGVjdGlvblN0b3JhZ2VQYXRoPikgICAgICAgICAgICAKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKGNhcCwgYXQ6IDxDb2xsZWN0aW9uUHVibGljUGF0aD4pCgogICAgICAgIH0KICAgIH0KfQ==",
          "enableNFTStorageTest": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1lbG9keVRpY2tldCBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5ib3Jyb3c8Jk1lbG9keVRpY2tldC5Db2xsZWN0aW9uPihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpID09IG5pbCB7CiAgICAgICAgICAgIGxldCBjb2xsZWN0aW9uIDwtIE1lbG9keVRpY2tldC5jcmVhdGVFbXB0eUNvbGxlY3Rpb24oKQogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtY29sbGVjdGlvbiwgdG86IE1lbG9keVRpY2tldC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgfQogICAgICAgIGlmIChzaWduZXIuY2FwYWJpbGl0aWVzLmJvcnJvdzwmTWVsb2R5VGlja2V0LkNvbGxlY3Rpb24+KE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkgPT0gbmlsKSB7CiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMudW5wdWJsaXNoKE1lbG9keVRpY2tldC5Db2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICAgICAgbGV0IGNhcCA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmTWVsb2R5VGlja2V0LkNvbGxlY3Rpb24+KE1lbG9keVRpY2tldC5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpICAgICAgICAgICAgCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChjYXAsIGF0OiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgfQogICAgfQp9",
          "getCatalogTypeData": "aW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCmFjY2VzcyhhbGwpIGZ1biBtYWluKCk6IHtTdHJpbmcgOiB7U3RyaW5nIDogQm9vbH19IHsKICBsZXQgY2F0YWxvZyA9IE5GVENhdGFsb2cuZ2V0Q2F0YWxvZ1R5cGVEYXRhKCkKICByZXR1cm4gY2F0YWxvZwp9",
          "getNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElkLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgICApCiAgICAgIH0gCiAgICB9CiAgIGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
          "getNFTCatalogByCollectionIds": "aW1wb3J0IE5GVENhdGFsb2cgZnJvbSAweE5GVENhdGFsb2cKCnB1YiBmdW4gbWFpbihjb2xsZWN0aW9uSWRlbnRpZmllcnM6IFtTdHJpbmddKToge1N0cmluZzogTkZUQ2F0YWxvZy5ORlRDYXRhbG9nTWV0YWRhdGF9IHsKICBsZXQgcmVzOiB7U3RyaW5nOiBORlRDYXRhbG9nLk5GVENhdGFsb2dNZXRhZGF0YX0gPSB7fQogIGZvciBjb2xsZWN0aW9uSUQgaW4gY29sbGVjdGlvbklkZW50aWZpZXJzIHsKICAgICAgaWYgbGV0IGNhdGFsb2cgPSBORlRDYXRhbG9nLmdldENhdGFsb2dFbnRyeShjb2xsZWN0aW9uSWRlbnRpZmllcjogY29sbGVjdGlvbklEKSB7CiAgICAgICAgcmVzW2NvbGxlY3Rpb25JRF0gPSBjYXRhbG9nCiAgICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTCollection": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4JCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweE1ldGFkYXRhVmlld3MKCgphY2Nlc3MoYWxsKSBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIGFjY2VzcyhhbGwpIGxldCBuYW1lOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgc3F1YXJlSW1hZ2U6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBtZWRpYVR5cGU6IFN0cmluZwoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IFN0cmluZywgbWVkaWFUeXBlOiBTdHJpbmcpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogICAgc2VsZi5tZWRpYVR5cGUgPSBtZWRpYVR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBhY2Nlc3MoYWxsKSBsZXQgaWQ6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBwYXRoOiBTdHJpbmcKICBhY2Nlc3MoYWxsKSBsZXQgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/CiAgYWNjZXNzKGFsbCkgbGV0IGlkTGlzdDogW1VJbnQ2NF0KCiAgaW5pdChpZDpTdHJpbmcsIHBhdGg6IFN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gZ2V0RGlzcGxheShhZGRyZXNzOiBBZGRyZXNzLCBzdG9yYWdlUGF0aDogU3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IFB1YmxpY1BhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXNvdXJjZVR5cGUgPSBUeXBlPEBBbnlSZXNvdXJjZT4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PigpCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKICB2YXIgaXRlbTogQ29sbGVjdGlvbkRpc3BsYXk/ID0gIG5pbAoKICAgIGlmIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKSB7CiAgICAgIGxldCBpc1Jlc291cmNlID0gdHlwZS5pc1N1YnR5cGUob2Y6IHJlc291cmNlVHlwZSkKICAgICAgbGV0IGlzTkZUQ29sbGVjdGlvbiA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBjb2xsZWN0aW9uVHlwZSkKICAgICAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKCiAgICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgICBpZiBpc05GVENvbGxlY3Rpb24gJiYgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9SYXJpYmxlTkZUQ29sbGVjdGlvbiAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL0FSVElGQUNUUGFja1YzQ29sbGVjdGlvbgogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkKICAgICAgICAgICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZS5maWxlLnVyaSgpLAogICAgICAgICAgICAgICAgICBtZWRpYVR5cGU6IGRpc3BsYXkuc3F1YXJlSW1hZ2UubWVkaWFUeXBlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICByZXR1cm4gaXRlbQp9CgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcpOiBORlRDb2xsZWN0aW9uIHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSUQpIQogIGxldCBjb2xsZWN0aW9uID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpIQogIHJldHVybiBORlRDb2xsZWN0aW9uKAogICAgaWQ6IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkhLmlkZW50aWZpZXIsCiAgICBwYXRoOiBzdG9yYWdlUGF0aC50b1N0cmluZygpLAogICAgZGlzcGxheTogZ2V0RGlzcGxheShhZGRyZXNzOiBhZGRyZXNzLCBzdG9yYWdlUGF0aDogc3RvcmFnZVBhdGgsIHB1YmxpY1BhdGg6IHB1YmxpY1BhdGgpLAogICAgaWRMaXN0OiBjb2xsZWN0aW9uLmdldElEcygpCiAgKQp9",
          "getNFTCollectionTest": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcJCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGlzcGxheSB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBzcXVhcmVJbWFnZTogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IG1lZGlhVHlwZTogU3RyaW5nCgogIGluaXQobmFtZTogU3RyaW5nLCBzcXVhcmVJbWFnZTogU3RyaW5nLCBtZWRpYVR5cGU6IFN0cmluZykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5zcXVhcmVJbWFnZSA9IHNxdWFyZUltYWdlCiAgICBzZWxmLm1lZGlhVHlwZSA9IG1lZGlhVHlwZQogIH0KfQoKYWNjZXNzKGFsbCkgc3RydWN0IE5GVENvbGxlY3Rpb24gewogIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBhY2Nlc3MoYWxsKSBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgcGF0aDogU3RyaW5nLCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8sIGlkTGlzdDogW1VJbnQ2NF0pIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi5kaXNwbGF5ID0gZGlzcGxheQogICAgc2VsZi5pZExpc3QgPSBpZExpc3QKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBnZXREaXNwbGF5KGFkZHJlc3M6IEFkZHJlc3MsIHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aCwgcHVibGljUGF0aDogUHVibGljUGF0aCk6IENvbGxlY3Rpb25EaXNwbGF5PyB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlc291cmNlVHlwZSA9IFR5cGU8QEFueVJlc291cmNlPigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbn0+KCkKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIHZhciBpdGVtOiBDb2xsZWN0aW9uRGlzcGxheT8gPSAgbmlsCgogICAgaWYgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIHsKICAgICAgbGV0IGlzUmVzb3VyY2UgPSB0eXBlLmlzU3VidHlwZShvZjogcmVzb3VyY2VUeXBlKQogICAgICBsZXQgaXNORlRDb2xsZWN0aW9uID0gdHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKQogICAgICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICAgICAgdmFyIHRva2VuSURzOiBbVUludDY0XSA9IFtdCiAgICAgIGlmIGlzTkZUQ29sbGVjdGlvbiAmJiBjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgICAgICBpZiBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb24sIE5vbkZ1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PihwdWJsaWNQYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKCiAgICAgICAgICAvLyBUT0RPOiBtb3ZlIHRvIGEgbGlzdAogICAgICAgICAgaWYgdG9rZW5JRHMubGVuZ3RoID4gMCAKICAgICAgICAgICYmIHN0b3JhZ2VQYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgc3RvcmFnZVBhdGggIT0gL3N0b3JhZ2UvQVJUSUZBQ1RQYWNrVjNDb2xsZWN0aW9uCiAgICAgICAgICAmJiBzdG9yYWdlUGF0aCAhPSAvc3RvcmFnZS9BcmxlZVNjZW5lIHsKICAgICAgICAgICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZi5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSURzWzBdKQogICAgICAgICAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICAgICAgaXRlbSA9IENvbGxlY3Rpb25EaXNwbGF5KAogICAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlLmZpbGUudXJpKCksCiAgICAgICAgICAgICAgICAgIG1lZGlhVHlwZTogZGlzcGxheS5zcXVhcmVJbWFnZS5tZWRpYVR5cGUKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nKTogTkZUQ29sbGVjdGlvbiB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgY29sbGVjdGlvbiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PihwdWJsaWNQYXRoKSEKICByZXR1cm4gTkZUQ29sbGVjdGlvbigKICAgIGlkOiBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpIS5pZGVudGlmaWVyLAogICAgcGF0aDogc3RvcmFnZVBhdGgudG9TdHJpbmcoKSwKICAgIGRpc3BsYXk6IGdldERpc3BsYXkoYWRkcmVzczogYWRkcmVzcywgc3RvcmFnZVBhdGg6IHN0b3JhZ2VQYXRoLCBwdWJsaWNQYXRoOiBwdWJsaWNQYXRoKSwKICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICkKfQ==",
          "getNFTDisplays": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKYWNjZXNzKGFsbCkgc3RydWN0IFZpZXdJbmZvIHsKYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgZGVzY3JpcHRpb246IFN0cmluZwphY2Nlc3MoYWxsKSBsZXQgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfQphY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CmFjY2VzcyhhbGwpIGxldCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8KCmluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8sIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PykgewogICAgc2VsZi5uYW1lID0gbmFtZQogICAgc2VsZi5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uCiAgICBzZWxmLnRodW1ibmFpbCA9IHRodW1ibmFpbAogICAgc2VsZi5yYXJpdHkgPSByYXJpdHkKICAgIHNlbGYuY29sbGVjdGlvbkRpc3BsYXkgPSBjb2xsZWN0aW9uRGlzcGxheQogIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aElEOiBTdHJpbmcsIHRva2VuSURzOiBbVUludDY0XSk6IHtVSW50NjQ6IFZpZXdJbmZvfSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHJlczoge1VJbnQ2NDogVmlld0luZm99ID0ge30KICB2YXIgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gZmFsc2UKCiAgaWYgdG9rZW5JRHMubGVuZ3RoID09IDAgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElEKSEKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQoKICBsZXQgY29uZm9ybWVkTWV0YWRhdGFWaWV3cyA9IHR5cGUhLmlzU3VidHlwZShvZjogbWV0YWRhdGFWaWV3VHlwZSkKICBpZiAhY29uZm9ybWVkTWV0YWRhdGFWaWV3cyB7CiAgICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLlJlY2VpdmVyfT4ocHVibGljUGF0aCkKICBmb3IgdG9rZW5JRCBpbiB0b2tlbklEcyB7CiAgICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpCiAgICBpZiByZXNvbHZlciAhPSBuaWwgewogICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgdmFyIHJhcml0eURlc2M6IFN0cmluZz8gPSBuaWwKICAgICAgaWYgbGV0IHJhcml0eVZpZXcgPSBNZXRhZGF0YVZpZXdzLmdldFJhcml0eShyZXNvbHZlciEpIHsKICAgICAgICAgIHJhcml0eURlc2MgPSByYXJpdHlWaWV3LmRlc2NyaXB0aW9uCiAgICAgICAgfQoKICAgICAgICB2YXIgY29sbGVjdGlvbkRpc3BsYXk6IE1ldGFkYXRhVmlld3MuTkZUQ29sbGVjdGlvbkRpc3BsYXk/ID0gbmlsCiAgICAgICAgaWYgKCFjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQpIHsKICAgICAgICAgIGlmIGxldCBjRGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0TkZUQ29sbGVjdGlvbkRpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gY0Rpc3BsYXkKICAgICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkID0gdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MsCiAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogY29sbGVjdGlvbkRpc3BsYXkKICAgICAgICApCiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgIG5hbWU6IHBhdGhJRCwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogIiIpLAogICAgICAgIHJhcml0eTogbmlsLAogICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5OiBuaWwKICAgICAgKQogICAgfQogIH0KICByZXR1cm4gcmVzCn0=",
          "getNFTDisplaysTest": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcJCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhmOGQ2ZTA1ODZiMGEyMGM3CmltcG9ydCBWaWV3UmVzb2x2ZXIgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CiAgYWNjZXNzKGFsbCkgbGV0IGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwoKICBpbml0KG5hbWU6IFN0cmluZywgZGVzY3JpcHRpb246IFN0cmluZywgdGh1bWJuYWlsOiB7TWV0YWRhdGFWaWV3cy5GaWxlfSwgcmFyaXR5OiBTdHJpbmc/LCBjb2xsZWN0aW9uRGlzcGxheTogTWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgICBzZWxmLmNvbGxlY3Rpb25EaXNwbGF5ID0gY29sbGVjdGlvbkRpc3BsYXkKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJRDogU3RyaW5nLCB0b2tlbklEczogW1VJbnQ2NF0pOiB7VUludDY0OiBWaWV3SW5mb30gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQogIGxldCByZXM6IHtVSW50NjQ6IFZpZXdJbmZvfSA9IHt9CiAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IGZhbHNlCgogIGlmIHRva2VuSURzLmxlbmd0aCA9PSAwIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBzdG9yYWdlUGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHB1YmxpY1BhdGggPSBQdWJsaWNQYXRoKGlkZW50aWZpZXI6IHBhdGhJRCkhCiAgbGV0IHR5cGUgPSBhY2NvdW50LnN0b3JhZ2UudHlwZShhdDogc3RvcmFnZVBhdGgpCiAgaWYgdHlwZSA9PSBuaWwgewogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IG1ldGFkYXRhVmlld1R5cGUgPSBUeXBlPEB7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KCkKCiAgbGV0IGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgPSB0eXBlIS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCiAgaWYgIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICAgIHJldHVybiByZXMKICB9CgogIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7Vmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KHB1YmxpY1BhdGgpCiAgZm9yIHRva2VuSUQgaW4gdG9rZW5JRHMgewogICAgbGV0IHJlc29sdmVyID0gY29sbGVjdGlvblJlZiEuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEKQogICAgaWYgcmVzb2x2ZXIgIT0gbmlsIHsKICAgICAgaWYgbGV0IGRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldERpc3BsYXkocmVzb2x2ZXIhKSB7CiAgICAgIHZhciByYXJpdHlEZXNjOiBTdHJpbmc/ID0gbmlsCiAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PyA9IG5pbAogICAgICAgIGlmICghY29sbGVjdGlvbkRpc3BsYXlGZXRjaGVkKSB7CiAgICAgICAgICBpZiBsZXQgY0Rpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyISkgewogICAgICAgICAgICBjb2xsZWN0aW9uRGlzcGxheSA9IGNEaXNwbGF5CiAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5RmV0Y2hlZCA9IHRydWUKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJlc1t0b2tlbklEXSA9IFZpZXdJbmZvKAogICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLAogICAgICAgICAgcmFyaXR5OiByYXJpdHlEZXNjLAogICAgICAgICAgY29sbGVjdGlvbkRpc3BsYXk6IGNvbGxlY3Rpb25EaXNwbGF5CiAgICAgICAgKQogICAgICB9CiAgICB9IGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSUQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbCwKICAgICAgICBjb2xsZWN0aW9uRGlzcGxheTogbmlsCiAgICAgICkKICAgIH0KICB9CiAgcmV0dXJuIHJlcwp9",
          "getNFTMetadataViews": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4TWV0YWRhdGFWaWV3cwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgfQoKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgfQoKICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgIH0KCiAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgfQoKICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICB9CgogICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICB9CgogICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgIH0KCiAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICB9CgogICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
          "getNFTMetadataViewsTest": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBDb2xsZWN0aW9uRGF0YSB7CiAgYWNjZXNzKGFsbCkgbGV0IHN0b3JhZ2VQYXRoOiBTdG9yYWdlUGF0aAogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNQYXRoOiBQdWJsaWNQYXRoCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgKICBhY2Nlc3MoYWxsKSBsZXQgcHVibGljQ29sbGVjdGlvbjogVHlwZQogIGFjY2VzcyhhbGwpIGxldCBwdWJsaWNMaW5rZWRUeXBlOiBUeXBlCiAgYWNjZXNzKGFsbCkgbGV0IHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQoKICBpbml0KAogICAgc3RvcmFnZVBhdGg6IFN0b3JhZ2VQYXRoLAogICAgcHVibGljUGF0aDogUHVibGljUGF0aCwKICAgIHByb3ZpZGVyUGF0aDogUHJpdmF0ZVBhdGgsCiAgICBwdWJsaWNDb2xsZWN0aW9uOiBUeXBlLAogICAgcHVibGljTGlua2VkVHlwZTogVHlwZSwKICAgIHByb3ZpZGVyTGlua2VkVHlwZTogVHlwZQogICkgewogICAgc2VsZi5zdG9yYWdlUGF0aCA9IHN0b3JhZ2VQYXRoCiAgICBzZWxmLnB1YmxpY1BhdGggPSBwdWJsaWNQYXRoCiAgICBzZWxmLnByb3ZpZGVyUGF0aCA9IHByb3ZpZGVyUGF0aAogICAgc2VsZi5wdWJsaWNDb2xsZWN0aW9uID0gcHVibGljQ29sbGVjdGlvbgogICAgc2VsZi5wdWJsaWNMaW5rZWRUeXBlID0gcHVibGljTGlua2VkVHlwZQogICAgc2VsZi5wcm92aWRlckxpbmtlZFR5cGUgPSBwcm92aWRlckxpbmtlZFR5cGUKICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZDogU3RyaW5nLCB0b2tlbklEOiBVSW50NjQpOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7U3RyaW5nOiBBbnlTdHJ1Y3R9ID0ge30KCiAgbGV0IHN0b3JhZ2VQYXRoID0gU3RvcmFnZVBhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgcHVibGljUGF0aCA9IFB1YmxpY1BhdGgoaWRlbnRpZmllcjogcGF0aElkKSEKICBsZXQgY29sbGVjdGlvblJlZiA9IGFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbiwgVmlld1Jlc29sdmVyLlJlc29sdmVyQ29sbGVjdGlvbn0+KHB1YmxpY1BhdGgpCiAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgcGFuaWMoIkdldCBDb2xsZWN0aW9uIEZhaWxlZCIpCiAgfQoKICBsZXQgdHlwZSA9IGFjY291bnQuc3RvcmFnZS50eXBlKGF0OiBzdG9yYWdlUGF0aCkKICBpZiB0eXBlID09IG5pbCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgbWV0YWRhdGFWaWV3VHlwZSA9IFR5cGU8QHtWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9ufT4oKQogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQoKICBpZiAoIWNvbmZvcm1lZE1ldGFkYXRhVmlld3MpIHsKICAgIHJldHVybiByZXMKICB9CgogIGNvbGxlY3Rpb25SZWYhLmJvcnJvd05GVCh0b2tlbklEKQoKICBsZXQgcmVzb2x2ZXIgPSBjb2xsZWN0aW9uUmVmIS5ib3Jyb3dWaWV3UmVzb2x2ZXIoaWQ6IHRva2VuSUQpIQogIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICBpZiBsZXQgcmFyaXR5ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJyYXJpdHkiXSA9IHJhcml0eQogICAgfQoKICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXREaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siZGlzcGxheSJdID0gZGlzcGxheQogICAgfQoKICAgIGlmIGxldCBlZGl0aW9ucyA9IE1ldGFkYXRhVmlld3MuZ2V0RWRpdGlvbnMocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJlZGl0aW9ucyJdID0gZWRpdGlvbnMKICAgIH0KCiAgICBpZiBsZXQgc2VyaWFsID0gTWV0YWRhdGFWaWV3cy5nZXRTZXJpYWwocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJzZXJpYWwiXSA9IHNlcmlhbAogICAgfQoKICAgIGlmIGxldCByb3lhbHRpZXMgPSBNZXRhZGF0YVZpZXdzLmdldFJveWFsdGllcyhyZXNvbHZlcikgewogICAgICByZXNbInJveWFsdGllcyJdID0gcm95YWx0aWVzCiAgICB9CgogICAgaWYgbGV0IGxpY2Vuc2UgPSBNZXRhZGF0YVZpZXdzLmdldExpY2Vuc2UocmVzb2x2ZXIpIHsKICAgICAgcmVzWyJsaWNlbnNlIl0gPSBsaWNlbnNlCiAgICB9CgogICAgaWYgbGV0IG1lZGlhcyA9IE1ldGFkYXRhVmlld3MuZ2V0TWVkaWFzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sibWVkaWFzIl0gPSBtZWRpYXMKICAgIH0KCiAgICBpZiBsZXQgZXh0ZXJuYWxVUkwgPSBNZXRhZGF0YVZpZXdzLmdldEV4dGVybmFsVVJMKHJlc29sdmVyKSB7CiAgICAgIHJlc1siZXh0ZXJuYWxVUkwiXSA9IGV4dGVybmFsVVJMCiAgICB9CgogICAgaWYgbGV0IHRyYWl0cyA9IE1ldGFkYXRhVmlld3MuZ2V0VHJhaXRzKHJlc29sdmVyKSB7CiAgICAgIHJlc1sidHJhaXRzIl0gPSB0cmFpdHMKICAgIH0KCiAgICBpZiBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSBNZXRhZGF0YVZpZXdzLmdldE5GVENvbGxlY3Rpb25EaXNwbGF5KHJlc29sdmVyKSB7CiAgICAgIHJlc1siY29sbGVjdGlvbkRpc3BsYXkiXSA9IGNvbGxlY3Rpb25EaXNwbGF5CiAgICB9CgogICAgaWYgbGV0IGNvbGxlY3Rpb25EYXRhID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGF0YShyZXNvbHZlcikgewogICAgICBsZXQgZGF0YSA9IENvbGxlY3Rpb25EYXRhKAogICAgICAgIHN0b3JhZ2VQYXRoOiBjb2xsZWN0aW9uRGF0YS5zdG9yYWdlUGF0aCwKICAgICAgICBwdWJsaWNQYXRoOiBjb2xsZWN0aW9uRGF0YS5wdWJsaWNQYXRoLAogICAgICAgIHByb3ZpZGVyUGF0aDogY29sbGVjdGlvbkRhdGEucHJvdmlkZXJQYXRoLAogICAgICAgIHB1YmxpY0NvbGxlY3Rpb246IGNvbGxlY3Rpb25EYXRhLnB1YmxpY0NvbGxlY3Rpb24sCiAgICAgICAgcHVibGljTGlua2VkVHlwZTogY29sbGVjdGlvbkRhdGEucHVibGljTGlua2VkVHlwZSwKICAgICAgICBwcm92aWRlckxpbmtlZFR5cGU6IGNvbGxlY3Rpb25EYXRhLnByb3ZpZGVyTGlua2VkVHlwZQogICAgICApCiAgICAgIHJlc1siY29sbGVjdGlvbkRhdGEiXSA9IGRhdGEKICAgIH0KICB9CiAgcmVzWyJ0b2tlbklkIl0gPSB0b2tlbklECgogIHJldHVybiByZXMKfQ==",
          "getNFTTest": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IFZpZXdSZXNvbHZlciBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKCmFjY2VzcyhhbGwpIHN0cnVjdCBWaWV3SW5mbyB7CiAgYWNjZXNzKGFsbCkgbGV0IG5hbWU6IFN0cmluZwogIGFjY2VzcyhhbGwpIGxldCBkZXNjcmlwdGlvbjogU3RyaW5nCiAgYWNjZXNzKGFsbCkgbGV0IHRodW1ibmFpbDoge01ldGFkYXRhVmlld3MuRmlsZX0KICBhY2Nlc3MoYWxsKSBsZXQgcmFyaXR5OiBTdHJpbmc/CgogIGluaXQobmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IHtNZXRhZGF0YVZpZXdzLkZpbGV9LCByYXJpdHk6IFN0cmluZz8pIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgc2VsZi50aHVtYm5haWwgPSB0aHVtYm5haWwKICAgIHNlbGYucmFyaXR5ID0gcmFyaXR5CiAgfQp9CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzLCBwYXRoSWQ6IFN0cmluZywgdG9rZW5JRHM6IFtVSW50NjRdKToge1VJbnQ2NDogVmlld0luZm99IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzOiB7VUludDY0OiBWaWV3SW5mb30gPSB7fQogIHZhciBjb2xsZWN0aW9uRGlzcGxheUZldGNoZWQgPSBmYWxzZQoKICBpZiB0b2tlbklEcy5sZW5ndGggPT0gMCB7CiAgICByZXR1cm4gcmVzCiAgfQoKICBsZXQgc3RvcmFnZVBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCBwdWJsaWNQYXRoID0gUHVibGljUGF0aChpZGVudGlmaWVyOiBwYXRoSWQpIQogIGxldCB0eXBlID0gYWNjb3VudC5zdG9yYWdlLnR5cGUoYXQ6IHN0b3JhZ2VQYXRoKQogIGlmIHR5cGUgPT0gbmlsIHsKICAgIHJldHVybiByZXMKICB9CgogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAe1ZpZXdSZXNvbHZlci5SZXNvbHZlckNvbGxlY3Rpb259PigpCgogIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZSEuaXNTdWJ0eXBlKG9mOiBtZXRhZGF0YVZpZXdUeXBlKQogIGlmICFjb25mb3JtZWRNZXRhZGF0YVZpZXdzIHsKICAgIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgbmFtZTogcGF0aElkLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgICB0aHVtYm5haWw6IE1ldGFkYXRhVmlld3MuSFRUUEZpbGUodXJsOiAiIiksCiAgICAgICAgcmFyaXR5OiBuaWwKICAgICAgKQogICAgfQogICAgcmV0dXJuIHJlcwogIH0KCiAgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5ib3Jyb3c8JntWaWV3UmVzb2x2ZXIuUmVzb2x2ZXJDb2xsZWN0aW9uLCBOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihwdWJsaWNQYXRoKQogIGZvciB0b2tlbklEIGluIHRva2VuSURzIHsKICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYhLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogdG9rZW5JRCkKICAgIGlmIHJlc29sdmVyICE9IG5pbCB7CiAgICAgICBpZiBsZXQgZGlzcGxheSA9IE1ldGFkYXRhVmlld3MuZ2V0RGlzcGxheShyZXNvbHZlciEpIHsKICAgICAgICB2YXIgcmFyaXR5RGVzYzogU3RyaW5nPyA9IG5pbAogICAgICAgIGlmIGxldCByYXJpdHlWaWV3ID0gTWV0YWRhdGFWaWV3cy5nZXRSYXJpdHkocmVzb2x2ZXIhKSB7CiAgICAgICAgICByYXJpdHlEZXNjID0gcmFyaXR5Vmlldy5kZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgICAgcmVzW3Rva2VuSURdID0gVmlld0luZm8oCiAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICBkZXNjcmlwdGlvbjogZGlzcGxheS5kZXNjcmlwdGlvbiwKICAgICAgICAgIHRodW1ibmFpbDogZGlzcGxheS50aHVtYm5haWwsCiAgICAgICAgICByYXJpdHk6IHJhcml0eURlc2MKICAgICAgICApCiAgICAgIH0gCiAgICB9CiAgIGVsc2UgewogICAgICByZXNbdG9rZW5JRF0gPSBWaWV3SW5mbygKICAgICAgICBuYW1lOiBwYXRoSWQsCiAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgIHRodW1ibmFpbDogTWV0YWRhdGFWaWV3cy5IVFRQRmlsZSh1cmw6ICIiKSwKICAgICAgICByYXJpdHk6IG5pbAogICAgICApCiAgICB9CiAgfQogIHJldHVybiByZXMKfQ==",
          "sendNbaNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+Ci8vIFRoaXMgdHJhbnNhY3Rpb24gaXMgZm9yIHRyYW5zZmVycmluZyBhbmQgTkZUIGZyb20KLy8gb25lIGFjY291bnQgdG8gYW5vdGhlcgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJydzIE5GVCBjb2xsZWN0aW9uCiAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lcgogICAgLmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiAvc3RvcmFnZS9Nb21lbnRDb2xsZWN0aW9uKQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgYSByZWZlcmVuY2UgdG8gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24iKQogICAgbGV0IHNlbmRlclJlZiA9IHNpZ25lcgogICAgLmdldENhcGFiaWxpdHkoL3B1YmxpYy9Nb21lbnRDb2xsZWN0aW9uKQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKICAgIC8vIGJvcnJvdyBhIHB1YmxpYyByZWZlcmVuY2UgdG8gdGhlIHJlY2VpdmVycyBjb2xsZWN0aW9uCiAgICBsZXQgcmVjaXBpZW50UmVmID0gcmVjaXBpZW50CiAgICAuZ2V0Q2FwYWJpbGl0eSgvcHVibGljL01vbWVudENvbGxlY3Rpb24pCiAgICAuYm9ycm93PCZ7VG9wU2hvdC5Nb21lbnRDb2xsZWN0aW9uUHVibGljfT4oKQogICAgCiAgICBpZiByZWNpcGllbnRSZWYgPT0gbmlsIHsKICAgIGxldCBjb2xsZWN0aW9uQ2FwID0gcmVjaXBpZW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRlZmF1bHREb21haW46ICZ7RG9tYWlucy5Eb21haW5QdWJsaWN9PyA9IG5pbAogICAgCiAgICBsZXQgaWRzID0gY29sbGVjdGlvbi5nZXRJRHMoKQogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluCiAgICBkZWZhdWx0RG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkc1swXSkhCiAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbgogICAgZm9yIGlkIGluIGlkcyB7CiAgICAgICAgbGV0IGRvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZCkhCiAgICAgICAgbGV0IGlzRGVmYXVsdCA9IGRvbWFpbi5nZXRUZXh0KGtleTogImlzRGVmYXVsdCIpCiAgICAgICAgaWYgaXNEZWZhdWx0ID09ICJ0cnVlIiB7CiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgIH0KICAgIGxldCB0eXBlS2V5ID0gY29sbGVjdGlvblJlZi5nZXRUeXBlKCkuaWRlbnRpZmllcgogICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcicncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIGlmIGRlZmF1bHREb21haW4hLmNoZWNrQ29sbGVjdGlvbihrZXk6IHR5cGVLZXkpID09IGZhbHNlIHsKICAgICAgICBsZXQgY29sbGVjdGlvbiA8LSBUb3BTaG90LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpCiAgICAgICAgZGVmYXVsdERvbWFpbiEuYWRkQ29sbGVjdGlvbihjb2xsZWN0aW9uOiA8LSBjb2xsZWN0aW9uKQogICAgfQogICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdE5GVChrZXk6IHR5cGVLZXksIHRva2VuOiA8LSBuZnQsIHNlbmRlclJlZjogc2VuZGVyUmVmICkKICAgIH0gZWxzZSB7CiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJydzIGNvbGxlY3Rpb24KICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQogICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQnJ3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
          "sendNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgovLyBUaGlzIHRyYW5zYWN0aW9uIGlzIGZvciB0cmFuc2ZlcnJpbmcgYW5kIE5GVCBmcm9tCi8vIG9uZSBhY2NvdW50IHRvIGFub3RoZXIKCnRyYW5zYWN0aW9uKHJlY2lwaWVudDogQWRkcmVzcywgd2l0aGRyYXdJRDogVUludDY0KSB7CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQm9ycm93VmFsdWUpICZBY2NvdW50KSB7CiAgICAgICAgLy8gZ2V0IHRoZSByZWNpcGllbnRzIHB1YmxpYyBhY2NvdW50IG9iamVjdAogICAgICAgIGxldCByZWNpcGllbnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoTm9uRnVuZ2libGVUb2tlbi5XaXRoZHJhd2FibGUpICZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IHJlY2lwaWVudAogICAgICAgICAgICAuY2FwYWJpbGl0aWVzCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259Pig8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gd2l0aGRyYXcgdGhlIE5GVCBmcm9tIHRoZSBvd25lcidzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgTkZUIGluIHRoZSByZWNpcGllbnQncyBjb2xsZWN0aW9uCiAgICAgICAgZGVwb3NpdFJlZi5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQ==",
          "sendNFTTest": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweGY4ZDZlMDU4NmIwYTIwYzcKaW1wb3J0IE1lbG9keVRpY2tldCBmcm9tIDB4ZjhkNmUwNTg2YjBhMjBjNwoKLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIC8vIGdldCB0aGUgcmVjaXBpZW50cyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3MgTkZUIGNvbGxlY3Rpb24KICAgICAgICBsZXQgY29sbGVjdGlvblJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKE5vbkZ1bmdpYmxlVG9rZW4uV2l0aGRyYXdhYmxlKSAme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9Pihmcm9tOiBNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICAgICAgLy8gYm9ycm93IGEgcHVibGljIHJlZmVyZW5jZSB0byB0aGUgcmVjZWl2ZXJzIGNvbGxlY3Rpb24KICAgICAgICBsZXQgZGVwb3NpdFJlZiA9IHJlY2lwaWVudAogICAgICAgICAgICAuY2FwYWJpbGl0aWVzCiAgICAgICAgICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb259PihNZWxvZHlUaWNrZXQuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcidzIGNvbGxlY3Rpb24iKQoKICAgICAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgICAgIGxldCBuZnQgPC0gY29sbGVjdGlvblJlZi53aXRoZHJhdyh3aXRoZHJhd0lEOiB3aXRoZHJhd0lEKQoKICAgICAgICAvLyBEZXBvc2l0IHRoZSBORlQgaW4gdGhlIHJlY2lwaWVudCdzIGNvbGxlY3Rpb24KICAgICAgICBkZXBvc2l0UmVmLmRlcG9zaXQodG9rZW46IDwtbmZ0KQogICAgfQp9"
        },
        "contract": {
          "getContractByName": "YWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgY29udHJhY3ROYW1lOiBTdHJpbmcpOiBTdHJpbmc/IHsKICBsZXQgYWNjb3VudCA9IGdldEFjY291bnQoYWRkcmVzcykKICBsZXQgZGVwbG95ZWRDb250cmFjdCA9IGFjY291bnQuY29udHJhY3RzLmdldChuYW1lOiBjb250cmFjdE5hbWUpCgogIHJldHVybiBTdHJpbmcuZnJvbVVURjgoZGVwbG95ZWRDb250cmFjdD8uY29kZSEpCn0=",
          "getContractNames": "YWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6ICZbU3RyaW5nXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgcmV0dXJuIGFjY291bnQuY29udHJhY3RzLm5hbWVzCn0="
        },
        "domain": {
          "claimFTFromInbox": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCA8VG9rZW4+IGZyb20gPFRva2VuQWRkcmVzcz4KCnRyYW5zYWN0aW9uKG5hbWU6IFN0cmluZywgcm9vdDpTdHJpbmcsIGtleTpTdHJpbmcsIGFtb3VudDogVUZpeDY0KSB7CnZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfQp2YXIgdmF1bHRSZWY6ICY8VG9rZW4+LlZhdWx0CnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKCiAgICBsZXQgY29sbGVjdGlvbkNhcCA9IGFjY291bnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpIAogICAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQogICAgdmFyIGRvbWFpbjogJntEb21haW5zLkRvbWFpblByaXZhdGV9PyA9IG5pbAogICAgbGV0IGNvbGxlY3Rpb25Qcml2YXRlID0gYWNjb3VudC5ib3Jyb3c8JntEb21haW5zLkNvbGxlY3Rpb25Qcml2YXRlfT4oZnJvbTogRG9tYWlucy5Db2xsZWN0aW9uU3RvcmFnZVBhdGgpID8/IHBhbmljKCJDb3VsZCBub3QgZmluZCB5b3VyIGRvbWFpbiBjb2xsZWN0aW9uIGNhcCIpCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgbGV0IGlkID0gRG9tYWlucy5nZXREb21haW5JZChuYW1lSGFzaCkKICAgIGlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KCiAgICBzZWxmLmRvbWFpbiA9IGRvbWFpbiEKICAgIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICBpZiB2YXVsdFJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oCiAgICAgICAgPFRva2VuUmVjZWl2ZXJQYXRoPiwKICAgICAgICB0YXJnZXQ6IDxUb2tlblN0b3JhZ2VQYXRoPgogICAgKQoKICAgIGFjY291bnQubGluazwmPFRva2VuPi5WYXVsdHtGdW5naWJsZVRva2VuLkJhbGFuY2V9PigKICAgICAgICA8VG9rZW5CYWxhbmNlUGF0aD4sCiAgICAgICAgdGFyZ2V0OiA8VG9rZW5TdG9yYWdlUGF0aD4KICAgICkKICAgIHNlbGYudmF1bHRSZWYgPSBhY2NvdW50LmJvcnJvdzwmPFRva2VuPi5WYXVsdD4oZnJvbTogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgfSBlbHNlIHsKICAgIHNlbGYudmF1bHRSZWYgPSB2YXVsdFJlZiEKICAgIH0KfQpleGVjdXRlIHsKICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LSBzZWxmLmRvbWFpbi53aXRoZHJhd1ZhdWx0KGtleToga2V5LCBhbW91bnQ6IGFtb3VudCkpCn0KfQ==",
          "claimNFTFromInbox": "aW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCA8TkZUPiBmcm9tIDxORlRBZGRyZXNzPgoKLy8ga2V5IHdpbGwgYmUgJ0EuZjhkNmUwNTg2YjBhMjBjNy5Eb21haW5zLkNvbGxlY3Rpb24nIG9mIGEgTkZUIGNvbGxlY3Rpb24KdHJhbnNhY3Rpb24obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcsIGtleTogU3RyaW5nLCBpdGVtSWQ6IFVJbnQ2NCkgewp2YXIgZG9tYWluOiAme0RvbWFpbnMuRG9tYWluUHJpdmF0ZX0KdmFyIGNvbGxlY3Rpb25SZWY6ICY8TkZUPi5Db2xsZWN0aW9uCnByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgIGxldCBwcmVmaXggPSAiMHgiCiAgICBsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQogICAgbGV0IG5hbWVIYXNoID0gcHJlZml4LmNvbmNhdChGbG93bnMuaGFzaChub2RlOiByb290SGFoc2gsIGxhYmxlOiBuYW1lKSkKICAgIHZhciBkb21haW46ICZ7RG9tYWlucy5Eb21haW5Qcml2YXRlfT8gPSBuaWwKICAgIGxldCBjb2xsZWN0aW9uUHJpdmF0ZSA9IGFjY291bnQuYm9ycm93PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHJpdmF0ZX0+KGZyb206IERvbWFpbnMuQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA/PyBwYW5pYygiQ291bGQgbm90IGZpbmQgeW91ciBkb21haW4gY29sbGVjdGlvbiBjYXAiKQoKICAgIGxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCiAgICBpZiBpZCAhPW5pbCB7CiAgICBkb21haW4gPSBjb2xsZWN0aW9uUHJpdmF0ZS5ib3Jyb3dEb21haW5Qcml2YXRlKGlkISkKICAgIH0KICAgIHNlbGYuZG9tYWluID0gZG9tYWluIQoKICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JjxORlQ+LkNvbGxlY3Rpb24+KGZyb206IDxDb2xsZWN0aW9uU3RvcmFnZVBhdGg+KQogICAgaWYgY29sbGVjdGlvblJlZiA9PSBuaWwgewogICAgYWNjb3VudC5zYXZlKDwtIDxORlQ+LmNyZWF0ZUVtcHR5Q29sbGVjdGlvbigpLCB0bzogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBhY2NvdW50Lmxpbms8JjxDb2xsZWN0aW9uUHVibGljVHlwZT4+KDxDb2xsZWN0aW9uUHVibGljUGF0aD4sIHRhcmdldDogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICBzZWxmLmNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmPE5GVD4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pPz8gcGFuaWMoIkNhbiBub3QgYm9ycm93IGNvbGxlY3Rpb24iKQogICAgfSBlbHNlIHsKICAgIHNlbGYuY29sbGVjdGlvblJlZiA9IGNvbGxlY3Rpb25SZWYhCiAgICB9Cgp9CmV4ZWN1dGUgewogICAgc2VsZi5jb2xsZWN0aW9uUmVmLmRlcG9zaXQodG9rZW46IDwtIHNlbGYuZG9tYWluLndpdGhkcmF3TkZUKGtleToga2V5LCBpdGVtSWQ6IGl0ZW1JZCkpCn0KfQ==",
          "getAddressOfDomain": "aW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4obmFtZTogU3RyaW5nLCByb290OiBTdHJpbmcpOiBBZGRyZXNzPyB7CiAgcmV0dXJuIERvbWFpblV0aWxzLmdldEFkZHJlc3NPZkRvbWFpbihuYW1lOiBuYW1lLCByb290OiByb290KQp9",
          "getDefaultDomainsOfAddress": "aW1wb3J0IERvbWFpblV0aWxzIGZyb20gMHhGbG93Ym94CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFN0cmluZ30gewogIHJldHVybiBEb21haW5VdGlscy5nZXREZWZhdWx0RG9tYWluc09mQWRkcmVzcyhhZGRyZXNzKQp9",
          "getFlownsInbox": "aW1wb3J0IEZsb3ducyBmcm9tIDB4Rmxvd25zCmltcG9ydCBEb21haW5zIGZyb20gMHhEb21haW5zCgpwdWIgZnVuIGdldERldGFpbChuYW1lSGFzaDogU3RyaW5nKTogRG9tYWlucy5Eb21haW5EZXRhaWw/IHsKbGV0IGFkZHJlc3MgPSBEb21haW5zLmdldFJlY29yZHMobmFtZUhhc2gpID8/IHBhbmljKCJEb21haW4gbm90IGV4aXN0IikKbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCmxldCBjb2xsZWN0aW9uQ2FwID0gYWNjb3VudC5nZXRDYXBhYmlsaXR5PCZ7RG9tYWlucy5Db2xsZWN0aW9uUHVibGljfT4oRG9tYWlucy5Db2xsZWN0aW9uUHVibGljUGF0aCkKbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uQ2FwLmJvcnJvdygpIQp2YXIgZGV0YWlsOiBEb21haW5zLkRvbWFpbkRldGFpbD8gPSBuaWwKCmxldCBpZCA9IERvbWFpbnMuZ2V0RG9tYWluSWQobmFtZUhhc2gpCmlmIGlkICE9IG5pbCAmJiAhRG9tYWlucy5pc0RlcHJlY2F0ZWQobmFtZUhhc2g6IG5hbWVIYXNoLCBkb21haW5JZDogaWQhKSB7CiAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkISkKICAgIGRldGFpbCA9IGRvbWFpbi5nZXREZXRhaWwoKQp9CgpyZXR1cm4gZGV0YWlsCn0KCnB1YiBmdW4gbWFpbihuYW1lOiBTdHJpbmcsIHJvb3Q6IFN0cmluZykgOiBEb21haW5zLkRvbWFpbkRldGFpbD8gewpsZXQgcHJlZml4ID0gIjB4IgpsZXQgcm9vdEhhaHNoID0gRmxvd25zLmhhc2gobm9kZTogIiIsIGxhYmxlOiByb290KQpsZXQgbmFtZUhhc2ggPSBwcmVmaXguY29uY2F0KEZsb3ducy5oYXNoKG5vZGU6IHJvb3RIYWhzaCwgbGFibGU6IG5hbWUpKQpyZXR1cm4gZ2V0RGV0YWlsKG5hbWVIYXNoOiBuYW1lSGFzaCkKfQ==",
          "sendInboxNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IERvbWFpbnMgZnJvbSAweERvbWFpbnMKaW1wb3J0IDxORlQ+IGZyb20gPE5GVEFkZHJlc3M+CgoKLy8gVGhpcyB0cmFuc2FjdGlvbiBpcyBmb3IgdHJhbnNmZXJyaW5nIGFuZCBORlQgZnJvbQovLyBvbmUgYWNjb3VudCB0byBhbm90aGVyCgp0cmFuc2FjdGlvbihyZWNpcGllbnQ6IEFkZHJlc3MsIHdpdGhkcmF3SUQ6IFVJbnQ2NCkgewoKcHJlcGFyZShzaWduZXI6IEF1dGhBY2NvdW50KSB7CiAgICAvLyBnZXQgdGhlIHJlY2lwaWVudHMgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50ID0gZ2V0QWNjb3VudChyZWNpcGllbnQpCgogICAgLy8gYm9ycm93IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBORlQgY29sbGVjdGlvbgogICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIKICAgIC5ib3Jyb3c8Jk5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oZnJvbTogPENvbGxlY3Rpb25TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBjb2xsZWN0aW9uIikKCiAgICBsZXQgc2VuZGVyUmVmID0gc2lnbmVyCiAgICAuZ2V0Q2FwYWJpbGl0eSg8Q29sbGVjdGlvblB1YmxpY1BhdGg+KQogICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAvLyBib3Jyb3cgYSBwdWJsaWMgcmVmZXJlbmNlIHRvIHRoZSByZWNlaXZlcnMgY29sbGVjdGlvbgogICAgbGV0IHJlY2lwaWVudFJlZiA9IHJlY2lwaWVudAogICAgLmdldENhcGFiaWxpdHkoPENvbGxlY3Rpb25QdWJsaWNQYXRoPikKICAgIC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCiAgICAKICAgIGlmIHJlY2lwaWVudFJlZiA9PSBuaWwgewogICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnQuZ2V0Q2FwYWJpbGl0eTwme0RvbWFpbnMuQ29sbGVjdGlvblB1YmxpY30+KERvbWFpbnMuQ29sbGVjdGlvblB1YmxpY1BhdGgpCiAgICBsZXQgY29sbGVjdGlvbiA9IGNvbGxlY3Rpb25DYXAuYm9ycm93KCkhCiAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCiAgICAKICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgaWYgaWRzLmxlbmd0aCA9PSAwIHsKICAgICAgICBwYW5pYygiUmVjaXBpZW50IGhhdmUgbm8gZG9tYWluICIpCiAgICB9CiAgICAKICAgIC8vIGNoZWNrIGRlZnVhbHQgZG9tYWluIAogICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgLy8gY2hlY2sgZGVmdWFsdCBkb21haW4gCiAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICBkZWZhdWx0RG9tYWluID0gZG9tYWluCiAgICAgICAgfQogICAgfQogICAgbGV0IHR5cGVLZXkgPSBjb2xsZWN0aW9uUmVmLmdldFR5cGUoKS5pZGVudGlmaWVyCiAgICAvLyB3aXRoZHJhdyB0aGUgTkZUIGZyb20gdGhlIG93bmVyJ3MgY29sbGVjdGlvbgogICAgbGV0IG5mdCA8LSBjb2xsZWN0aW9uUmVmLndpdGhkcmF3KHdpdGhkcmF3SUQ6IHdpdGhkcmF3SUQpCiAgICBpZiBkZWZhdWx0RG9tYWluIS5jaGVja0NvbGxlY3Rpb24oa2V5OiB0eXBlS2V5KSA9PSBmYWxzZSB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb24gPC0gPE5GVD4uY3JlYXRlRW1wdHlDb2xsZWN0aW9uKCkKICAgICAgICBkZWZhdWx0RG9tYWluIS5hZGRDb2xsZWN0aW9uKGNvbGxlY3Rpb246IDwtIGNvbGxlY3Rpb24pCiAgICB9CiAgICBkZWZhdWx0RG9tYWluIS5kZXBvc2l0TkZUKGtleTogdHlwZUtleSwgdG9rZW46IDwtIG5mdCwgc2VuZGVyUmVmOiBzZW5kZXJSZWYgKQogICAgfSBlbHNlIHsKICAgIC8vIHdpdGhkcmF3IHRoZSBORlQgZnJvbSB0aGUgb3duZXIncyBjb2xsZWN0aW9uCiAgICBsZXQgbmZ0IDwtIGNvbGxlY3Rpb25SZWYud2l0aGRyYXcod2l0aGRyYXdJRDogd2l0aGRyYXdJRCkKICAgIC8vIERlcG9zaXQgdGhlIE5GVCBpbiB0aGUgcmVjaXBpZW50J3MgY29sbGVjdGlvbgogICAgcmVjaXBpZW50UmVmIS5kZXBvc2l0KHRva2VuOiA8LW5mdCkKICAgIH0KfQp9",
          "transferInboxTokens": "IGltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBEb21haW5zIGZyb20gMHhGbG93bnMKaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewpsZXQgc2VuZGVyUmVmOiAme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9Ci8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZApsZXQgc2VudFZhdWx0OiBARnVuZ2libGVUb2tlbi5WYXVsdApsZXQgc2VuZGVyOiBBZGRyZXNzCgpwcmVwYXJlKHNpZ25lcjogQXV0aEFjY291bnQpIHsKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKICAgIHNlbGYuc2VuZGVyUmVmID0gc2lnbmVyLmdldENhcGFiaWxpdHkoPFRva2VuUmVjZWl2ZXJQYXRoPikKICAgIC5ib3Jyb3c8JntGdW5naWJsZVRva2VuLlJlY2VpdmVyfT4oKSEKICAgIHNlbGYuc2VuZGVyID0gdmF1bHRSZWYub3duZXIhLmFkZHJlc3MKICAgIC8vIFdpdGhkcmF3IHRva2VucyBmcm9tIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQp9CgpleGVjdXRlIHsKICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgIC8vIEdldCBhIHJlZmVyZW5jZSB0byB0aGUgcmVjaXBpZW50J3MgUmVjZWl2ZXIKICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuZ2V0Q2FwYWJpbGl0eSg8VG9rZW5SZWNlaXZlclBhdGg+KQogICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigpCiAgICAKICAgIGlmIHJlY2VpdmVyUmVmID09IG5pbCB7CiAgICAgICAgbGV0IGNvbGxlY3Rpb25DYXAgPSByZWNpcGllbnRBY2NvdW50LmdldENhcGFiaWxpdHk8JntEb21haW5zLkNvbGxlY3Rpb25QdWJsaWN9PihEb21haW5zLkNvbGxlY3Rpb25QdWJsaWNQYXRoKQogICAgICAgIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbkNhcC5ib3Jyb3coKSEKICAgICAgICB2YXIgZGVmYXVsdERvbWFpbjogJntEb21haW5zLkRvbWFpblB1YmxpY30/ID0gbmlsCgogICAgICAgIGxldCBpZHMgPSBjb2xsZWN0aW9uLmdldElEcygpCgogICAgICAgIGlmIGlkcy5sZW5ndGggPT0gMCB7CiAgICAgICAgICAgIHBhbmljKCJSZWNpcGllbnQgaGF2ZSBubyBkb21haW4gIikKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGVmYXVsdERvbWFpbiA9IGNvbGxlY3Rpb24uYm9ycm93RG9tYWluKGlkOiBpZHNbMF0pIQogICAgICAgICAgICAvLyBjaGVjayBkZWZ1YWx0IGRvbWFpbiAKICAgICAgICBmb3IgaWQgaW4gaWRzIHsKICAgICAgICBsZXQgZG9tYWluID0gY29sbGVjdGlvbi5ib3Jyb3dEb21haW4oaWQ6IGlkKSEKICAgICAgICBsZXQgaXNEZWZhdWx0ID0gZG9tYWluLmdldFRleHQoa2V5OiAiaXNEZWZhdWx0IikKICAgICAgICBpZiBpc0RlZmF1bHQgPT0gInRydWUiIHsKICAgICAgICAgICAgZGVmYXVsdERvbWFpbiA9IGRvbWFpbgogICAgICAgIH0KICAgICAgICB9CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgZG9tYWluIGluYm94CiAgICAgICAgZGVmYXVsdERvbWFpbiEuZGVwb3NpdFZhdWx0KGZyb206IDwtIHNlbGYuc2VudFZhdWx0LCBzZW5kZXJSZWY6IHNlbGYuc2VuZGVyUmVmKQoKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZiEuZGVwb3NpdChmcm9tOiA8LSBzZWxmLnNlbnRWYXVsdCkKICAgIH0KfQp9"
        },
        "evm": {
          "call": "aW1wb3J0IEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZERhdGE6IFN0cmluZywgaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFN0cmluZyB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KEFkZHJlc3MoMHhDT0EpKQoKICAgIGxldCBjb2EgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkNhbGwpICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudD4oCiAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQoKICAgIGxldCBjYWxsUmVzdWx0ID0gY29hLmNhbGwoCiAgICAgICAgdG86IEVWTS5FVk1BZGRyZXNzKGJ5dGVzOiBhZGRyZXNzQnl0ZXMpLAogICAgICAgIGRhdGE6IGhleEVuY29kZWREYXRhLmRlY29kZUhleCgpLAogICAgICAgIGdhc0xpbWl0OiAxNTAwMDAwMCwgLy8gdG9kbyBtYWtlIGl0IGNvbmZpZ3VyYWJsZSwgbWF4IGZvciBub3cKICAgICAgICB2YWx1ZTogRVZNLkJhbGFuY2UoYXR0b2Zsb3c6IDApCiAgICApCgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoY2FsbFJlc3VsdC5kYXRhKQp9Cg==",
          "callTest": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZERhdGE6IFN0cmluZywgaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZywgYWRkcmVzczogQWRkcmVzcyk6IFN0cmluZyB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCBhZGRyZXNzQnl0ZXMgPSBoZXhFbmNvZGVkQWRkcmVzcy5kZWNvZGVIZXgoKS50b0NvbnN0YW50U2l6ZWQ8W1VJbnQ4OyAyMF0+KCkhCgogICAgbGV0IGNhbGxSZXN1bHQgPSBjb2EuY2FsbCgKICAgICAgICB0bzogRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcyksCiAgICAgICAgZGF0YTogaGV4RW5jb2RlZERhdGEuZGVjb2RlSGV4KCksCiAgICAgICAgZ2FzTGltaXQ6IDE1MDAwMDAwLCAvLyB0b2RvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBtYXggZm9yIG5vdwogICAgdmFsdWU6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKQogICAgKQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGNhbGxSZXN1bHQuZGF0YSkKfQo=",
          "createCoa": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICBzZWxmLnNlbnRWYXVsdCA8LSB2YXVsdFJlZi53aXRoZHJhdyhhbW91bnQ6IGFtb3VudCkgYXMhIEBGbG93VG9rZW4uVmF1bHQKICAgICAgICBzZWxmLmF1dGggPSBzaWduZXIKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQogICAgICAgIGFjY291bnQuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQoKICAgICAgICBsb2coYWNjb3VudC5iYWxhbmNlKCkpCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0K",
          "createCoaTest": "CmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKCnRyYW5zYWN0aW9uKGFtb3VudDogVUZpeDY0KSB7CiAgICBsZXQgc2VudFZhdWx0OiBARmxvd1Rva2VuLlZhdWx0CiAgICBsZXQgYXV0aDogYXV0aChTdG9yYWdlKSAmQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgbGV0IHZhdWx0UmVmID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oCiAgICAgICAgICAgIGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0CiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpIGFzISBARmxvd1Rva2VuLlZhdWx0CiAgICAgICAgc2VsZi5hdXRoID0gc2lnbmVyCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFjY291bnQgPC0gRVZNLmNyZWF0ZUNhZGVuY2VPd25lZEFjY291bnQoKQogICAgICAgIGxvZyhhY2NvdW50LmFkZHJlc3MoKSkKICAgICAgICBhY2NvdW50LmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKCiAgICAgICAgbG9nKGFjY291bnQuYmFsYW5jZSgpKQogICAgICAgIHNlbGYuYXV0aC5zdG9yYWdlLnNhdmU8QEVWTS5DYWRlbmNlT3duZWRBY2NvdW50Pig8LWFjY291bnQsIHRvOiBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiAiZXZtIikhKQogICAgfQp9Cg==",
          "deployContract": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKCnRyYW5zYWN0aW9uKGNvZGU6IFN0cmluZykgewogICAgbGV0IGNvYTogYXV0aChFVk0uRGVwbG95KSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuY29hID0gc2lnbmVyLnN0b3JhZ2UuYm9ycm93PGF1dGgoRVZNLkRlcGxveSkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0pID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCgogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICBzZWxmLmNvYS5kZXBsb3koY29kZTogY29kZS5kZWNvZGVIZXgoKSwgIGdhc0xpbWl0OiAxNTAwMDAwMCwgdmFsdWU6IEVWTS5CYWxhbmNlKGF0dG9mbG93OiAwKSkKICAgIH0KfQo=",
          "estimateGas": "aW1wb3J0IEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZFR4OiBTdHJpbmcsIGFkZHJlc3M6IEFkZHJlc3MpOiBbVUludDY0OyAyXSB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCB0eFJlc3VsdCA9IEVWTS5ydW4odHg6IGhleEVuY29kZWRUeC5kZWNvZGVIZXgoKSwgY29pbmJhc2U6IGNvYS5hZGRyZXNzKCkpCgogICAgcmV0dXJuIFt0eFJlc3VsdC5lcnJvckNvZGUsIHR4UmVzdWx0Lmdhc1VzZWRdCn0K",
          "estimateGasTest": "aW1wb3J0IEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZFR4OiBTdHJpbmcsIGFkZHJlc3M6IEFkZHJlc3MpOiBbVUludDY0OyAyXSB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIGxldCB0eFJlc3VsdCA9IEVWTS5ydW4odHg6IGhleEVuY29kZWRUeC5kZWNvZGVIZXgoKSwgY29pbmJhc2U6IGNvYS5hZGRyZXNzKCkpCgogICAgcmV0dXJuIFt0eFJlc3VsdC5lcnJvckNvZGUsIHR4UmVzdWx0Lmdhc1VzZWRdCn0K",
          "fundEvmAddr": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4Rmxvd1Rva2VuCmltcG9ydCBFVk0gZnJvbSAweEVWTQoKdHJhbnNhY3Rpb24oZXZtQWRkcjogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KDxUb2tlblJlY2VpdmVyUGF0aD4pIQogICAgICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ==",
          "fundEvmAddrTest": "CmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhhMDIyNWU3MDAwYWM4MmE5CmltcG9ydCBGbG93VG9rZW4gZnJvbSAweDQ0NDVlN2FkMTE1NjgyNzYKaW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQpIHsKCiAgICAvLyBUaGUgVmF1bHQgcmVzb3VyY2UgdGhhdCBob2xkcyB0aGUgdG9rZW5zIHRoYXQgYXJlIGJlaW5nIHRyYW5zZmVyZWQKICAgIGxldCBzZW50VmF1bHQ6IEB7RnVuZ2libGVUb2tlbi5WYXVsdH0KICAgIC8vIGxldCBhZGRyZXNzQnl0ZXM6IFtVSW50ODsgMjBdCiAgICBsZXQgYWRkcmVzczogRVZNLkVWTUFkZHJlc3MKCiAgICBwcmVwYXJlKHNpZ25lcjogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBzaWduZXIncyBzdG9yZWQgdmF1bHQKICAgICAgICBsZXQgdmF1bHRSZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8YXV0aChGdW5naWJsZVRva2VuLldpdGhkcmF3KSAmRmxvd1Rva2VuLlZhdWx0PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQKICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQogICAgICAgIAogICAgICAgIGxldCBhZGRyZXNzQnl0ZXMgPSAgWzAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDAsIDIsIDIzOSwgMTU1LCA3LCA1MCwgMjM4LCAxNzAsIDEwMSwgMjIwXQogICAgICAgIC8vIHNlbGYuYWRkcmVzc0J5dGVzID0gIFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAyLCAyMzksIDE1NSwgNywgNTAsIDIzOCwgMTcwLCAxMDEsIDIyMF0KCiAgICAgICAgc2VsZi5hZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBJbnRlcm5hbEVWTS5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQsIHRvOiBzZWxmLmFkZHJlc3MuYnl0ZXMpCgogICAgfQp9",
          "getBalance": "aW1wb3J0IEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gYWRkcmVzcy5iYWxhbmNlKCkuaW5BdHRvRkxPVygpCn0K",
          "getBalanceTest": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQgewogICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKICAgIGxldCBhZGRyZXNzID0gRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcykKCiAgICByZXR1cm4gYWRkcmVzcy5iYWxhbmNlKCkuaW5BdHRvRkxPVygpCn0K",
          "getCoaAddr": "aW1wb3J0IEVWTSBmcm9tIDB4RVZNCgphY2Nlc3MoYWxsKQpmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3RyaW5nIHsKICAgIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQ8YXV0aChTdG9yYWdlKSAmQWNjb3VudD4oYWRkcmVzcykKCiAgICBsZXQgY29hID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzwmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgIGZyb206IC9zdG9yYWdlL2V2bQogICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgCiAgICBsZXQgY29hQWRkciA9IGNvYS5hZGRyZXNzKCkgCgogICAgbGV0IGFkZHJCeXRlOiBbVUludDhdID0gW10KCiAgICBmb3IgYnl0ZSBpbiBjb2FBZGRyLmJ5dGVzIHsKICAgICAgICBhZGRyQnl0ZS5hcHBlbmQoYnl0ZSkKICAgIH0KCiAgICByZXR1cm4gU3RyaW5nLmVuY29kZUhleChhZGRyQnl0ZSkKfQo=",
          "getCoaAddrTest": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFN0cmluZyB7CiAgICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50PGF1dGgoU3RvcmFnZSkgJkFjY291bnQ+KGFkZHJlc3MpCgogICAgbGV0IGNvYSA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBDT0EhIikKICAgIAogICAgbGV0IGNvYUFkZHIgPSBjb2EuYWRkcmVzcygpIAoKICAgIGxldCBhZGRyQnl0ZTogW1VJbnQ4XSA9IFtdCgogICAgZm9yIGJ5dGUgaW4gY29hQWRkci5ieXRlcyB7CiAgICAgICAgYWRkckJ5dGUuYXBwZW5kKGJ5dGUpCiAgICB9CgogICAgcmV0dXJuIFN0cmluZy5lbmNvZGVIZXgoYWRkckJ5dGUpCn0K",
          "getCode": "aW1wb3J0IEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFN0cmluZyB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGFkZHJlc3MuY29kZSgpKQp9Cg==",
          "getCodeTest": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFN0cmluZyB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBTdHJpbmcuZW5jb2RlSGV4KGFkZHJlc3MuY29kZSgpKQp9Cg==",
          "getNonce": "aW1wb3J0IEVWTQoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQ2NCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLm5vbmNlKCkKfQo=",
          "getNonceTest": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkKZnVuIG1haW4oaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZyk6IFVJbnQ2NCB7CiAgICBsZXQgYWRkcmVzc0J5dGVzID0gaGV4RW5jb2RlZEFkZHJlc3MuZGVjb2RlSGV4KCkudG9Db25zdGFudFNpemVkPFtVSW50ODsgMjBdPigpIQogICAgbGV0IGFkZHJlc3MgPSBFVk0uRVZNQWRkcmVzcyhieXRlczogYWRkcmVzc0J5dGVzKQoKICAgIHJldHVybiBhZGRyZXNzLm5vbmNlKCkKfQo=",
          "newAccountAndCoa": "aW1wb3J0IENyeXB0bwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBFVk0gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKCnRyYW5zYWN0aW9uKHB1YmxpY0tleTogU3RyaW5nLCBzaWduYXR1cmVBbGdvcml0aG06IFVJbnQ4LCBoYXNoQWxnb3JpdGhtOiBVSW50OCwgd2VpZ2h0OiBVRml4NjQpIHsKICAgIGxldCBzZW50VmF1bHQ6IEBGbG93VG9rZW4uVmF1bHQKICAgIGxldCBhdXRoOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKCiAgICAgICAgbGV0IGFjY291bnQgPSBBY2NvdW50KHBheWVyOiBzaWduZXIpCgogICAgICAgIGxldCBrZXkgPSBQdWJsaWNLZXkoCiAgICAgICAgICAgIHB1YmxpY0tleTogcHVibGljS2V5LmRlY29kZUhleCgpLAogICAgICAgICAgICBzaWduYXR1cmVBbGdvcml0aG06IFNpZ25hdHVyZUFsZ29yaXRobShyYXdWYWx1ZTogc2lnbmF0dXJlQWxnb3JpdGhtKSEKICAgICAgICApCgogICAgICAgIGFjY291bnQua2V5cy5hZGQocHVibGljS2V5OiBrZXksIGhhc2hBbGdvcml0aG06IEhhc2hBbGdvcml0aG0ocmF3VmFsdWU6IGhhc2hBbGdvcml0aG0pISwgd2VpZ2h0OiB3ZWlnaHQpCgkJCiAgICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdAogICAgICAgICkgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmZXJlbmNlIHRvIHRoZSBvd25lcidzIFZhdWx0ISIpCgogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogMC4wKSBhcyEgQEZsb3dUb2tlbi5WYXVsdAogICAgICAgIHNlbGYuYXV0aCA9IGFjY291bnQKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBsZXQgYWNjb3VudCA8LSBFVk0uY3JlYXRlQ2FkZW5jZU93bmVkQWNjb3VudCgpCiAgICAgICAgbG9nKGFjY291bnQuYWRkcmVzcygpKQogICAgICAgIGFjY291bnQuZGVwb3NpdChmcm9tOiA8LXNlbGYuc2VudFZhdWx0KQoKICAgICAgICBsb2coYWNjb3VudC5iYWxhbmNlKCkpCiAgICAgICAgc2VsZi5hdXRoLnN0b3JhZ2Uuc2F2ZTxARVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KDwtYWNjb3VudCwgdG86IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6ICJldm0iKSEpCiAgICB9Cn0K",
          "run": "aW1wb3J0IEVWTQoKdHJhbnNhY3Rpb24oaGV4RW5jb2RlZFR4OiBTdHJpbmcpIHsKICAgIGxldCBjb2E6ICZFVk0uQ2FkZW5jZU93bmVkQWNjb3VudAoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UpICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5jb2EgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkVWTS5DYWRlbmNlT3duZWRBY2NvdW50PigKICAgICAgICAgICAgZnJvbTogL3N0b3JhZ2UvZXZtCiAgICAgICAgKSA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIENPQSEiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIGxldCB0eFJlc3VsdCA9IEVWTS5ydW4odHg6IGhleEVuY29kZWRUeC5kZWNvZGVIZXgoKSwgY29pbmJhc2U6IHNlbGYuY29hLmFkZHJlc3MoKSkKICAgICAgICAvLyB0b2RvIG9ubHkgdGVtcG9yYXJ5IHVudGlsIHdlIGNvcnJlY3RseSBoYW5kbGUgZmFpbHVyZSBldmVudHMKICAgICAgICBhc3NlcnQoCiAgICAgICAgICAgIHR4UmVzdWx0LnN0YXR1cyA9PSBFVk0uU3RhdHVzLnN1Y2Nlc3NmdWwsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJmYWlsZWQgdG8gZXhlY3V0ZSBldm0gdHJhbnNhY3Rpb246ICIuY29uY2F0KHR4UmVzdWx0LmVycm9yQ29kZS50b1N0cmluZygpKQogICAgICAgICkKICAgIH0KfQo=",
          "runTest": "aW1wb3J0IEVWTSBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKdHJhbnNhY3Rpb24oaGV4RW5jb2RlZERhdGE6IFN0cmluZywgaGV4RW5jb2RlZEFkZHJlc3M6IFN0cmluZywgYWRkcmVzczogQWRkcmVzcykgewogICAgbGV0IGNvYTogYXV0aChFVk0uQ2FsbCkgJkVWTS5DYWRlbmNlT3duZWRBY2NvdW50CgogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLmNvYSA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEVWTS5DYWxsKSAmRVZNLkNhZGVuY2VPd25lZEFjY291bnQ+KAogICAgICAgICAgICBmcm9tOiAvc3RvcmFnZS9ldm0KICAgICAgICApID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgQ09BISIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgbGV0IGFkZHJlc3NCeXRlcyA9IGhleEVuY29kZWRBZGRyZXNzLmRlY29kZUhleCgpLnRvQ29uc3RhbnRTaXplZDxbVUludDg7IDIwXT4oKSEKCiAgICAgICAgbGV0IGNhbGxSZXN1bHQgPSBzZWxmLmNvYS5jYWxsKAogICAgICAgICAgICB0bzogRVZNLkVWTUFkZHJlc3MoYnl0ZXM6IGFkZHJlc3NCeXRlcyksCiAgICAgICAgICAgIGRhdGE6IGhleEVuY29kZWREYXRhLmRlY29kZUhleCgpLAogICAgICAgICAgICBnYXNMaW1pdDogMTUwMDAwMDAsIC8vIHRvZG8gbWFrZSBpdCBjb25maWd1cmFibGUsIG1heCBmb3Igbm93CiAgICAgICAgICAgIHZhbHVlOiBFVk0uQmFsYW5jZShhdHRvZmxvdzogMCkKICAgICAgICApCgogICAgfQp9Cg=="
        },
        "ft": {
          "enableTokenStorage": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4gKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgIH0KCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuUmVjZWl2ZXJQYXRoPikgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXBhYmlsaXR5ID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZGbG93VG9rZW4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRmxvd1Rva2VuLlZhdWx0Pig8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlbkJhbGFuY2VQYXRoPikKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
          "enableTokenStorageTest": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQoKdHJhbnNhY3Rpb24gewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0ICkgPT0gbmlsIHsKICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LSBGbG93VG9rZW4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgfQoKICAgICAgICBpZiBzaWduZXIuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCByZWNlaXZlckNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChyZWNlaXZlckNhcGFiaWxpdHksIGF0OiAvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQogICAgICAgIAogICAgICAgIH0KICAgICAgIAogICAgICAgIGlmIHNpZ25lci5jYXBhYmlsaXRpZXMuZXhpc3RzKC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgYmFsYW5jZUNhcGFiaWxpdHkgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IC9wdWJsaWMvZmxvd1Rva2VuQmFsYW5jZSkKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
          "transferTokens": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZmVyZW5jZSB0byB0aGUgb3duZXIncyBWYXVsdCEiKQoKICAgICAgICAvLyBXaXRoZHJhdyB0b2tlbnMgZnJvbSB0aGUgc2lnbmVyJ3Mgc3RvcmVkIHZhdWx0CiAgICAgICAgc2VsZi5zZW50VmF1bHQgPC0gdmF1bHRSZWYud2l0aGRyYXcoYW1vdW50OiBhbW91bnQpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgLy8gR2V0IHRoZSByZWNpcGllbnQncyBwdWJsaWMgYWNjb3VudCBvYmplY3QKICAgICAgICBsZXQgcmVjaXBpZW50QWNjb3VudCA9IGdldEFjY291bnQocmVjaXBpZW50KQoKICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlY2lwaWVudCdzIFJlY2VpdmVyCiAgICAgICAgbGV0IHJlY2VpdmVyUmVmID0gcmVjaXBpZW50QWNjb3VudC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5SZWNlaXZlcn0+KDxUb2tlblJlY2VpdmVyUGF0aD4pIQogICAgICAgICAgICAKICAgICAgICAvLyBEZXBvc2l0IHRoZSB3aXRoZHJhd24gdG9rZW5zIGluIHRoZSByZWNpcGllbnQncyByZWNlaXZlcgogICAgICAgIHJlY2VpdmVyUmVmLmRlcG9zaXQoZnJvbTogPC1zZWxmLnNlbnRWYXVsdCkKICAgIH0KfQ==",
          "transferTokensTest": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweGVlODI4NTZiZjIwZTJhYTYKaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MGFlNTNjYjZlM2Y0MmE3OQoKdHJhbnNhY3Rpb24oYW1vdW50OiBVRml4NjQsIHJlY2lwaWVudDogQWRkcmVzcykgewoKICAgIC8vIFRoZSBWYXVsdCByZXNvdXJjZSB0aGF0IGhvbGRzIHRoZSB0b2tlbnMgdGhhdCBhcmUgYmVpbmcgdHJhbnNmZXJlZAogICAgbGV0IHNlbnRWYXVsdDogQHtGdW5naWJsZVRva2VuLlZhdWx0fQoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgICAvLyBHZXQgYSByZWZlcmVuY2UgdG8gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIGxldCB2YXVsdFJlZiA9IHNpZ25lci5zdG9yYWdlLmJvcnJvdzxhdXRoKEZ1bmdpYmxlVG9rZW4uV2l0aGRyYXcpICZGbG93VG9rZW4uVmF1bHQ+KGZyb206IC9zdG9yYWdlL2Zsb3dUb2tlblZhdWx0KQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWZlcmVuY2UgdG8gdGhlIG93bmVyJ3MgVmF1bHQhIikKCiAgICAgICAgLy8gV2l0aGRyYXcgdG9rZW5zIGZyb20gdGhlIHNpZ25lcidzIHN0b3JlZCB2YXVsdAogICAgICAgIHNlbGYuc2VudFZhdWx0IDwtIHZhdWx0UmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIC8vIEdldCB0aGUgcmVjaXBpZW50J3MgcHVibGljIGFjY291bnQgb2JqZWN0CiAgICAgICAgbGV0IHJlY2lwaWVudEFjY291bnQgPSBnZXRBY2NvdW50KHJlY2lwaWVudCkKCiAgICAgICAgLy8gR2V0IGEgcmVmZXJlbmNlIHRvIHRoZSByZWNpcGllbnQncyBSZWNlaXZlcgogICAgICAgIGxldCByZWNlaXZlclJlZiA9IHJlY2lwaWVudEFjY291bnQuY2FwYWJpbGl0aWVzLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uUmVjZWl2ZXJ9PigvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKSEKICAgICAgICAgICAgCiAgICAgICAgLy8gRGVwb3NpdCB0aGUgd2l0aGRyYXduIHRva2VucyBpbiB0aGUgcmVjaXBpZW50J3MgcmVjZWl2ZXIKICAgICAgICByZWNlaXZlclJlZi5kZXBvc2l0KGZyb206IDwtc2VsZi5zZW50VmF1bHQpCiAgICB9Cn0=",
          "isTokenListEnabled": "CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKICAgIAogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrRmxvd1Rva2VuVmF1bHQoYWRkcmVzczogQWRkcmVzcykgOiBCb29sIHsKICAgICAgbGV0IHJlY2VpdmVyOiBCb29sID0gZ2V0QWNjb3VudChhZGRyZXNzKQogICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlblJlY2VpdmVyKQoKICAgICAgbGV0IGJhbGFuY2U6IEJvb2wgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgICAgICAuY2FwYWJpbGl0aWVzLmV4aXN0cygvcHVibGljL2Zsb3dUb2tlbkJhbGFuY2UpCgogICAgICBsZXQgZmxhZyA9IHJlY2VpdmVyICYmIGJhbGFuY2UgICAgICAKCiAgICAgICByZXR1cm4gZmxhZwogICAgfQogICAgCgogICAgYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcykgOiB7U3RyaW5nOiBCb29sfSB7CiAgICAgIHJldHVybiB7CiAgICAiQS40NDQ1ZTdhZDExNTY4Mjc2LkZsb3dUb2tlbiIgOgogICAgY2hlY2tGbG93VG9rZW5WYXVsdChhZGRyZXNzOiBhZGRyZXNzKQogICAgfQogICAgfQogIA==",
          "getTokenListBalance": "CiAgICBpbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgogICAgaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4NDQ0NWU3YWQxMTU2ODI3NgoKICAgIAogICAgYWNjZXNzKGFsbCkgZnVuIGNoZWNrRmxvd1Rva2VuQmFsYW5jZShhZGRyZXNzOiBBZGRyZXNzKSA6IFVGaXg2NCB7CiAgICAgIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICAgICAgbGV0IHZhdWx0UmVmID0gYWNjb3VudAogICAgICAgIC5jYXBhYmlsaXRpZXMuYm9ycm93PCZ7RnVuZ2libGVUb2tlbi5CYWxhbmNlfT4oL3B1YmxpYy9mbG93VG9rZW5CYWxhbmNlKSA/PyBuaWwKICAgICAgCiAgICAgIGlmIHZhdWx0UmVmICE9IG5pbCB7CiAgICAgICAgCiAgICAgICAgcmV0dXJuIHZhdWx0UmVmIS5iYWxhbmNlCiAgICAgIH0KICAgICAgCiAgICAgIHJldHVybiAwLjAKICAgICAgCiAgICB9CiAgICAKCiAgICBhY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKSA6IHtTdHJpbmc6IFVGaXg2NH0gewogICAgICByZXR1cm4gewogICAgICAiQS40NDQ1ZTdhZDExNTY4Mjc2LkZsb3dUb2tlbiIgOgogICAgY2hlY2tGbG93VG9rZW5CYWxhbmNlKGFkZHJlc3M6IGFkZHJlc3MpCiAgICB9CiAgICB9CiAg"
        },
        "hybridCustody": {
          "editChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnRyYW5zYWN0aW9uKGNoaWxkQWRkcmVzczogQWRkcmVzcywgbmFtZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogU3RyaW5nLCB0aHVtYm5haWw6IFN0cmluZykgewogICAgcHJlcGFyZShhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgCiAgICAgICAgbGV0IGQgPSBNZXRhZGF0YVZpZXdzLkRpc3BsYXkoCiAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICAgICAgdGh1bWJuYWlsOiBNZXRhZGF0YVZpZXdzLkhUVFBGaWxlKHVybDogdGh1bWJuYWlsKQogICAgICAgICkKCiAgICAgICAgbS5zZXRDaGlsZEFjY291bnREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWRkcmVzcywgZCkKICAgIH0KfQ==",
          "getAccessibleCoinInfo": "IGltcG9ydCBIeWJyaWRDdXN0b2R5IGZyb20gMHhIeWJyaWRDdXN0b2R5CmltcG9ydCBNZXRhZGF0YVZpZXdzIGZyb20gMHhNZXRhZGF0YVZpZXdzCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCmltcG9ydCBOb25GdW5naWJsZVRva2VuIGZyb20gMHhOb25GdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFRva2VuSW5mbyB7CnB1YiBsZXQgaWQ6IFN0cmluZwpwdWIgbGV0IGJhbGFuY2U6IFVGaXg2NAoKaW5pdChpZDogU3RyaW5nLCBiYWxhbmNlOiBVRml4NjQpIHsKICAgIHNlbGYuaWQgPSBpZAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQp9Cn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IFtUb2tlbkluZm9dIHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICB2YXIgY29pbkluZm9MaXN0OiBbVG9rZW5JbmZvXSA9IFtdCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgdmF1bHRUeXBlOiBUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwoKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGNoaWxkQWRkcmVzcykKICAgICAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgICAgICBsZXQgdmF1bHRCYWxhbmNlczoge1N0cmluZzogVUZpeDY0fSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAgICAgLy8gZ2V0IGFsbCBwcml2YXRlIHBhdGhzCiAgICAgICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgICAgIC8vIENoZWNrIHdoaWNoIHByaXZhdGUgcGF0aHMgaGF2ZSBORlQgUHJvdmlkZXIgQU5EIGNhbiBiZSBib3Jyb3dlZAogICAgICAgICAgICBpZiAhdHlwZS5pc1N1YnR5cGUob2Y6IHByb3ZpZGVyVHlwZSl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIGxldCBjYXAgPSBjaGlsZEFjY3QuZ2V0Q2FwYWJpbGl0eShwYXRoOiBwYXRoLCB0eXBlOiBUeXBlPCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+KCkpIHsKICAgICAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme0Z1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgICAgICBpZiAhcHJvdmlkZXJDYXAuY2hlY2soKXsKICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGlzbid0IGEgcHJvdmlkZXIgY2FwYWJpbGl0eSwgZXhpdCB0aGUgYWNjb3VudCBpdGVyYXRpb24gZnVuY3Rpb24gZm9yIHRoaXMgcGF0aAogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmb3VuZFR5cGVzLmFwcGVuZChjYXAuYm9ycm93PCZBbnlSZXNvdXJjZT4oKSEuZ2V0VHlwZSgpKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfSkKICAgICAgICB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPSBmb3VuZFR5cGVzCgogICAgICAgIC8vIGl0ZXJhdGUgc3RvcmFnZSwgY2hlY2sgaWYgdHlwZUlkc1dpdGhQcm92aWRlciBjb250YWlucyB0aGUgdHlwZUlkLCBpZiBzbywgYWRkIHRvIHZhdWx0QmFsYW5jZXMKICAgICAgICBhY2N0LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewoKICAgICAgICAgICAgaWYgdHlwZUlkc1dpdGhQcm92aWRlcltjaGlsZEFkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKHZhdWx0VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsZXQgdmF1bHQgPSBhY2N0LmJvcnJvdzwmRnVuZ2libGVUb2tlbi5WYXVsdD4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvaW5JbmZvTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUb2tlbkluZm8oaWQ6IHR5cGUuaWRlbnRpZmllciwgYmFsYW5jZTogdmF1bHQuYmFsYW5jZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAKICAgIHJldHVybiBjb2luSW5mb0xpc3QKfQo=",
          "getAccessibleCollectionAndIds": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IFtVSW50NjRdfSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIG5mdHMKfQ==",
          "getAccessibleCollectionAndIdsDisplay": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBORlRDb2xsZWN0aW9uIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PwogIHB1YiBsZXQgaWRMaXN0OiBbVUludDY0XQoKICBpbml0KGlkOlN0cmluZywgZGlzcGxheTogQ29sbGVjdGlvbkRpc3BsYXk/LCBpZExpc3Q6IFtVSW50NjRdKSB7CiAgICBzZWxmLmlkID0gaWQKICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgIHNlbGYuaWRMaXN0ID0gaWRMaXN0CiAgfQp9CgpwdWIgZnVuIGdldERpc3BsYXkoYWRkcmVzczogQWRkcmVzcywgcGF0aDogU3RvcmFnZVBhdGgpOiBDb2xsZWN0aW9uRGlzcGxheT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgdmFyIGl0ZW06IENvbGxlY3Rpb25EaXNwbGF5PyA9ICBuaWwKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGl0ZW0gPSBDb2xsZWN0aW9uRGlzcGxheSgKICAgICAgICAgICAgICAgIG5hbWU6IGRpc3BsYXkubmFtZSwKICAgICAgICAgICAgICAgIHNxdWFyZUltYWdlOiBkaXNwbGF5LnNxdWFyZUltYWdlCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogIHJldHVybiBpdGVtCn0KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWNjb3VudDogQWRkcmVzcyk6IFtORlRDb2xsZWN0aW9uXSB7CiAgICBsZXQgbWFuYWdlciA9IGdldEF1dGhBY2NvdW50KHBhcmVudCkuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKSA/PyBwYW5pYyAoIm1hbmFnZXIgZG9lcyBub3QgZXhpc3QiKQoKICAgIC8vIEFkZHJlc3MgLT4gQ29sbGVjdGlvbiBUeXBlIC0+IG93bmVkTkZUcwoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCBjb2xsZWN0aW9uVHlwZTogVHlwZSA9IFR5cGU8QHtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgbGV0IGFjY3QgPSBnZXRBdXRoQWNjb3VudChjaGlsZEFjY291bnQpCiAgICBsZXQgZm91bmRUeXBlczogW1R5cGVdID0gW10KICAgIGxldCBuZnRzOiB7U3RyaW5nOiBbVUludDY0XX0gPSB7fQogICAgbGV0IGNvbGxlY3Rpb25MaXN0OiBbTkZUQ29sbGVjdGlvbl0gPSBbXQogICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBjaGlsZEFjY291bnQpID8/IHBhbmljKCJjaGlsZCBhY2NvdW50IG5vdCBmb3VuZCIpCiAgICAKICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgYWNjdC5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgIGxldCBwcm92aWRlckNhcCA9IGNhcCBhcyEgQ2FwYWJpbGl0eTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PiAKCiAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgYWNjdC5mb3JFYWNoU3RvcmVkKGZ1biAocGF0aDogU3RvcmFnZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKCiAgICAgICAgaWYgZm91bmRUeXBlcyA9PSBuaWwgewogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0KCiAgICAgICAgZm9yIGlkeCwgdmFsdWUgaW4gZm91bmRUeXBlcyB7CiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGZvdW5kVHlwZXMhCgogICAgICAgICAgICBpZiB2YWx1ZVtpZHhdICE9IHR5cGUgewogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmIHR5cGUuaXNJbnN0YW5jZShjb2xsZWN0aW9uVHlwZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiBsZXQgY29sbGVjdGlvbiA9IGFjY3QuYm9ycm93PCZ7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgeyAKICAgICAgICAgICAgICAgICAgICBuZnRzLmluc2VydChrZXk6IHR5cGUuaWRlbnRpZmllciwgY29sbGVjdGlvbi5nZXRJRHMoKSkKICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTGlzdC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICBORlRDb2xsZWN0aW9uKAogICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZS5pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBnZXREaXNwbGF5KGFkZHJlc3M6IGNoaWxkQWNjb3VudCwgcGF0aDogcGF0aCksCiAgICAgICAgICAgICAgICAgICAgICAgIGlkTGlzdDogY29sbGVjdGlvbi5nZXRJRHMoKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWUKICAgIH0pCgogICAgcmV0dXJuIGNvbGxlY3Rpb25MaXN0Cn0=",
          "getAccessibleCollectionsAndIds": "Ly8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBzY3JpcHQgeW91IGNhbiBleGVjdXRlIG9uIEZsb3cgTmV0d29yawppbXBvcnQgSHlicmlkQ3VzdG9keSBmcm9tIDB4SHlicmlkQ3VzdG9keQppbXBvcnQgTWV0YWRhdGFWaWV3cyBmcm9tIDB4TWV0YWRhdGFWaWV3cwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgoKcHViIGZ1biBtYWluKHBhcmVudDogQWRkcmVzcyk6IHtBZGRyZXNzOiB7U3RyaW5nOiBbVUludDY0XX19IHsKICAgIGxldCBtYW5hZ2VyID0gZ2V0QXV0aEFjY291bnQocGFyZW50KS5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpID8/IHBhbmljICgibWFuYWdlciBkb2VzIG5vdCBleGlzdCIpCgogICAgdmFyIHR5cGVJZHNXaXRoUHJvdmlkZXI6IHtBZGRyZXNzOiBbVHlwZV19ID0ge30KCiAgICAvLyBBZGRyZXNzIC0+IENvbGxlY3Rpb24gVHlwZSAtPiBvd25lZE5GVHMKICAgIHZhciBhY2Nlc3NpYmxlTkZUczoge0FkZHJlc3M6IHtTdHJpbmc6IFtVSW50NjRdfX0gID0ge30KCiAgICBsZXQgcHJvdmlkZXJUeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZ7Tm9uRnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+PigpCiAgICBsZXQgY29sbGVjdGlvblR5cGU6IFR5cGUgPSBUeXBlPEB7Tm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oKQoKICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCBjaGlsZCBhY2NvdW50cwogICAgZm9yIGFkZHJlc3MgaW4gbWFuYWdlci5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgICAgICBsZXQgYWNjdCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgbGV0IGZvdW5kVHlwZXM6IFtUeXBlXSA9IFtdCiAgICAgICAgbGV0IG5mdHM6IHtTdHJpbmc6IFtVSW50NjRdfSA9IHt9CiAgICAgICAgbGV0IGNoaWxkQWNjdCA9IG1hbmFnZXIuYm9ycm93QWNjb3VudChhZGRyOiBhZGRyZXNzKSA/PyBwYW5pYygiY2hpbGQgYWNjb3VudCBub3QgZm91bmQiKQogICAgICAgIC8vIGdldCBhbGwgcHJpdmF0ZSBwYXRocwogICAgICAgIGFjY3QuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgICAgICAvLyBDaGVjayB3aGljaCBwcml2YXRlIHBhdGhzIGhhdmUgTkZUIFByb3ZpZGVyIEFORCBjYW4gYmUgYm9ycm93ZWQKICAgICAgICAgICAgaWYgIXR5cGUuaXNTdWJ0eXBlKG9mOiBwcm92aWRlclR5cGUpewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiBsZXQgY2FwID0gY2hpbGRBY2N0LmdldENhcGFiaWxpdHkocGF0aDogcGF0aCwgdHlwZTogVHlwZTwme05vbkZ1bmdpYmxlVG9rZW4uUHJvdmlkZXJ9PigpKSB7CiAgICAgICAgICAgICAgICBsZXQgcHJvdmlkZXJDYXAgPSBjYXAgYXMhIENhcGFiaWxpdHk8JntOb25GdW5naWJsZVRva2VuLlByb3ZpZGVyfT4gCgogICAgICAgICAgICAgICAgaWYgIXByb3ZpZGVyQ2FwLmNoZWNrKCl7CiAgICAgICAgICAgICAgICAgICAgLy8gaWYgdGhpcyBpc24ndCBhIHByb3ZpZGVyIGNhcGFiaWxpdHksIGV4aXQgdGhlIGFjY291bnQgaXRlcmF0aW9uIGZ1bmN0aW9uIGZvciB0aGlzIHBhdGgKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZm91bmRUeXBlcy5hcHBlbmQoY2FwLmJvcnJvdzwmQW55UmVzb3VyY2U+KCkhLmdldFR5cGUoKSkKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgIH0pCiAgICAgICAgdHlwZUlkc1dpdGhQcm92aWRlclthZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gbmZ0cwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2FkZHJlc3NdID09IG5pbCB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3Iga2V5IGluIHR5cGVJZHNXaXRoUHJvdmlkZXIua2V5cyB7CiAgICAgICAgICAgICAgICBmb3IgaWR4LCB2YWx1ZSBpbiB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0eXBlSWRzV2l0aFByb3ZpZGVyW2tleV0hCgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlW2lkeF0gIT0gdHlwZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgdHlwZS5pc0luc3RhbmNlKGNvbGxlY3Rpb25UeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gYWNjdC5ib3Jyb3c8JntOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmZ0cy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIGNvbGxlY3Rpb24uZ2V0SURzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIGFjY2Vzc2libGVORlRzW2FkZHJlc3NdID0gbmZ0cwogICAgfQogICAgcmV0dXJuIGFjY2Vzc2libGVORlRzCn0=",
          "getAccessibleFungibleToken": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MsIGNoaWxkQWRkcmVzczogQWRkcmVzcyk6IHtTdHJpbmc6IFVGaXg2NH0gewogICAgbGV0IG1hbmFnZXIgPSBnZXRBdXRoQWNjb3VudChwYXJlbnQpLmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkgPz8gcGFuaWMgKCJtYW5hZ2VyIGRvZXMgbm90IGV4aXN0IikKCiAgICB2YXIgdHlwZUlkc1dpdGhQcm92aWRlcjoge0FkZHJlc3M6IFtUeXBlXX0gPSB7fQoKICAgIGxldCBwcm92aWRlclR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4+KCkKICAgIGxldCB2YXVsdFR5cGU6IFR5cGUgPSBUeXBlPEBGdW5naWJsZVRva2VuLlZhdWx0PigpCgogICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGNoaWxkIGFjY291bnRzCgogICAgICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQoY2hpbGRBZGRyZXNzKQogICAgICAgIGxldCBmb3VuZFR5cGVzOiBbVHlwZV0gPSBbXQogICAgICAgIGxldCB2YXVsdEJhbGFuY2VzOiB7U3RyaW5nOiBVRml4NjR9ID0ge30KICAgICAgICBsZXQgY2hpbGRBY2N0ID0gbWFuYWdlci5ib3Jyb3dBY2NvdW50KGFkZHI6IGNoaWxkQWRkcmVzcykgPz8gcGFuaWMoImNoaWxkIGFjY291bnQgbm90IGZvdW5kIikKICAgICAgICAvLyBnZXQgYWxsIHByaXZhdGUgcGF0aHMKICAgICAgICBhY2N0LmZvckVhY2hQcml2YXRlKGZ1biAocGF0aDogUHJpdmF0ZVBhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgICAgICAgICAgLy8gQ2hlY2sgd2hpY2ggcHJpdmF0ZSBwYXRocyBoYXZlIE5GVCBQcm92aWRlciBBTkQgY2FuIGJlIGJvcnJvd2VkCiAgICAgICAgICAgIGlmICF0eXBlLmlzU3VidHlwZShvZjogcHJvdmlkZXJUeXBlKXsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgbGV0IGNhcCA9IGNoaWxkQWNjdC5nZXRDYXBhYmlsaXR5KHBhdGg6IHBhdGgsIHR5cGU6IFR5cGU8JntGdW5naWJsZVRva2VuLlByb3ZpZGVyfT4oKSkgewogICAgICAgICAgICAgICAgbGV0IHByb3ZpZGVyQ2FwID0gY2FwIGFzISBDYXBhYmlsaXR5PCZ7RnVuZ2libGVUb2tlbi5Qcm92aWRlcn0+IAoKICAgICAgICAgICAgICAgIGlmICFwcm92aWRlckNhcC5jaGVjaygpewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXNuJ3QgYSBwcm92aWRlciBjYXBhYmlsaXR5LCBleGl0IHRoZSBhY2NvdW50IGl0ZXJhdGlvbiBmdW5jdGlvbiBmb3IgdGhpcyBwYXRoCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZvdW5kVHlwZXMuYXBwZW5kKGNhcC5ib3Jyb3c8JkFueVJlc291cmNlPigpIS5nZXRUeXBlKCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgICAgIHR5cGVJZHNXaXRoUHJvdmlkZXJbY2hpbGRBZGRyZXNzXSA9IGZvdW5kVHlwZXMKCiAgICAgICAgLy8gaXRlcmF0ZSBzdG9yYWdlLCBjaGVjayBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyIGNvbnRhaW5zIHRoZSB0eXBlSWQsIGlmIHNvLCBhZGQgdG8gdmF1bHRCYWxhbmNlcwogICAgICAgIGFjY3QuZm9yRWFjaFN0b3JlZChmdW4gKHBhdGg6IFN0b3JhZ2VQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CgogICAgICAgICAgICBpZiB0eXBlSWRzV2l0aFByb3ZpZGVyW2NoaWxkQWRkcmVzc10gPT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGZvciBrZXkgaW4gdHlwZUlkc1dpdGhQcm92aWRlci5rZXlzIHsKICAgICAgICAgICAgICAgIGZvciBpZHgsIHZhbHVlIGluIHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEgewogICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHR5cGVJZHNXaXRoUHJvdmlkZXJba2V5XSEKCiAgICAgICAgICAgICAgICAgICAgaWYgdmFsdWVbaWR4XSAhPSB0eXBlIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBpZiB0eXBlLmlzSW5zdGFuY2UodmF1bHRUeXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxldCB2YXVsdCA9IGFjY3QuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmF1bHRCYWxhbmNlcy5pbnNlcnQoa2V5OiB0eXBlLmlkZW50aWZpZXIsIHZhdWx0LmJhbGFuY2UpCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICB9KQogICAgCiAgICByZXR1cm4gdmF1bHRCYWxhbmNlcwp9",
          "getChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCiAgICBwdWIgZnVuIG1haW4ocGFyZW50OiBBZGRyZXNzKTogW0FkZHJlc3NdIHsKICAgIGxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQogICAgbGV0IG1hbmFnZXIgPSBhY2N0LmJvcnJvdzwmSHlicmlkQ3VzdG9keS5NYW5hZ2VyPihmcm9tOiBIeWJyaWRDdXN0b2R5Lk1hbmFnZXJTdG9yYWdlUGF0aCkKICAgICAgICA/PyBwYW5pYygibWFuYWdlciBub3QgZm91bmQiKQogICAgcmV0dXJuIG1hbmFnZXIuZ2V0Q2hpbGRBZGRyZXNzZXMoKQp9Cg==",
          "getChildAccountMeta": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBmdW4gbWFpbihwYXJlbnQ6IEFkZHJlc3MpOiB7QWRkcmVzczogQW55U3RydWN0fSB7CmxldCBhY2N0ID0gZ2V0QXV0aEFjY291bnQocGFyZW50KQpsZXQgbSA9IGFjY3QuYm9ycm93PCZIeWJyaWRDdXN0b2R5Lk1hbmFnZXI+KGZyb206IEh5YnJpZEN1c3RvZHkuTWFuYWdlclN0b3JhZ2VQYXRoKQogICAgPz8gcGFuaWMoIm1hbmFnZXIgbm90IGZvdW5kIikKdmFyIGRhdGE6IHtBZGRyZXNzOiBBbnlTdHJ1Y3R9ID0ge30KZm9yIGFkZHJlc3MgaW4gbS5nZXRDaGlsZEFkZHJlc3NlcygpIHsKICAgIGxldCBjID0gbS5ib3Jyb3dBY2NvdW50KGFkZHI6IGFkZHJlc3MpID8/IHBhbmljKCJjaGlsZCBub3QgZm91bmQiKQogICAgbGV0IGQgPSBjLnJlc29sdmVWaWV3KFR5cGU8TWV0YWRhdGFWaWV3cy5EaXNwbGF5PigpKQogICAgZGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBkKQp9CnJldHVybiBkYXRhCn0=",
          "getChildAccountNFT": "aW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKaW1wb3J0IExpbmtlZEFjY291bnRzIGZyb20gMHhDaGlsZEFjY291bnQKCi8vLyBDdXN0b20gc3RydWN0IHRvIG1ha2UgaW50ZXJwcmV0YXRpb24gb2YgTkZUICYgQ29sbGVjdGlvbiBkYXRhIGVhc3kgY2xpZW50IHNpZGUKcHViIHN0cnVjdCBORlREYXRhIHsKICAgIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgICBwdWIgbGV0IGRlc2NyaXB0aW9uOiBTdHJpbmcKICAgIHB1YiBsZXQgdGh1bWJuYWlsOiBTdHJpbmcKICAgIHB1YiBsZXQgcmVzb3VyY2VJRDogVUludDY0CiAgICBwdWIgbGV0IG93bmVyQWRkcmVzczogQWRkcmVzcz8KICAgIHB1YiBsZXQgY29sbGVjdGlvbk5hbWU6IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvbkRlc2NyaXB0aW9uOiBTdHJpbmc/CiAgICBwdWIgbGV0IGNvbGxlY3Rpb25VUkw6IFN0cmluZz8KICAgIHB1YiBsZXQgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogU3RyaW5nCiAgICBwdWIgbGV0IGNvbGxlY3Rpb25QdWJsaWNQYXRoSWRlbnRpZmllcjogU3RyaW5nPwoKICAgIGluaXQoCiAgICAgICAgbmFtZTogU3RyaW5nLAogICAgICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsCiAgICAgICAgdGh1bWJuYWlsOiBTdHJpbmcsCiAgICAgICAgcmVzb3VyY2VJRDogVUludDY0LAogICAgICAgIG93bmVyQWRkcmVzczogQWRkcmVzcz8sCiAgICAgICAgY29sbGVjdGlvbk5hbWU6IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvbkRlc2NyaXB0aW9uOiBTdHJpbmc/LAogICAgICAgIGNvbGxlY3Rpb25VUkw6IFN0cmluZz8sCiAgICAgICAgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogU3RyaW5nLAogICAgICAgIGNvbGxlY3Rpb25QdWJsaWNQYXRoSWRlbnRpZmllcjogU3RyaW5nPwogICAgKSB7CiAgICAgICAgc2VsZi5uYW1lID0gbmFtZQogICAgICAgIHNlbGYuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbgogICAgICAgIHNlbGYudGh1bWJuYWlsID0gdGh1bWJuYWlsCiAgICAgICAgc2VsZi5yZXNvdXJjZUlEID0gcmVzb3VyY2VJRAogICAgICAgIHNlbGYub3duZXJBZGRyZXNzID0gb3duZXJBZGRyZXNzCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uTmFtZSA9IGNvbGxlY3Rpb25OYW1lCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uRGVzY3JpcHRpb24gPSBjb2xsZWN0aW9uRGVzY3JpcHRpb24KICAgICAgICBzZWxmLmNvbGxlY3Rpb25VUkwgPSBjb2xsZWN0aW9uVVJMCiAgICAgICAgc2VsZi5jb2xsZWN0aW9uU3RvcmFnZVBhdGhJZGVudGlmaWVyID0gY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcgogICAgICAgIHNlbGYuY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyID0gY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyCiAgICB9Cn0KCi8vLyBIZWxwZXIgZnVuY3Rpb24gdGhhdCByZXRyaWV2ZXMgZGF0YSBhYm91dCBhbGwgcHVibGljbHkgYWNjZXNzaWJsZSBORlRzIGluIGFuIGFjY291bnQKLy8vCnB1YiBmdW4gZ2V0QWxsVmlld3NGcm9tQWRkcmVzcyhfIGFkZHJlc3M6IEFkZHJlc3MpOiBbTkZURGF0YV0gewogICAgLy8gR2V0IHRoZSBhY2NvdW50CiAgICBsZXQgYWNjb3VudDogQXV0aEFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogICAgLy8gSW5pdCBmb3IgcmV0dXJuIHZhbHVlCiAgICBsZXQgZGF0YTogW05GVERhdGFdID0gW10KICAgIC8vIEFzc2lnbiB0aGUgdHlwZXMgd2UnbGwgbmVlZAogICAgbGV0IGNvbGxlY3Rpb25UeXBlOiBUeXBlID0gVHlwZTxAe05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgICBsZXQgZGlzcGxheVR5cGU6IFR5cGUgPSBUeXBlPE1ldGFkYXRhVmlld3MuRGlzcGxheT4oKQogICAgbGV0IGNvbGxlY3Rpb25EaXNwbGF5VHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGlzcGxheT4oKQogICAgbGV0IGNvbGxlY3Rpb25EYXRhVHlwZTogVHlwZSA9IFR5cGU8TWV0YWRhdGFWaWV3cy5ORlRDb2xsZWN0aW9uRGF0YT4oKQoKICAgIC8vIEl0ZXJhdGUgb3ZlciBlYWNoIHB1YmxpYyBwYXRoCiAgICBhY2NvdW50LmZvckVhY2hTdG9yZWQoZnVuIChwYXRoOiBTdG9yYWdlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgICAgIC8vIENoZWNrIGlmIGl0J3MgYSBDb2xsZWN0aW9uIHdlJ3JlIGludGVyZXN0ZWQgaW4sIGlmIHNvLCBnZXQgYSByZWZlcmVuY2UKICAgICAgICBpZiB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpIHsKICAgICAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpYywgTWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICAgICAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIENvbGxlY3Rpb24ncyBORlRzLCBjb250aW51aW5nIGlmIHRoZSBORlQgcmVzb2x2ZXMgdGhlIHZpZXdzIHdlIHdhbnQKICAgICAgICAgICAgICAgIGZvciBpZCBpbiBjb2xsZWN0aW9uUmVmLmdldElEcygpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZXJSZWY6ICZ7TWV0YWRhdGFWaWV3cy5SZXNvbHZlcn0gPSBjb2xsZWN0aW9uUmVmLmJvcnJvd1ZpZXdSZXNvbHZlcihpZDogaWQpCiAgICAgICAgICAgICAgICAgICAgaWYgbGV0IGRpc3BsYXkgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhkaXNwbGF5VHlwZSkgYXMhIE1ldGFkYXRhVmlld3MuRGlzcGxheT8gewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29sbGVjdGlvbkRpc3BsYXkgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhjb2xsZWN0aW9uRGlzcGxheVR5cGUpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EaXNwbGF5PwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29sbGVjdGlvbkRhdGEgPSByZXNvbHZlclJlZi5yZXNvbHZlVmlldyhjb2xsZWN0aW9uRGF0YVR5cGUpIGFzISBNZXRhZGF0YVZpZXdzLk5GVENvbGxlY3Rpb25EYXRhPwogICAgICAgICAgICAgICAgICAgICAgICAvLyBCdWlsZCBvdXIgTkZURGF0YSBzdHJ1Y3QgZnJvbSB0aGUgbWV0YWRhdGEKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5mdERhdGEgPSBORlREYXRhKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZGlzcGxheS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGRpc3BsYXkuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGRpc3BsYXkudGh1bWJuYWlsLnVyaSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VJRDogcmVzb2x2ZXJSZWYudXVpZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG93bmVyQWRkcmVzczogcmVzb2x2ZXJSZWYub3duZXI/LmFkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uTmFtZTogY29sbGVjdGlvbkRpc3BsYXk/Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uRGVzY3JpcHRpb246IGNvbGxlY3Rpb25EaXNwbGF5Py5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25VUkw6IGNvbGxlY3Rpb25EaXNwbGF5Py5leHRlcm5hbFVSTD8udXJsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblN0b3JhZ2VQYXRoSWRlbnRpZmllcjogcGF0aC50b1N0cmluZygpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvblB1YmxpY1BhdGhJZGVudGlmaWVyOiBjb2xsZWN0aW9uRGF0YT8ucHVibGljUGF0aD8udG9TdHJpbmcoKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkZCBpdCB0byBvdXIgZGF0YQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmFwcGVuZChuZnREYXRhKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZQogICAgfSkKICAgIHJldHVybiBkYXRhCn0KCi8vLyBTY3JpcHQgdGhhdCByZXRyaWV2ZSBkYXRhIGFib3V0IGFsbCBwdWJsaWNseSBhY2Nlc3NpYmxlIE5GVHMgaW4gYW4gYWNjb3VudCBhbmQgYW55IG9mIGl0cwovLy8gY2hpbGQgYWNjb3VudHMKLy8vCi8vLyBOb3RlIHRoYXQgdGhpcyBzY3JpcHQgZG9lcyBub3QgY29uc2lkZXIgYWNjb3VudHMgd2l0aCBleGNlcHRpb25hbGx5IGxhcmdlIGNvbGxlY3Rpb25zIAovLy8gd2hpY2ggd291bGQgcmVzdWx0IGluIG1lbW9yeSBlcnJvcnMuIFRvIGNvbXBvc2UgYSBzY3JpcHQgdGhhdCBkb2VzIGNvdmVyIGFjY291bnRzIHdpdGgKLy8vIGEgbGFyZ2UgbnVtYmVyIG9mIHN1Yi1hY2NvdW50cyBhbmQvb3IgTkZUcyB3aXRoaW4gdGhvc2UgYWNjb3VudHMsIHNlZSBleGFtcGxlIDUgaW4KLy8vIHRoZSBORlQgQ2F0YWxvZydzIFJFQURNRTogaHR0cHM6Ly9naXRodWIuY29tL2RhcHBlcmxhYnMvbmZ0LWNhdGFsb2cgYW5kIGFkYXB0IGZvciB1c2UKLy8vIHdpdGggTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvbgovLy8KcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiB7QWRkcmVzczogW05GVERhdGFdfSB7CiAgICBsZXQgYWxsTkZURGF0YToge0FkZHJlc3M6IFtORlREYXRhXX0gPSB7fQogICAgCiAgICAvLyBBZGQgYWxsIHJldHJpZXZlZCB2aWV3cyB0byB0aGUgcnVubmluZyBtYXBwaW5nIGluZGV4ZWQgb24gYWRkcmVzcwogICAgYWxsTkZURGF0YS5pbnNlcnQoa2V5OiBhZGRyZXNzLCBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKGFkZHJlc3MpKQogICAgCiAgICAvKiBJdGVyYXRlIG92ZXIgYW55IGNoaWxkIGFjY291bnRzICovIAogICAgLy8KICAgIC8vIEdldCByZWZlcmVuY2UgdG8gTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvbiBpZiBpdCBleGlzdHMKICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gZ2V0QWNjb3VudChhZGRyZXNzKS5nZXRDYXBhYmlsaXR5PCZMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9ue0xpbmtlZEFjY291bnRzLkNvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgTGlua2VkQWNjb3VudHMuQ29sbGVjdGlvblB1YmxpY1BhdGgKICAgICAgICApLmJvcnJvdygpIHsKICAgICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBsaW5rZWQgYWNjb3VudCBpbiBMaW5rZWRBY2NvdW50cy5Db2xsZWN0aW9uCiAgICAgICAgZm9yIGNoaWxkQWRkcmVzcyBpbiBjb2xsZWN0aW9uUmVmLmdldExpbmtlZEFjY291bnRBZGRyZXNzZXMoKSB7CiAgICAgICAgICAgIGlmICFhbGxORlREYXRhLmNvbnRhaW5zS2V5KGNoaWxkQWRkcmVzcykgewogICAgICAgICAgICAgICAgLy8gSW5zZXJ0IHRoZSBORlQgbWV0YWRhdGEgZm9yIHRob3NlIE5GVHMgaW4gZWFjaCBjaGlsZCBhY2NvdW50CiAgICAgICAgICAgICAgICAvLyBpbmRleGluZyBvbiB0aGUgYWNjb3VudCdzIGFkZHJlc3MKICAgICAgICAgICAgICAgIGFsbE5GVERhdGEuaW5zZXJ0KGtleTogY2hpbGRBZGRyZXNzLCBnZXRBbGxWaWV3c0Zyb21BZGRyZXNzKGNoaWxkQWRkcmVzcykpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gYWxsTkZURGF0YSAKfQ==",
          "unlinkChildAccount": "aW1wb3J0IEh5YnJpZEN1c3RvZHkgZnJvbSAweEh5YnJpZEN1c3RvZHkKCnRyYW5zYWN0aW9uKGNoaWxkOiBBZGRyZXNzKSB7CiAgICBwcmVwYXJlIChhY2N0OiBBdXRoQWNjb3VudCkgewogICAgICAgIGxldCBtYW5hZ2VyID0gYWNjdC5ib3Jyb3c8Jkh5YnJpZEN1c3RvZHkuTWFuYWdlcj4oZnJvbTogSHlicmlkQ3VzdG9keS5NYW5hZ2VyU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJtYW5hZ2VyIG5vdCBmb3VuZCIpCiAgICAgICAgbWFuYWdlci5yZW1vdmVDaGlsZChhZGRyOiBjaGlsZCkKICAgIH0KfQ=="
        },
        "staking": {
          "checkSetup": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIERldGVybWluZXMgaWYgYW4gYWNjb3VudCBpcyBzZXQgdXAgd2l0aCBhIFN0YWtpbmcgQ29sbGVjdGlvbgoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IEJvb2wgewogICAgcmV0dXJuIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhZGRyZXNzKQp9",
          "checkSetupTest": "Ly8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gRGV0ZXJtaW5lcyBpZiBhbiBhY2NvdW50IGlzIHNldCB1cCB3aXRoIGEgU3Rha2luZyBDb2xsZWN0aW9uCgphY2Nlc3MoYWxsKSBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogQm9vbCB7CiAgICByZXR1cm4gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFkZHJlc3MpCn0=",
          "createDelegator": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlZ2lzdGVycyBhIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uIHJlc291cmNlCi8vLyBmb3IgdGhlIHNwZWNpZmllZCBub2RlSUQgYW5kIHRoZSBhbW91bnQgb2YgdG9rZW5zIHRvIGNvbW1pdAoKdHJhbnNhY3Rpb24oaWQ6IFN0cmluZywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVnaXN0ZXJEZWxlZ2F0b3Iobm9kZUlEOiBpZCwgYW1vdW50OiBhbW91bnQpICAgICAgCiAgICB9Cn0=",
          "createDelegatorTest": "Ly8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gUmVnaXN0ZXJzIGEgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24gcmVzb3VyY2UKLy8vIGZvciB0aGUgc3BlY2lmaWVkIG5vZGVJRCBhbmQgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY29tbWl0Cgp0cmFuc2FjdGlvbihpZDogU3RyaW5nLCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6IGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6ICZBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuc3RvcmFnZS5ib3Jyb3c8YXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnJlZ2lzdGVyRGVsZWdhdG9yKG5vZGVJRDogaWQsIGFtb3VudDogYW1vdW50KSAgICAgIAogICAgfQp9",
          "createStake": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgbmV3IHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGZyb20gdGhlIGxvY2tlZCB2YXVsdCBhcmUgdXNlZCBmaXJzdCwgaWYgaXQgZXhpc3RzCi8vLyBmb2xsb3dlZCBieSB0aGUgdG9rZW5zIGZyb20gdGhlIHVubG9ja2VkIHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogYXV0aChGbG93U3Rha2luZ0NvbGxlY3Rpb24uQ29sbGVjdGlvbk93bmVyKSAgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogYXV0aChTdG9yYWdlLCBCb3Jyb3dWYWx1ZSkgJkFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5zdG9yYWdlLmJvcnJvdzxhdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYuc3Rha2VOZXdUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
          "createStakeTest": "Ly8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgoKLy8vIENvbW1pdHMgbmV3IHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGZyb20gdGhlIGxvY2tlZCB2YXVsdCBhcmUgdXNlZCBmaXJzdCwgaWYgaXQgZXhpc3RzCi8vLyBmb2xsb3dlZCBieSB0aGUgdG9rZW5zIGZyb20gdGhlIHVubG9ja2VkIHZhdWx0Cgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjphdXRoKEZsb3dTdGFraW5nQ29sbGVjdGlvbi5Db2xsZWN0aW9uT3duZXIpICAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBhdXRoKFN0b3JhZ2UsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LnN0b3JhZ2UuYm9ycm93PGF1dGgoRmxvd1N0YWtpbmdDb2xsZWN0aW9uLkNvbGxlY3Rpb25Pd25lcikgJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZU5ld1Rva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "getApr": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oKTogVUZpeDY0IHsKICAgIGxldCBhcHIgPSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0RXBvY2hUb2tlblBheW91dCgpIC8gRmxvd0lEVGFibGVTdGFraW5nLmdldFRvdGFsU3Rha2VkKCkgLyA3LjAgKiAzNjUuMCAqICgxLjAgLSBGbG93SURUYWJsZVN0YWtpbmcuZ2V0UmV3YXJkQ3V0UGVyY2VudGFnZSgpKQogICAgcmV0dXJuIGFwcgp9",
          "getAprTest": "Ly8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbigpOiBVRml4NjQgewogICAgbGV0IGFwciA9IEZsb3dJRFRhYmxlU3Rha2luZy5nZXRFcG9jaFRva2VuUGF5b3V0KCkgLyBGbG93SURUYWJsZVN0YWtpbmcuZ2V0VG90YWxTdGFrZWQoKSAvIDcuMCAqIDM2NS4wICogKDEuMCAtIEZsb3dJRFRhYmxlU3Rha2luZy5nZXRSZXdhcmRDdXRQZXJjZW50YWdlKCkpCiAgICByZXR1cm4gYXByCn0=",
          "getDelegatesInfo": "CmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCgpwdWIgc3RydWN0IERlbGVnYXRlSW5mbyB7CiAgICBwdWIgbGV0IGRlbGVnYXRvcklEOiBVSW50MzIKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiBsZXQgdG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIHB1YiBsZXQgZGVsZWdhdGVkTm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbwogICAgcHViIGxldCByZXN0YWthYmxlVW5zdGFrZWRUb2tlbnM6IFVGaXg2NAoKICAgIGluaXQoZGVsZWdhdG9ySW5mbzogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8pIHsKICAgICAgICBzZWxmLmRlbGVnYXRvcklEID0gZGVsZWdhdG9ySW5mby5pZAogICAgICAgIHNlbGYubm9kZUlEID0gZGVsZWdhdG9ySW5mby5ub2RlSUQKICAgICAgICBzZWxmLnRva2Vuc0NvbW1pdHRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAvLyBQcm9qZWN0ZWQgVmFsdWVzCiAgICAgICAgbGV0IG5vZGVJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9ySW5mby5ub2RlSUQpCiAgICAgICAgc2VsZi5kZWxlZ2F0ZWROb2RlSW5mbyA9IG5vZGVJbmZvCiAgICAgICAgc2VsZi5pZCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi5yb2xlID0gbm9kZUluZm8ucm9sZQogICAgICAgIHNlbGYudW5zdGFrYWJsZVRva2VucyA9IHNlbGYudG9rZW5zU3Rha2VkICsgc2VsZi50b2tlbnNDb21taXR0ZWQKICAgICAgICBzZWxmLnJlc3Rha2FibGVVbnN0YWtlZFRva2VucyA9IHNlbGYudG9rZW5zVW5zdGFrZWQgKyBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgfQp9CgpwdWIgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
          "getDelegatesInfoTest": "Ci8vIGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKLy8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBzdHJ1Y3QgRGVsZWdhdGVJbmZvIHsKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0b3JJRDogVUludDMyCiAgICBhY2Nlc3MoYWxsKSBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSBsZXQgdG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgLy8gUHJvamVjdGVkIFZhbHVlcwoKICAgIGFjY2VzcyhhbGwpIGxldCBpZDogU3RyaW5nCiAgICBhY2Nlc3MoYWxsKSBsZXQgcm9sZTogVUludDgKICAgIGFjY2VzcyhhbGwpIGxldCB1bnN0YWthYmxlVG9rZW5zOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIGxldCBkZWxlZ2F0ZWROb2RlSW5mbzogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvCiAgICBhY2Nlc3MoYWxsKSBsZXQgcmVzdGFrYWJsZVVuc3Rha2VkVG9rZW5zOiBVRml4NjQKCiAgICBpbml0KGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvKSB7CiAgICAgICAgc2VsZi5kZWxlZ2F0b3JJRCA9IGRlbGVnYXRvckluZm8uaWQKICAgICAgICBzZWxmLm5vZGVJRCA9IGRlbGVnYXRvckluZm8ubm9kZUlECiAgICAgICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gZGVsZWdhdG9ySW5mby50b2tlbnNTdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2luZyA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gZGVsZWdhdG9ySW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgLy8gUHJvamVjdGVkIFZhbHVlcwogICAgICAgIGxldCBub2RlSW5mbyA9IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IGRlbGVnYXRvckluZm8ubm9kZUlEKQogICAgICAgIHNlbGYuZGVsZWdhdGVkTm9kZUluZm8gPSBub2RlSW5mbwogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLnVuc3Rha2FibGVUb2tlbnMgPSBzZWxmLnRva2Vuc1N0YWtlZCArIHNlbGYudG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgIH0KfQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oYWNjb3VudDogQWRkcmVzcyk6IHtTdHJpbmc6IHtVSW50MzI6IERlbGVnYXRlSW5mb319PyB7CiAgICBsZXQgZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24gPSBGbG93U3Rha2luZ0NvbGxlY3Rpb24uZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24oYWRkcmVzczogYWNjb3VudCkKICAgIGlmICghZG9lc0FjY291bnRIYXZlU3Rha2luZ0NvbGxlY3Rpb24pIHsKICAgICAgICByZXR1cm4gbmlsCiAgICB9CgogICAgbGV0IGRlbGVnYXRvcklEczogW0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5EZWxlZ2F0b3JJRHNdID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldERlbGVnYXRvcklEcyhhZGRyZXNzOiBhY2NvdW50KQoKICAgIGxldCBmb3JtYXR0ZWREZWxlZ2F0b3JJbmZvOiB7U3RyaW5nOiB7VUludDMyOiBEZWxlZ2F0ZUluZm99fSA9IHt9CgogICAgZm9yIGRlbGVnYXRvcklEIGluIGRlbGVnYXRvcklEcyB7CiAgICAgICAgaWYgbGV0IF9mb3JtYXR0ZWREZWxlZ2F0b3JJbmZvID0gZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgX2Zvcm1hdHRlZERlbGVnYXRvckluZm9bZGVsZWdhdG9ySUQuZGVsZWdhdG9ySURdID0gRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvckluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRCkKICAgICAgICAgICAgZm9ybWF0dGVkRGVsZWdhdG9ySW5mb1tkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JOb2RlSURdID0geyBkZWxlZ2F0b3JJRC5kZWxlZ2F0b3JJRDogRGVsZWdhdGVJbmZvKGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8pfQogICAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkRGVsZWdhdG9ySW5mbwp9",
          "getDelegatorInfo": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
          "getDelegatorInfoTest": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyKTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8gewogIHJldHVybiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9ySW5mbyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklEKQp9",
          "getEpochMetadata": "aW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKYWNjZXNzKGFsbCkgZnVuIG1haW4oZXBvY2hDb3VudGVyOiBVSW50NjQpOiBGbG93RXBvY2guRXBvY2hNZXRhZGF0YT8gewogIHJldHVybiBGbG93RXBvY2guZ2V0RXBvY2hNZXRhZGF0YShlcG9jaENvdW50ZXIpCn0=",
          "getEpochMetadataTest": "Ly8gaW1wb3J0IEZsb3dFcG9jaCBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0Vwb2NoIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihlcG9jaENvdW50ZXI6IFVJbnQ2NCk6IEZsb3dFcG9jaC5FcG9jaE1ldGFkYXRhPyB7CiAgcmV0dXJuIEZsb3dFcG9jaC5nZXRFcG9jaE1ldGFkYXRhKGVwb2NoQ291bnRlcikKfQ==",
          "getNodeInfo": "aW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQoKcHViIGZ1biBtYWluKG5vZGVJRDogU3RyaW5nKTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvIHsKICByZXR1cm4gRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvKG5vZGVJRDogbm9kZUlEKQp9",
          "getNodeInfoTest": "Ly8gaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4ODYyNGI1MmY5ZGRjZDA0YQppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgphY2Nlc3MoYWxsKSBmdW4gbWFpbihub2RlSUQ6IFN0cmluZyk6IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyB7CiAgcmV0dXJuIEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKfQ==",
          "getNodesInfo": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCgpwdWIgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgcHViIHZhciBub2RlQ291bnQ6IFVJbnQ2NAogICAgcHViIHZhciBkZWxlZ2F0ZUNvdW50OiBVSW50NjQKCiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBwdWIgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciB0b3RhbFRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIHB1YiB2YXIgdG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIHB1YiB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIHN0YWtlVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgcHViIHZhciBzdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIHB1YiB2YXIgZGVsZWdhdGVUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBwdWIgdmFyIGRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBpbml0KGFsbE5vZGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLk5vZGVJbmZvXSwgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dKSB7CgogICAgICAgIHNlbGYubm9kZUNvdW50ID0gVUludDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gVUludDY0KDApCgogICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIGZvciBub2RlSW5mbyBpbiBhbGxOb2RlSW5mbyB7CiAgICAgICAgICAgIHNlbGYubm9kZUNvdW50ID0gc2VsZi5ub2RlQ291bnQgKyAxCgogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1N0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIG5vZGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgKyBub2RlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIG5vZGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQoKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1N0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkID0gc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5zdGFrZVRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICB9CgogICAgICAgIGZvciBkZWxlZ2F0ZUluZm8gaW4gYWxsRGVsZWdhdGVJbmZvIHsKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZUNvdW50ID0gc2VsZi5kZWxlZ2F0ZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFraW5nID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCA9IHNlbGYudG90YWxUb2tlbnNSZXdhcmRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNSZXdhcmRlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSArIGRlbGVnYXRlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNTdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zQ29tbWl0dGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2luZyA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgIH0KfQoKcHViIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
          "getNodesInfoTest": "Ly8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwovLyBpbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAoKYWNjZXNzKGFsbCkgc3RydWN0IFN1bW1hcnlTdGFrZURlbGVnYXRlSW5mbyB7CgogICAgYWNjZXNzKGFsbCkgdmFyIG5vZGVDb3VudDogVUludDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVDb3VudDogVUludDY0CgogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciB0b3RhbFRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgdG90YWxUb2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zVW5zdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmV3YXJkZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKCiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIHN0YWtlVG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBzdGFrZVRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2U6IFVGaXg2NAoKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1N0YWtlZDogVUZpeDY0CiAgICBhY2Nlc3MoYWxsKSB2YXIgZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgYWNjZXNzKGFsbCkgdmFyIGRlbGVnYXRlVG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICAgIGFjY2VzcyhhbGwpIHZhciBkZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogICAgaW5pdChhbGxOb2RlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mb10sIGFsbERlbGVnYXRlSW5mbzogW0Zsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JJbmZvXSkgewoKICAgICAgICBzZWxmLm5vZGVDb3VudCA9IFVJbnQ2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IFVJbnQ2NCgwKQoKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zVW5zdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gVUZpeDY0KDApCgogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5zdGFrZVRva2Vuc1Vuc3Rha2luZyA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBVRml4NjQoMCkKCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCA9IFVGaXg2NCgwKQogICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgPSBVRml4NjQoMCkKICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Vuc3Rha2VkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gVUZpeDY0KDApCiAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IFVGaXg2NCgwKQoKICAgICAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgICAgICBzZWxmLm5vZGVDb3VudCA9IHNlbGYubm9kZUNvdW50ICsgMQoKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNTdGFrZWQgKyBub2RlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCA9IHNlbGYudG90YWxUb2tlbnNDb21taXR0ZWQgKyBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkID0gc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2VkICsgbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkID0gc2VsZi50b3RhbFRva2Vuc1Jld2FyZGVkICsgbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNTdGFrZWQgPSBzZWxmLnN0YWtlVG9rZW5zU3Rha2VkICsgbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNDb21taXR0ZWQgPSBzZWxmLnN0YWtlVG9rZW5zQ29tbWl0dGVkICsgbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLnN0YWtlVG9rZW5zVW5zdGFraW5nICsgbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCA9IHNlbGYuc3Rha2VUb2tlbnNVbnN0YWtlZCArIG5vZGVJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCA9IHNlbGYuc3Rha2VUb2tlbnNSZXdhcmRlZCArIG5vZGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuc3Rha2VUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLnN0YWtlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICAgICAgfQoKICAgICAgICBmb3IgZGVsZWdhdGVJbmZvIGluIGFsbERlbGVnYXRlSW5mbyB7CiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVDb3VudCA9IHNlbGYuZGVsZWdhdGVDb3VudCArIDEKCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNTdGFrZWQgPSBzZWxmLnRvdGFsVG9rZW5zU3Rha2VkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1N0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zQ29tbWl0dGVkID0gc2VsZi50b3RhbFRva2Vuc0NvbW1pdHRlZCArIGRlbGVnYXRlSW5mby50b2tlbnNDb21taXR0ZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1Vuc3Rha2luZyA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtpbmcgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICAgICAgICAgIHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCA9IHNlbGYudG90YWxUb2tlbnNVbnN0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNVbnN0YWtlZAogICAgICAgICAgICBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgPSBzZWxmLnRvdGFsVG9rZW5zUmV3YXJkZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmV3YXJkZWQKICAgICAgICAgICAgc2VsZi50b3RhbFRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IHNlbGYudG90YWxUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgKyBkZWxlZ2F0ZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCgogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zU3Rha2VkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1N0YWtlZCArIGRlbGVnYXRlSW5mby50b2tlbnNTdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc0NvbW1pdHRlZCA9IHNlbGYuZGVsZWdhdGVUb2tlbnNDb21taXR0ZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNVbnN0YWtpbmcgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFraW5nICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgICAgICAgICBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgPSBzZWxmLmRlbGVnYXRlVG9rZW5zVW5zdGFrZWQgKyBkZWxlZ2F0ZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICAgICAgc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkID0gc2VsZi5kZWxlZ2F0ZVRva2Vuc1Jld2FyZGVkICsgZGVsZWdhdGVJbmZvLnRva2Vuc1Jld2FyZGVkCiAgICAgICAgICAgIHNlbGYuZGVsZWdhdGVUb2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBzZWxmLmRlbGVnYXRlVG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlICsgZGVsZWdhdGVJbmZvLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZQogICAgICAgIH0KCiAgICB9Cn0KCmFjY2VzcyhhbGwpIGZ1biBtYWluKGFjY291bnQ6IEFkZHJlc3MpOiBTdW1tYXJ5U3Rha2VEZWxlZ2F0ZUluZm8/IHsKICAgIGxldCBkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbiA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5kb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbihhZGRyZXNzOiBhY2NvdW50KQogICAgaWYgKCFkb2VzQWNjb3VudEhhdmVTdGFraW5nQ29sbGVjdGlvbikgewogICAgICAgIHJldHVybiBuaWwKICAgIH0KCiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgYWxsRGVsZWdhdGVJbmZvOiBbRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbERlbGVnYXRvckluZm8oYWRkcmVzczogYWNjb3VudCkKCiAgICByZXR1cm4gU3VtbWFyeVN0YWtlRGVsZWdhdGVJbmZvKGFsbE5vZGVJbmZvOiBhbGxOb2RlSW5mbywgYWxsRGVsZWdhdGVJbmZvOiBhbGxEZWxlZ2F0ZUluZm8pCn0=",
          "getStakeInfo": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
          "getStakeInfoTest": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCnB1YiBzdHJ1Y3QgU3Rha2VJbmZvIHsKICAgIHB1YiBsZXQgaWQ6IFN0cmluZwogICAgcHViIGxldCByb2xlOiBVSW50OAogICAgcHViIGxldCBuZXR3b3JraW5nQWRkcmVzczogU3RyaW5nCiAgICBwdWIgbGV0IG5ldHdvcmtpbmdLZXk6IFN0cmluZwogICAgcHViIGxldCBzdGFraW5nS2V5OiBTdHJpbmcKICAgIHB1YiBsZXQgdG9rZW5zU3Rha2VkOiBVRml4NjQKICAgIHB1YiBsZXQgdG90YWxUb2tlbnNTdGFrZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNDb21taXR0ZWQ6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtpbmc6IFVGaXg2NAogICAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKCiAgICBwdWIgbGV0IGRlbGVnYXRvcnM6IFtVSW50MzJdCiAgICBwdWIgbGV0IGRlbGVnYXRvcklEQ291bnRlcjogVUludDMyCiAgICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CiAgICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICAgIHB1YiBsZXQgdW5zdGFrYWJsZVRva2VuczogVUZpeDY0CiAgICBwdWIgbGV0IHRva2Vuc0RlbGVnYXRlZDogVUZpeDY0CiAgICBwdWIgbGV0IHJlc3Rha2FibGVVbnN0YWtlZFRva2VuczogVUZpeDY0CgogICAgcHViIGxldCBtYWNoaW5lQWNjb3VudEFkZHJlc3M6IEFkZHJlc3M/CiAgICBwdWIgbGV0IG1hY2hpbmVBY2NvdW50QmFsYW5jZTogVUZpeDY0PwoKICAgIGluaXQobm9kZUluZm86IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlSW5mbywgbWFjaGluZUFjY291bnRJbmZvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvPykgewogICAgICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgICAgIHNlbGYucm9sZSA9IG5vZGVJbmZvLnJvbGUKICAgICAgICBzZWxmLm5ldHdvcmtpbmdBZGRyZXNzID0gbm9kZUluZm8ubmV0d29ya2luZ0FkZHJlc3MKICAgICAgICBzZWxmLm5ldHdvcmtpbmdLZXkgPSBub2RlSW5mby5uZXR3b3JraW5nS2V5CiAgICAgICAgc2VsZi5zdGFraW5nS2V5ID0gbm9kZUluZm8uc3Rha2luZ0tleQogICAgICAgIHNlbGYudG9rZW5zU3Rha2VkID0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi50b3RhbFRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRvdGFsU3Rha2VkV2l0aERlbGVnYXRvcnMoKQogICAgICAgIHNlbGYudG9rZW5zQ29tbWl0dGVkID0gbm9kZUluZm8udG9rZW5zQ29tbWl0dGVkCiAgICAgICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBub2RlSW5mby50b2tlbnNVbnN0YWtpbmcKICAgICAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgICAgICBzZWxmLnRva2Vuc1Jld2FyZGVkID0gbm9kZUluZm8udG9rZW5zUmV3YXJkZWQKCiAgICAgICAgc2VsZi5kZWxlZ2F0b3JzID0gbm9kZUluZm8uZGVsZWdhdG9ycwogICAgICAgIHNlbGYuZGVsZWdhdG9ySURDb3VudGVyID0gbm9kZUluZm8uZGVsZWdhdG9ySURDb3VudGVyCiAgICAgICAgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UgPSBub2RlSW5mby50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKICAgICAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CgogICAgICAgIC8vIFByb2plY3RlZCBWYWx1ZXMKICAgICAgICBzZWxmLm5vZGVJRCA9IG5vZGVJbmZvLmlkCiAgICAgICAgc2VsZi51bnN0YWthYmxlVG9rZW5zID0gc2VsZi50b2tlbnNTdGFrZWQgKyBzZWxmLnRva2Vuc0NvbW1pdHRlZAogICAgICAgIGxldCBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzID0gbm9kZUluZm8udG90YWxTdGFrZWRXaXRoRGVsZWdhdG9ycygpCiAgICAgICAgc2VsZi50b2tlbnNEZWxlZ2F0ZWQgPSBub2RlU3Rha2VkQmFsYW5jZVdpdGhEZWxlZ2F0b3JzIC0gbm9kZUluZm8udG9rZW5zU3Rha2VkCiAgICAgICAgc2VsZi5yZXN0YWthYmxlVW5zdGFrZWRUb2tlbnMgPSBzZWxmLnRva2Vuc1Vuc3Rha2VkICsgc2VsZi50b2tlbnNSZXF1ZXN0ZWRUb1Vuc3Rha2UKCiAgICAgICAgaWYgbGV0IF9tYWNoaW5lQWNjb3VudEluZm8gPSBtYWNoaW5lQWNjb3VudEluZm8gewogICAgICAgICAgICBsZXQgX21hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEluZm8uZ2V0QWRkcmVzcygpCgogICAgICAgICAgICBsZXQgbWFjaGluZUFjY291bnQgPSBnZXRBY2NvdW50KF9tYWNoaW5lQWNjb3VudEFkZHJlc3MpCgogICAgICAgICAgICBzZWxmLm1hY2hpbmVBY2NvdW50QWRkcmVzcyA9IF9tYWNoaW5lQWNjb3VudEFkZHJlc3MKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBtYWNoaW5lQWNjb3VudC5iYWxhbmNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEFkZHJlc3MgPSBuaWwKICAgICAgICAgICAgc2VsZi5tYWNoaW5lQWNjb3VudEJhbGFuY2UgPSBuaWwKICAgICAgICB9CiAgICB9Cn0KCnB1YiBmdW4gbWFpbihhY2NvdW50OiBBZGRyZXNzKToge1N0cmluZzogU3Rha2VJbmZvfT8gewogICAgbGV0IGRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKGFkZHJlc3M6IGFjY291bnQpCiAgICBpZiAoIWRvZXNBY2NvdW50SGF2ZVN0YWtpbmdDb2xsZWN0aW9uKSB7CiAgICAgICAgcmV0dXJuIG5pbAogICAgfQoKICAgIGxldCBmb3JtYXR0ZWROb2RlSW5mbzoge1N0cmluZzogU3Rha2VJbmZvfSA9IHt9CiAgICBsZXQgYWxsTm9kZUluZm86IFtGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm9dID0gRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmdldEFsbE5vZGVJbmZvKGFkZHJlc3M6IGFjY291bnQpCiAgICBsZXQgbWFjaGluZUFjY291bnRzOiB7U3RyaW5nOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uTWFjaGluZUFjY291bnRJbmZvfSA9IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5nZXRNYWNoaW5lQWNjb3VudHMoYWRkcmVzczogYWNjb3VudCkKCiAgICBmb3Igbm9kZUluZm8gaW4gYWxsTm9kZUluZm8gewogICAgICAgIGZvcm1hdHRlZE5vZGVJbmZvW25vZGVJbmZvLmlkXSA9IFN0YWtlSW5mbyhub2RlSW5mbzogbm9kZUluZm8sIG1hY2hpbmVBY2NvdW50SW5mbzogbWFjaGluZUFjY291bnRzW25vZGVJbmZvLmlkXSkKICAgIH0KCiAgICByZXR1cm4gZm9ybWF0dGVkTm9kZUluZm8KfQ==",
          "getStakingInfo": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgRXBvY2hJbmZvIHsKICBwdWIgbGV0IGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NAogIHB1YiBsZXQgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CgogIGluaXQoCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NCwKICAgICAgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CiAgKSB7CiAgICAgIHNlbGYuY3VycmVudEVwb2NoQ291bnRlciA9IGN1cnJlbnRFcG9jaENvdW50ZXIKICAgICAgc2VsZi5jdXJyZW50RXBvY2hQaGFzZSA9IGN1cnJlbnRFcG9jaFBoYXNlCiAgfQp9CgpwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/CgogIGluaXQoc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPykgewogICAgc2VsZi5zdGFraW5nSW5mbyA9IHN0YWtpbmdJbmZvCiAgfQp9CgpwdWIgc3RydWN0IFN0YWtpbmdJbmZvIHsKICBwdWIgbGV0IGVwb2NoSW5mbzogRXBvY2hJbmZvCiAgcHViIGxldCBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzICAgCiAgcHViIGxldCBsb2NrZWRCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHVubG9ja0xpbWl0OiBVRml4NjQKICBwdWIgbGV0IG5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/CgogIGluaXQoCiAgICBlcG9jaEluZm86IEVwb2NoSW5mbywKICAgIGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MsCiAgICBsb2NrZWRCYWxhbmNlOiBVRml4NjQsCiAgICB1bmxvY2tMaW1pdDogVUZpeDY0LAogICAgbm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPywKICApIHsKICAgIHNlbGYuZXBvY2hJbmZvID0gZXBvY2hJbmZvCiAgICBzZWxmLmxvY2tlZEFkZHJlc3MgPSBsb2NrZWRBZGRyZXNzCiAgICBzZWxmLmxvY2tlZEJhbGFuY2UgPSBsb2NrZWRCYWxhbmNlCiAgICBzZWxmLnVubG9ja0xpbWl0ID0gdW5sb2NrTGltaXQKICAgIHNlbGYubm9kZUluZm8gPSBub2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JOb2RlSW5mbyA9IGRlbGVnYXRvck5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvckluZm8gPSBkZWxlZ2F0b3JJbmZvCiAgfQp9CgpwdWIgc3RydWN0IE5vZGVJbmZvIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgCiAgcHViIGxldCBkZWxlZ2F0b3JJRENvdW50ZXI6IFVJbnQzMgogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nKSB7CiAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpIAoKICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgc2VsZi5uZXR3b3JraW5nQWRkcmVzcyA9IG5vZGVJbmZvLm5ldHdvcmtpbmdBZGRyZXNzCiAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CiAgfQp9CgpwdWIgc3RydWN0IERlbGVnYXRvckluZm8gewogIHB1YiBsZXQgaWQ6IFVJbnQzMgogIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpIHsKICAgIGxldCBkZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKCiAgICBzZWxmLmlkID0gZGVsZWdhdG9ySW5mby5pZAogICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IHRva2VuSG9sZGVyUmVmID0gCiAgICAgIGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgICAuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQoKICB2YXIgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPyA9IG5pbAogIGlmIGxldCB0b2tlbkhvbGRlciA9IHRva2VuSG9sZGVyUmVmIHsKICAgIGxldCBsb2NrZWRBZGRyZXNzID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEFkZHJlc3MoKSAgICAgICAKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IHVubG9ja0xpbWl0ID0gdG9rZW5Ib2xkZXIuZ2V0VW5sb2NrTGltaXQoKQogICAgCiAgICB2YXIgbm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgaWYgbGV0IG5vZGVJRCA9IHRva2VuSG9sZGVyLmdldE5vZGVJRCgpIHsKICAgICAgbm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKICAgIH0KCiAgICB2YXIgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgdmFyIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/ID0gbmlsCiAgICBpZiBsZXQgZGVsZWdhdG9yTm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9yTm9kZUlEKCkgewogICAgICBpZiBsZXQgZGVsZWdhdG9ySUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JJRCgpIHsKICAgICAgICBkZWxlZ2F0b3JOb2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlEKQogICAgICAgIGRlbGVnYXRvckluZm8gPSBEZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICAgIH0gCiAgICB9IAoKICAgIGxldCBlcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
          "getStakingInfoTest": "aW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRmxvd0lEVGFibGVTdGFraW5nIGZyb20gMHg4NjI0YjUyZjlkZGNkMDRhCmltcG9ydCBGbG93RXBvY2ggZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKCnB1YiBzdHJ1Y3QgRXBvY2hJbmZvIHsKICBwdWIgbGV0IGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NAogIHB1YiBsZXQgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CgogIGluaXQoCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IFVJbnQ2NCwKICAgICAgY3VycmVudEVwb2NoUGhhc2U6IFVJbnQ4CiAgKSB7CiAgICAgIHNlbGYuY3VycmVudEVwb2NoQ291bnRlciA9IGN1cnJlbnRFcG9jaENvdW50ZXIKICAgICAgc2VsZi5jdXJyZW50RXBvY2hQaGFzZSA9IGN1cnJlbnRFcG9jaFBoYXNlCiAgfQp9CgpwdWIgc3RydWN0IFJlc3VsdCB7CiAgcHViIGxldCBzdGFraW5nSW5mbzogU3Rha2luZ0luZm8/CgogIGluaXQoc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPykgewogICAgc2VsZi5zdGFraW5nSW5mbyA9IHN0YWtpbmdJbmZvCiAgfQp9CgpwdWIgc3RydWN0IFN0YWtpbmdJbmZvIHsKICBwdWIgbGV0IGVwb2NoSW5mbzogRXBvY2hJbmZvCiAgcHViIGxldCBsb2NrZWRBZGRyZXNzOiBBZGRyZXNzICAgCiAgcHViIGxldCBsb2NrZWRCYWxhbmNlOiBVRml4NjQKICBwdWIgbGV0IHVubG9ja0xpbWl0OiBVRml4NjQKICBwdWIgbGV0IG5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8KICBwdWIgbGV0IGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/CgogIGluaXQoCiAgICBlcG9jaEluZm86IEVwb2NoSW5mbywKICAgIGxvY2tlZEFkZHJlc3M6IEFkZHJlc3MsCiAgICBsb2NrZWRCYWxhbmNlOiBVRml4NjQsCiAgICB1bmxvY2tMaW1pdDogVUZpeDY0LAogICAgbm9kZUluZm86IE5vZGVJbmZvPywKICAgIGRlbGVnYXRvck5vZGVJbmZvOiBOb2RlSW5mbz8sCiAgICBkZWxlZ2F0b3JJbmZvOiBEZWxlZ2F0b3JJbmZvPywKICApIHsKICAgIHNlbGYuZXBvY2hJbmZvID0gZXBvY2hJbmZvCiAgICBzZWxmLmxvY2tlZEFkZHJlc3MgPSBsb2NrZWRBZGRyZXNzCiAgICBzZWxmLmxvY2tlZEJhbGFuY2UgPSBsb2NrZWRCYWxhbmNlCiAgICBzZWxmLnVubG9ja0xpbWl0ID0gdW5sb2NrTGltaXQKICAgIHNlbGYubm9kZUluZm8gPSBub2RlSW5mbwogICAgc2VsZi5kZWxlZ2F0b3JOb2RlSW5mbyA9IGRlbGVnYXRvck5vZGVJbmZvCiAgICBzZWxmLmRlbGVnYXRvckluZm8gPSBkZWxlZ2F0b3JJbmZvCiAgfQp9CgpwdWIgc3RydWN0IE5vZGVJbmZvIHsKICBwdWIgbGV0IGlkOiBTdHJpbmcKICBwdWIgbGV0IG5ldHdvcmtpbmdBZGRyZXNzOiBTdHJpbmcKICBwdWIgbGV0IHJvbGU6IFVJbnQ4CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zQ29tbWl0dGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2luZzogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNVbnN0YWtlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNSZXdhcmRlZDogVUZpeDY0CiAgCiAgcHViIGxldCBkZWxlZ2F0b3JJRENvdW50ZXI6IFVJbnQzMgogIHB1YiBsZXQgdG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlOiBVRml4NjQKICBwdWIgbGV0IGluaXRpYWxXZWlnaHQ6IFVJbnQ2NAoKICBpbml0KG5vZGVJRDogU3RyaW5nKSB7CiAgICBsZXQgbm9kZUluZm8gPSBGbG93SURUYWJsZVN0YWtpbmcuTm9kZUluZm8obm9kZUlEOiBub2RlSUQpIAoKICAgIHNlbGYuaWQgPSBub2RlSW5mby5pZAogICAgc2VsZi5uZXR3b3JraW5nQWRkcmVzcyA9IG5vZGVJbmZvLm5ldHdvcmtpbmdBZGRyZXNzCiAgICBzZWxmLnJvbGUgPSBub2RlSW5mby5yb2xlCiAgICBzZWxmLnRva2Vuc1N0YWtlZCA9IG5vZGVJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBub2RlSW5mby50b2tlbnNDb21taXR0ZWQKICAgIHNlbGYudG9rZW5zVW5zdGFraW5nID0gbm9kZUluZm8udG9rZW5zVW5zdGFraW5nCiAgICBzZWxmLnRva2Vuc1Vuc3Rha2VkID0gbm9kZUluZm8udG9rZW5zVW5zdGFrZWQKICAgIHNlbGYudG9rZW5zUmV3YXJkZWQgPSBub2RlSW5mby50b2tlbnNSZXdhcmRlZAogICAgc2VsZi5kZWxlZ2F0b3JJRENvdW50ZXIgPSBub2RlSW5mby5kZWxlZ2F0b3JJRENvdW50ZXIKICAgIHNlbGYudG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlID0gbm9kZUluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgICBzZWxmLmluaXRpYWxXZWlnaHQgPSBub2RlSW5mby5pbml0aWFsV2VpZ2h0CiAgfQp9CgpwdWIgc3RydWN0IERlbGVnYXRvckluZm8gewogIHB1YiBsZXQgaWQ6IFVJbnQzMgogIHB1YiBsZXQgbm9kZUlEOiBTdHJpbmcKICBwdWIgbGV0IHRva2Vuc0NvbW1pdHRlZDogVUZpeDY0CiAgcHViIGxldCB0b2tlbnNTdGFrZWQ6IFVGaXg2NAogIHB1YiBsZXQgdG9rZW5zVW5zdGFraW5nOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Jld2FyZGVkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1Vuc3Rha2VkOiBVRml4NjQKICBwdWIgbGV0IHRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZTogVUZpeDY0CgogIGluaXQobm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzIpIHsKICAgIGxldCBkZWxlZ2F0b3JJbmZvID0gRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvckluZm8obm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCkKCiAgICBzZWxmLmlkID0gZGVsZWdhdG9ySW5mby5pZAogICAgc2VsZi5ub2RlSUQgPSBkZWxlZ2F0b3JJbmZvLm5vZGVJRAogICAgc2VsZi50b2tlbnNDb21taXR0ZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc0NvbW1pdHRlZAogICAgc2VsZi50b2tlbnNTdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1N0YWtlZAogICAgc2VsZi50b2tlbnNVbnN0YWtpbmcgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2luZwogICAgc2VsZi50b2tlbnNSZXdhcmRlZCA9IGRlbGVnYXRvckluZm8udG9rZW5zUmV3YXJkZWQKICAgIHNlbGYudG9rZW5zVW5zdGFrZWQgPSBkZWxlZ2F0b3JJbmZvLnRva2Vuc1Vuc3Rha2VkCiAgICBzZWxmLnRva2Vuc1JlcXVlc3RlZFRvVW5zdGFrZSA9IGRlbGVnYXRvckluZm8udG9rZW5zUmVxdWVzdGVkVG9VbnN0YWtlCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFJlc3VsdCB7CiAgbGV0IHRva2VuSG9sZGVyUmVmID0gCiAgICAgIGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgICAgICAgICAuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQoKICB2YXIgc3Rha2luZ0luZm86IFN0YWtpbmdJbmZvPyA9IG5pbAogIGlmIGxldCB0b2tlbkhvbGRlciA9IHRva2VuSG9sZGVyUmVmIHsKICAgIGxldCBsb2NrZWRBZGRyZXNzID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEFkZHJlc3MoKSAgICAgICAKICAgIGxldCBsb2NrZWRCYWxhbmNlID0gdG9rZW5Ib2xkZXIuZ2V0TG9ja2VkQWNjb3VudEJhbGFuY2UoKQogICAgbGV0IHVubG9ja0xpbWl0ID0gdG9rZW5Ib2xkZXIuZ2V0VW5sb2NrTGltaXQoKQogICAgCiAgICB2YXIgbm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgaWYgbGV0IG5vZGVJRCA9IHRva2VuSG9sZGVyLmdldE5vZGVJRCgpIHsKICAgICAgbm9kZUluZm8gPSBOb2RlSW5mbyhub2RlSUQ6IG5vZGVJRCkKICAgIH0KCiAgICB2YXIgZGVsZWdhdG9yTm9kZUluZm86IE5vZGVJbmZvPyA9IG5pbAogICAgdmFyIGRlbGVnYXRvckluZm86IERlbGVnYXRvckluZm8/ID0gbmlsCiAgICBpZiBsZXQgZGVsZWdhdG9yTm9kZUlEID0gdG9rZW5Ib2xkZXIuZ2V0RGVsZWdhdG9yTm9kZUlEKCkgewogICAgICBpZiBsZXQgZGVsZWdhdG9ySUQgPSB0b2tlbkhvbGRlci5nZXREZWxlZ2F0b3JJRCgpIHsKICAgICAgICBkZWxlZ2F0b3JOb2RlSW5mbyA9IE5vZGVJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlEKQogICAgICAgIGRlbGVnYXRvckluZm8gPSBEZWxlZ2F0b3JJbmZvKG5vZGVJRDogZGVsZWdhdG9yTm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQpCiAgICAgIH0gCiAgICB9IAoKICAgIGxldCBlcG9jaEluZm8gPSBFcG9jaEluZm8oCiAgICAgIGN1cnJlbnRFcG9jaENvdW50ZXI6IEZsb3dFcG9jaC5jdXJyZW50RXBvY2hDb3VudGVyLAogICAgICBjdXJyZW50RXBvY2hQaGFzZTogRmxvd0Vwb2NoLmN1cnJlbnRFcG9jaFBoYXNlLnJhd1ZhbHVlCiAgICApCgogICAgc3Rha2luZ0luZm8gPSBTdGFraW5nSW5mbygKICAgICAgZXBvY2hJbmZvOiBlcG9jaEluZm8sCiAgICAgIGxvY2tlZEFkZHJlc3M6IGxvY2tlZEFkZHJlc3MsCiAgICAgIGxvY2tlZEJhbGFuY2U6IGxvY2tlZEJhbGFuY2UsCiAgICAgIHVubG9ja0xpbWl0OiB1bmxvY2tMaW1pdCwKICAgICAgbm9kZUluZm86IG5vZGVJbmZvLAogICAgICBkZWxlZ2F0b3JOb2RlSW5mbzogZGVsZWdhdG9yTm9kZUluZm8sCiAgICAgIGRlbGVnYXRvckluZm86IGRlbGVnYXRvckluZm8gCiAgICApCiAgfQoKICByZXR1cm4gUmVzdWx0KHN0YWtpbmdJbmZvOiBzdGFraW5nSW5mbykKfQ==",
          "restakeReward": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
          "restakeRewardTest": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBDb21taXRzIHJld2FyZGVkIHRva2VucyB0byBzdGFrZSBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCgp0cmFuc2FjdGlvbihub2RlSUQ6IFN0cmluZywgZGVsZWdhdG9ySUQ6IFVJbnQzMj8sIGFtb3VudDogVUZpeDY0KSB7CiAgICAKICAgIGxldCBzdGFraW5nQ29sbGVjdGlvblJlZjogJkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbgoKICAgIHByZXBhcmUoYWNjb3VudDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHJlZiB0byBTdGFraW5nQ29sbGVjdGlvbiIpCiAgICB9CgogICAgZXhlY3V0ZSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZi5zdGFrZVJld2FyZGVkVG9rZW5zKG5vZGVJRDogbm9kZUlELCBkZWxlZ2F0b3JJRDogZGVsZWdhdG9ySUQsIGFtb3VudDogYW1vdW50KQogICAgfQp9",
          "restakeUnstaked": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIENvbW1pdHMgdW5zdGFrZWQgdG9rZW5zIHRvIHN0YWtlIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLnN0YWtlVW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0=",
          "setup": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQppbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCmltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFRoaXMgdHJhbnNhY3Rpb24gc2V0cyB1cCBhbiBhY2NvdW50IHRvIHVzZSBhIHN0YWtpbmcgY29sbGVjdGlvbgovLy8gSXQgd2lsbCB3b3JrIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IGhhdmUgYSByZWd1bGFyIGFjY291bnQsIGEgdHdvLWFjY291bnQgbG9ja2VkIHRva2VucyBzZXR1cCwKLy8vIG9yIHN0YWtpbmcgb2JqZWN0cyBzdG9yZWQgaW4gdGhlIHVubG9ja2VkIGFjY291bnQKCnRyYW5zYWN0aW9uIHsKICAgIHByZXBhcmUoc2lnbmVyOiBBdXRoQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkgPT0gbmlsIHsKCiAgICAgICAgICAgIC8vIENyZWF0ZSBwcml2YXRlIGNhcGFiaWxpdGllcyBmb3IgdGhlIHRva2VuIGhvbGRlciBhbmQgdW5sb2NrZWQgdmF1bHQKICAgICAgICAgICAgbGV0IGxvY2tlZEhvbGRlciA9IHNpZ25lci5saW5rPCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KC9wcml2YXRlL2Zsb3dUb2tlbkhvbGRlciwgdGFyZ2V0OiBMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGxldCBmbG93VG9rZW4gPSBzaWduZXIubGluazwmRmxvd1Rva2VuLlZhdWx0PigvcHJpdmF0ZS9mbG93VG9rZW5WYXVsdCwgdGFyZ2V0OiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkhCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgU3Rha2luZyBDb2xsZWN0aW9uIGFuZCBwdXQgaXQgaW4gc3RvcmFnZQogICAgICAgICAgICBpZiBsb2NrZWRIb2xkZXIuY2hlY2soKSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBsb2NrZWRIb2xkZXIpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBuaWwpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIHB1YmxpYyBsaW5rIHRvIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICAgICAgc2lnbmVyLmxpbms8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PigKICAgICAgICAgICAgICAgIEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY1BhdGgsCiAgICAgICAgICAgICAgICB0YXJnZXQ6IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoCiAgICAgICAgICAgICkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBzdGFraW5nIGNvbGxlY3Rpb24gcmVmZXJlbmNlIikKCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBub2RlIHN0YWtlciBvYmplY3QgaW4gdGhlIGFjY291bnQsIHB1dCBpdCBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXI+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBub2RlIDwtIHNpZ25lci5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpICE9IG5pbCB7CiAgICAgICAgICAgIGxldCBkZWxlZ2F0b3IgPC0gc2lnbmVyLmxvYWQ8QEZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlRGVsZWdhdG9yPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuRGVsZWdhdG9yU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBjb2xsZWN0aW9uUmVmLmFkZERlbGVnYXRvck9iamVjdCg8LWRlbGVnYXRvcikKICAgICAgICB9CiAgICB9Cn0=",
          "setupTest": "Ly8gaW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KLy8gaW1wb3J0IEZsb3dUb2tlbiBmcm9tIDB4MTY1NDY1MzM5OTA0MGE2MQovLyBpbXBvcnQgTG9ja2VkVG9rZW5zIGZyb20gMHg4ZDBlODdiNjUxNTlhZTYzCi8vIGltcG9ydCBGbG93SURUYWJsZVN0YWtpbmcgZnJvbSAweDg2MjRiNTJmOWRkY2QwNGEKLy8gaW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4YTAyMjVlNzAwMGFjODJhOQppbXBvcnQgRmxvd1Rva2VuIGZyb20gMHg0NDQ1ZTdhZDExNTY4Mjc2CmltcG9ydCBMb2NrZWRUb2tlbnMgZnJvbSAweGI2NzYzYjQzOTlhODg4YzgKaW1wb3J0IEZsb3dJRFRhYmxlU3Rha2luZyBmcm9tIDB4YjY3NjNiNDM5OWE4ODhjOAppbXBvcnQgRmxvd1N0YWtpbmdDb2xsZWN0aW9uIGZyb20gMHhiNjc2M2I0Mzk5YTg4OGM4CgovLy8gVGhpcyB0cmFuc2FjdGlvbiBzZXRzIHVwIGFuIGFjY291bnQgdG8gdXNlIGEgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBJdCB3aWxsIHdvcmsgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZXkgaGF2ZSBhIHJlZ3VsYXIgYWNjb3VudCwgYSB0d28tYWNjb3VudCBsb2NrZWQgdG9rZW5zIHNldHVwLAovLy8gb3Igc3Rha2luZyBvYmplY3RzIHN0b3JlZCBpbiB0aGUgdW5sb2NrZWQgYWNjb3VudAoKdHJhbnNhY3Rpb24gewogICAgcHJlcGFyZShzaWduZXI6IGF1dGgoU3RvcmFnZSwgQ2FwYWJpbGl0aWVzLCBTYXZlVmFsdWUsIEJvcnJvd1ZhbHVlKSAmQWNjb3VudCkgewoKICAgICAgICAvLyBJZiB0aGVyZSBpc24ndCBhbHJlYWR5IGEgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKSA9PSBuaWwgewoKICAgICAgICAgICAgLy8gQ3JlYXRlIHByaXZhdGUgY2FwYWJpbGl0aWVzIGZvciB0aGUgdG9rZW4gaG9sZGVyIGFuZCB1bmxvY2tlZCB2YXVsdAogICAgICAgICAgICBsZXQgbG9ja2VkSG9sZGVyID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdywgTG9ja2VkVG9rZW5zLlRva2VuT3BlcmF0aW9ucykgJkxvY2tlZFRva2Vucy5Ub2tlbkhvbGRlcj4oTG9ja2VkVG9rZW5zLlRva2VuSG9sZGVyU3RvcmFnZVBhdGgpIQogICAgICAgICAgICBsZXQgZmxvd1Rva2VuID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPGF1dGgoRnVuZ2libGVUb2tlbi5XaXRoZHJhdykgJkZsb3dUb2tlbi5WYXVsdD4oL3N0b3JhZ2UvZmxvd1Rva2VuVmF1bHQpIQogICAgICAgICAgICAKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IFN0YWtpbmcgQ29sbGVjdGlvbiBhbmQgcHV0IGl0IGluIHN0b3JhZ2UKICAgICAgICAgICAgaWYgbG9ja2VkSG9sZGVyLmNoZWNrKCkgewogICAgICAgICAgICAgICAgc2lnbmVyLnN0b3JhZ2Uuc2F2ZSg8LUZsb3dTdGFraW5nQ29sbGVjdGlvbi5jcmVhdGVTdGFraW5nQ29sbGVjdGlvbih1bmxvY2tlZFZhdWx0OiBmbG93VG9rZW4sIHRva2VuSG9sZGVyOiBsb2NrZWRIb2xkZXIpLCB0bzogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtRmxvd1N0YWtpbmdDb2xsZWN0aW9uLmNyZWF0ZVN0YWtpbmdDb2xsZWN0aW9uKHVubG9ja2VkVmF1bHQ6IGZsb3dUb2tlbiwgdG9rZW5Ib2xkZXI6IG5pbCksIHRvOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gQ3JlYXRlIGEgcHVibGljIGxpbmsgdG8gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgICAgICAvLyBzaWduZXIubGluazwme0Zsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblB1YmxpY30+KAogICAgICAgICAgICAvLyAgICAgRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCwKICAgICAgICAgICAgLy8gICAgIHRhcmdldDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgKICAgICAgICAgICAgLy8gKQogICAgICAgICAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25DYXAgPSBzaWduZXIuY2FwYWJpbGl0aWVzLnN0b3JhZ2UuaXNzdWU8JntGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25QdWJsaWN9PihGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHN0YWtpbmdDb2xsZWN0aW9uQ2FwLCBhdDogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uUHVibGljUGF0aCkKICAgICAgICB9CgogICAgICAgIC8vIGJvcnJvdyBhIHJlZmVyZW5jZSB0byB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCiAgICAgICAgbGV0IGNvbGxlY3Rpb25SZWYgPSBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvbj4oZnJvbTogRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uU3RvcmFnZVBhdGgpCiAgICAgICAgICAgID8/IHBhbmljKCJDb3VsZCBub3QgYm9ycm93IHN0YWtpbmcgY29sbGVjdGlvbiByZWZlcmVuY2UiKQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIG5vZGUgc3Rha2VyIG9iamVjdCBpbiB0aGUgYWNjb3VudCwgcHV0IGl0IGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KICAgICAgICBpZiBzaWduZXIuc3RvcmFnZS5ib3Jyb3c8JkZsb3dJRFRhYmxlU3Rha2luZy5Ob2RlU3Rha2VyPihmcm9tOiBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlclN0b3JhZ2VQYXRoKSAhPSBuaWwgewogICAgICAgICAgICBsZXQgbm9kZSA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZVN0YWtlcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLk5vZGVTdGFrZXJTdG9yYWdlUGF0aCkhCiAgICAgICAgICAgIGNvbGxlY3Rpb25SZWYuYWRkTm9kZU9iamVjdCg8LW5vZGUsIG1hY2hpbmVBY2NvdW50SW5mbzogbmlsKQogICAgICAgIH0KCiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBkZWxlZ2F0b3Igb2JqZWN0IGluIHRoZSBhY2NvdW50LCBwdXQgaXQgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgogICAgICAgIGlmIHNpZ25lci5zdG9yYWdlLmJvcnJvdzwmRmxvd0lEVGFibGVTdGFraW5nLk5vZGVEZWxlZ2F0b3I+KGZyb206IEZsb3dJRFRhYmxlU3Rha2luZy5EZWxlZ2F0b3JTdG9yYWdlUGF0aCkgIT0gbmlsIHsKICAgICAgICAgICAgbGV0IGRlbGVnYXRvciA8LSBzaWduZXIuc3RvcmFnZS5sb2FkPEBGbG93SURUYWJsZVN0YWtpbmcuTm9kZURlbGVnYXRvcj4oZnJvbTogRmxvd0lEVGFibGVTdGFraW5nLkRlbGVnYXRvclN0b3JhZ2VQYXRoKSEKICAgICAgICAgICAgY29sbGVjdGlvblJlZi5hZGREZWxlZ2F0b3JPYmplY3QoPC1kZWxlZ2F0b3IpCiAgICAgICAgfQogICAgfQp9",
          "unstake": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0cyB1bnN0YWtpbmcgZm9yIHRoZSBzcGVjaWZpZWQgbm9kZSBvciBkZWxlZ2F0b3IgaW4gdGhlIHN0YWtpbmcgY29sbGVjdGlvbgoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYucmVxdWVzdFVuc3Rha2luZyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "withdrawLocked": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZVTkdJQkxFVE9LRU5BRERSRVNTCmltcG9ydCBGbG93VG9rZW4gZnJvbSAweEZMT1dUT0tFTkFERFJFU1MKaW1wb3J0IExvY2tlZFRva2VucyBmcm9tIDB4TE9DS0VEVE9LRU5BRERSRVNTCgp0cmFuc2FjdGlvbihhbW91bnQ6IFVGaXg2NCkgewoKICAgIGxldCBob2xkZXJSZWY6ICZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXIKICAgIGxldCB2YXVsdFJlZjogJkZsb3dUb2tlbi5WYXVsdAoKICAgIHByZXBhcmUoYWNjdDogQXV0aEFjY291bnQpIHsKICAgICAgICBzZWxmLmhvbGRlclJlZiA9IGFjY3QuYm9ycm93PCZMb2NrZWRUb2tlbnMuVG9rZW5Ib2xkZXI+KGZyb206IExvY2tlZFRva2Vucy5Ub2tlbkhvbGRlclN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyBhIHJlZmVyZW5jZSB0byBUb2tlbkhvbGRlciIpCgogICAgICAgIHNlbGYudmF1bHRSZWYgPSBhY2N0LmJvcnJvdzwmRmxvd1Rva2VuLlZhdWx0Pihmcm9tOiAvc3RvcmFnZS9mbG93VG9rZW5WYXVsdCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgZmxvdyB0b2tlbiB2YXVsdCByZWYiKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYudmF1bHRSZWYuZGVwb3NpdChmcm9tOiA8LXNlbGYuaG9sZGVyUmVmLndpdGhkcmF3KGFtb3VudDogYW1vdW50KSkKICAgIH0KfQ==",
          "withdrawReward": "aW1wb3J0IEZsb3dTdGFraW5nQ29sbGVjdGlvbiBmcm9tIDB4OGQwZTg3YjY1MTU5YWU2MwoKLy8vIFJlcXVlc3QgdG8gd2l0aGRyYXcgcmV3YXJkZWQgdG9rZW5zIGZvciB0aGUgc3BlY2lmaWVkIG5vZGUgb3IgZGVsZWdhdG9yIGluIHRoZSBzdGFraW5nIGNvbGxlY3Rpb24KLy8vIFRoZSB0b2tlbnMgYXJlIGF1dG9tYXRpY2FsbHkgZGVwb3NpdGVkIHRvIHRoZSB1bmxvY2tlZCBhY2NvdW50IHZhdWx0IGZpcnN0LAovLy8gQW5kIHRoZW4gYW55IGxvY2tlZCB0b2tlbnMgYXJlIGRlcG9zaXRlZCBpbnRvIHRoZSBsb2NrZWQgYWNjb3VudCB2YXVsdAoKdHJhbnNhY3Rpb24obm9kZUlEOiBTdHJpbmcsIGRlbGVnYXRvcklEOiBVSW50MzI/LCBhbW91bnQ6IFVGaXg2NCkgewogICAgCiAgICBsZXQgc3Rha2luZ0NvbGxlY3Rpb25SZWY6ICZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24KCiAgICBwcmVwYXJlKGFjY291bnQ6IEF1dGhBY2NvdW50KSB7CiAgICAgICAgc2VsZi5zdGFraW5nQ29sbGVjdGlvblJlZiA9IGFjY291bnQuYm9ycm93PCZGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb24+KGZyb206IEZsb3dTdGFraW5nQ29sbGVjdGlvbi5TdGFraW5nQ29sbGVjdGlvblN0b3JhZ2VQYXRoKQogICAgICAgICAgICA/PyBwYW5pYygiQ291bGQgbm90IGJvcnJvdyByZWYgdG8gU3Rha2luZ0NvbGxlY3Rpb24iKQogICAgfQoKICAgIGV4ZWN1dGUgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYud2l0aGRyYXdSZXdhcmRlZFRva2Vucyhub2RlSUQ6IG5vZGVJRCwgZGVsZWdhdG9ySUQ6IGRlbGVnYXRvcklELCBhbW91bnQ6IGFtb3VudCkKICAgIH0KfQ==",
          "withdrawUnstaked": "IGltcG9ydCBGbG93U3Rha2luZ0NvbGxlY3Rpb24gZnJvbSAweDhkMGU4N2I2NTE1OWFlNjMKCi8vLyBSZXF1ZXN0IHRvIHdpdGhkcmF3IHVuc3Rha2VkIHRva2VucyBmb3IgdGhlIHNwZWNpZmllZCBub2RlIG9yIGRlbGVnYXRvciBpbiB0aGUgc3Rha2luZyBjb2xsZWN0aW9uCi8vLyBUaGUgdG9rZW5zIGFyZSBhdXRvbWF0aWNhbGx5IGRlcG9zaXRlZCB0byB0aGUgdW5sb2NrZWQgYWNjb3VudCB2YXVsdCBmaXJzdCwKLy8vIEFuZCB0aGVuIGFueSBsb2NrZWQgdG9rZW5zIGFyZSBkZXBvc2l0ZWQgaW50byB0aGUgbG9ja2VkIGFjY291bnQgdmF1bHQgaWYgaXQgaXMgdGhlcmUKCnRyYW5zYWN0aW9uKG5vZGVJRDogU3RyaW5nLCBkZWxlZ2F0b3JJRDogVUludDMyPywgYW1vdW50OiBVRml4NjQpIHsKICAgIAogICAgbGV0IHN0YWtpbmdDb2xsZWN0aW9uUmVmOiAmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uCgogICAgcHJlcGFyZShhY2NvdW50OiBBdXRoQWNjb3VudCkgewogICAgICAgIHNlbGYuc3Rha2luZ0NvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmRmxvd1N0YWtpbmdDb2xsZWN0aW9uLlN0YWtpbmdDb2xsZWN0aW9uPihmcm9tOiBGbG93U3Rha2luZ0NvbGxlY3Rpb24uU3Rha2luZ0NvbGxlY3Rpb25TdG9yYWdlUGF0aCkKICAgICAgICAgICAgPz8gcGFuaWMoIkNvdWxkIG5vdCBib3Jyb3cgcmVmIHRvIFN0YWtpbmdDb2xsZWN0aW9uIikKICAgIH0KCiAgICBleGVjdXRlIHsKICAgICAgICBzZWxmLnN0YWtpbmdDb2xsZWN0aW9uUmVmLndpdGhkcmF3VW5zdGFrZWRUb2tlbnMobm9kZUlEOiBub2RlSUQsIGRlbGVnYXRvcklEOiBkZWxlZ2F0b3JJRCwgYW1vdW50OiBhbW91bnQpCiAgICB9Cn0="
        },
        "storage": {
          "enableTokenStorage": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IDxUb2tlbj4gZnJvbSA8VG9rZW5BZGRyZXNzPgoKdHJhbnNhY3Rpb24gewoKICAgIHByZXBhcmUoc2lnbmVyOiBhdXRoKFN0b3JhZ2UsIENhcGFiaWxpdGllcykgJkFjY291bnQpIHsKCiAgICAgICAgaWYgc2lnbmVyLnN0b3JhZ2UuYm9ycm93PCY8VG9rZW4+LlZhdWx0Pihmcm9tOiA8VG9rZW5TdG9yYWdlUGF0aD4gKSA9PSBuaWwgewogICAgICAgICAgICBzaWduZXIuc3RvcmFnZS5zYXZlKDwtIDxUb2tlbj4uY3JlYXRlRW1wdHlWYXVsdCgpLCB0bzogPFRva2VuU3RvcmFnZVBhdGg+KQogICAgICAgIH0KCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuUmVjZWl2ZXJQYXRoPikgPT0gZmFsc2UgewogICAgICAgICAgICBsZXQgcmVjZWl2ZXJDYXBhYmlsaXR5ID0gc2lnbmVyLmNhcGFiaWxpdGllcy5zdG9yYWdlLmlzc3VlPCZGbG93VG9rZW4uVmF1bHQ+KDxUb2tlblN0b3JhZ2VQYXRoPikKICAgICAgICAgICAgc2lnbmVyLmNhcGFiaWxpdGllcy5wdWJsaXNoKHJlY2VpdmVyQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlblJlY2VpdmVyUGF0aD4pCiAgICAgICAgCiAgICAgICAgfQogICAgICAgCiAgICAgICAgaWYgc2lnbmVyLmNhcGFiaWxpdGllcy5leGlzdHMoPFRva2VuQmFsYW5jZVBhdGg+KSA9PSBmYWxzZSB7CiAgICAgICAgICAgIGxldCBiYWxhbmNlQ2FwYWJpbGl0eSA9IHNpZ25lci5jYXBhYmlsaXRpZXMuc3RvcmFnZS5pc3N1ZTwmRmxvd1Rva2VuLlZhdWx0Pig8VG9rZW5TdG9yYWdlUGF0aD4pCiAgICAgICAgICAgIHNpZ25lci5jYXBhYmlsaXRpZXMucHVibGlzaChiYWxhbmNlQ2FwYWJpbGl0eSwgYXQ6IDxUb2tlbkJhbGFuY2VQYXRoPikKICAgICAgICB9CiAgICAKICAgIH0KfQ==",
          "getBasicPublicItems": "cHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdGFyZ2V0UGF0aDogU3RyaW5nPykgewogICAgc2VsZi5hZGRyZXNzID0gYWRkcmVzcwogICAgc2VsZi5wYXRoID0gcGF0aAogICAgc2VsZi50YXJnZXRQYXRoID0gdGFyZ2V0UGF0aAogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGZvciBwYXRoIGluIGFjY291bnQucHVibGljUGF0aHMgewogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgfQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getBasicPublicItemsTest": "YWNjZXNzKGFsbClzdHJ1Y3QgSXRlbSB7CiAgYWNjZXNzKGFsbClsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgaW5pdChhZGRyZXNzOiBBZGRyZXNzLCBwYXRoOiBTdHJpbmcsIHRhcmdldFBhdGg6IFN0cmluZz8pIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcyk6IFtJdGVtXSB7CiAgbGV0IGFjY291bnQgPSBnZXRBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKCiAgZnVuIGVhY2hQYXRoKHBhdGg6IFB1YmxpY1BhdGgsIGNhcFR5cGU6IFR5cGUpOiBCb29sIHsKICAgIC8vIHRvZG8KICAgIGxldCBjYXAgPSBhY2NvdW50LmNhcGFiaWxpdGllcy5nZXQ8JkFueVN0cnVjdD4ocGF0aCkKICAgIHZhciB0YXJnZXRQYXRoID0gIiIKCiAgICBpZiBjYXAgIT0gbmlsIHsKICAgICAgdGFyZ2V0UGF0aCA9ICIxMiIgCiAgICB9CiAgICBsZXQgaXRlbSA9IEl0ZW0oYWRkcmVzczogYWRkcmVzcywgcGF0aDogcGF0aC50b1N0cmluZygpLCB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoKQogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0KICBhY2NvdW50LnN0b3JhZ2UuZm9yRWFjaFB1YmxpYyhlYWNoUGF0aCkKCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getPrivateItems": "cHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFByaXZhdGUoZnVuIChwYXRoOiBQcml2YXRlUGF0aCwgdHlwZTogVHlwZSk6IEJvb2wgewogICAgaWYgIXBhdGhNYXAuY29udGFpbnNLZXkocGF0aC50b1N0cmluZygpKSB7CiAgICAgIHJldHVybiB0cnVlCiAgICB9CgogICAgdmFyIHRhcmdldFBhdGg6IFN0cmluZz8gPSBuaWwKICAgIGlmIGxldCB0YXJnZXQgPSBhY2NvdW50LmdldExpbmtUYXJnZXQocGF0aCkgewogICAgICB0YXJnZXRQYXRoID0gdGFyZ2V0LnRvU3RyaW5nKCkKICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aAogICAgKQoKICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgcmV0dXJuIHRydWUKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPrivateItemsTest": "YWNjZXNzKGFsbClzdHJ1Y3QgSXRlbSB7CiAgYWNjZXNzKGFsbClsZXQgYWRkcmVzczogQWRkcmVzcwogIGFjY2VzcyhhbGwpbGV0IHBhdGg6IFN0cmluZwogIGFjY2VzcyhhbGwpbGV0IHR5cGU6IFR5cGUKICBhY2Nlc3MoYWxsKWxldCB0YXJnZXRQYXRoOiBTdHJpbmc/CgogIGluaXQoCiAgICBhZGRyZXNzOiBBZGRyZXNzLCAKICAgIHBhdGg6IFN0cmluZywgCiAgICB0eXBlOiBUeXBlLCAKICAgIHRhcmdldFBhdGg6IFN0cmluZz8KICApIHsKICAgIHNlbGYuYWRkcmVzcyA9IGFkZHJlc3MKICAgIHNlbGYucGF0aCA9IHBhdGgKICAgIHNlbGYudHlwZSA9IHR5cGUKICAgIHNlbGYudGFyZ2V0UGF0aCA9IHRhcmdldFBhdGgKICB9Cn0KCmFjY2VzcyhhbGwpZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QWNjb3VudChhZGRyZXNzKQoKICBsZXQgaXRlbXM6IFtJdGVtXSA9IFtdCgogIGFjY291bnQuc3RvcmFnZS5mb3JFYWNoUHJpdmF0ZShmdW4gKHBhdGg6IFByaXZhdGVQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gdHJ1ZQogIH0pCgogIHJldHVybiBpdGVtcwp9",
          "getPrivatePaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHJpdmF0ZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbUHJpdmF0ZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnByaXZhdGVQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getPublicItem": "Ly8gQSB3b3JrYXJvdW5kIG1ldGhvZAppbXBvcnQgRnVuZ2libGVUb2tlbiBmcm9tIDB4RnVuZ2libGVUb2tlbgppbXBvcnQgTm9uRnVuZ2libGVUb2tlbiBmcm9tIDB4Tm9uRnVuZ2libGVUb2tlbgogIApwdWIgc3RydWN0IEl0ZW0gewogIHB1YiBsZXQgYWRkcmVzczogQWRkcmVzcwogIHB1YiBsZXQgcGF0aDogU3RyaW5nCiAgcHViIGxldCB0eXBlOiBUeXBlCgogIHB1YiBsZXQgdGFyZ2V0UGF0aDogU3RyaW5nPwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgfQp9CgpwdWIgZnVuIG1haW4oYWRkcmVzczogQWRkcmVzcywgcGF0aE1hcDoge1N0cmluZzogQm9vbH0pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQogIGFjY291bnQuZm9yRWFjaFB1YmxpYyhmdW4gKHBhdGg6IFB1YmxpY1BhdGgsIHR5cGU6IFR5cGUpOiBCb29sIHsKICAgIGlmICFwYXRoTWFwLmNvbnRhaW5zS2V5KHBhdGgudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gdHJ1ZQogICAgfQoKICAgIHZhciB0YXJnZXRQYXRoOiBTdHJpbmc/ID0gbmlsCgogICAgaWYgbGV0IHRhcmdldCA9IGFjY291bnQuZ2V0TGlua1RhcmdldChwYXRoKSB7CiAgICAgIHRhcmdldFBhdGggPSB0YXJnZXQudG9TdHJpbmcoKQogICAgfQoKICAgIGxldCBpdGVtID0gSXRlbSgKICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICB0eXBlOiB0eXBlLAogICAgICB0YXJnZXRQYXRoOiB0YXJnZXRQYXRoCiAgICApCgogICAgaXRlbXMuYXBwZW5kKGl0ZW0pCiAgICByZXR1cm4gZmFsc2UKICB9KQoKICByZXR1cm4gaXRlbXMKfQ==",
          "getPublicItems": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KICAKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQoKICBwdWIgbGV0IHRhcmdldFBhdGg6IFN0cmluZz8KCiAgcHViIGxldCBpc0NvbGxlY3Rpb25DYXA6IEJvb2wKICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQoKICBwdWIgbGV0IGlzQmFsYW5jZUNhcDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KAogICAgYWRkcmVzczogQWRkcmVzcywgCiAgICBwYXRoOiBTdHJpbmcsIAogICAgdHlwZTogVHlwZSwgCiAgICB0YXJnZXRQYXRoOiBTdHJpbmc/LCAKICAgIGlzQ29sbGVjdGlvbkNhcDogQm9vbCwgCiAgICB0b2tlbklEczogW1VJbnQ2NF0sCiAgICBpc0JhbGFuY2VDYXA6IEJvb2wsCiAgICBiYWxhbmNlOiBVRml4NjQ/CiAgKSB7CiAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICBzZWxmLnBhdGggPSBwYXRoCiAgICBzZWxmLnR5cGUgPSB0eXBlCiAgICBzZWxmLnRhcmdldFBhdGggPSB0YXJnZXRQYXRoCiAgICBzZWxmLmlzQ29sbGVjdGlvbkNhcCA9IGlzQ29sbGVjdGlvbkNhcAogICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICBzZWxmLmlzQmFsYW5jZUNhcCA9IGlzQmFsYW5jZUNhcAogICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhNYXA6IHtTdHJpbmc6IEJvb2x9KTogW0l0ZW1dIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCgogIGxldCBpdGVtczogW0l0ZW1dID0gW10KICBsZXQgYmFsYW5jZUNhcFR5cGUgPSBUeXBlPENhcGFiaWxpdHk8JkFueVJlc291cmNle0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+PigpCiAgbGV0IGNvbGxlY3Rpb25UeXBlID0gVHlwZTxDYXBhYmlsaXR5PCZBbnlSZXNvdXJjZXtOb25GdW5naWJsZVRva2VuLkNvbGxlY3Rpb25QdWJsaWN9Pj4oKQoKICBhY2NvdW50LmZvckVhY2hQdWJsaWMoZnVuIChwYXRoOiBQdWJsaWNQYXRoLCB0eXBlOiBUeXBlKTogQm9vbCB7CiAgICBpZiAhcGF0aE1hcC5jb250YWluc0tleShwYXRoLnRvU3RyaW5nKCkpIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KCiAgICB2YXIgdGFyZ2V0UGF0aDogU3RyaW5nPyA9IG5pbAogICAgdmFyIGlzQ29sbGVjdGlvbkNhcCA9IGZhbHNlCiAgICB2YXIgaXNCYWxhbmNlQ2FwID0gZmFsc2UKICAgIHZhciB0b2tlbklEczogW1VJbnQ2NF0gPSBbXQogICAgdmFyIGJhbGFuY2U6IFVGaXg2ND8gPSBuaWwKCiAgICBpZiBsZXQgdGFyZ2V0ID0gYWNjb3VudC5nZXRMaW5rVGFyZ2V0KHBhdGgpIHsKICAgICAgdGFyZ2V0UGF0aCA9IHRhcmdldC50b1N0cmluZygpCiAgICB9CgogICAgaWYgKHR5cGUuaXNTdWJ0eXBlKG9mOiBiYWxhbmNlQ2FwVHlwZSkpIHsKICAgICAgaXNCYWxhbmNlQ2FwID0gdHJ1ZQogICAgICBsZXQgdmF1bHRSZWYgPSBhY2NvdW50CiAgICAgICAgICAuZ2V0Q2FwYWJpbGl0eShwYXRoKQogICAgICAgICAgLmJvcnJvdzwme0Z1bmdpYmxlVG9rZW4uQmFsYW5jZX0+KCkKCiAgICAgIGlmIGxldCB2YXVsdCA9IHZhdWx0UmVmIHsKICAgICAgICAgIGJhbGFuY2UgPSB2YXVsdC5iYWxhbmNlCiAgICAgIH0KICAgIH0gZWxzZSBpZiAodHlwZS5pc1N1YnR5cGUob2Y6IGNvbGxlY3Rpb25UeXBlKSkgewogICAgICBpc0NvbGxlY3Rpb25DYXAgPSB0cnVlCiAgICAgIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudAogICAgICAgIC5nZXRDYXBhYmlsaXR5KHBhdGgpCiAgICAgICAgLmJvcnJvdzwme05vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvblB1YmxpY30+KCkKCiAgICAgIGlmIGxldCBjb2xsZWN0aW9uID0gY29sbGVjdGlvblJlZiB7CiAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uLmdldElEcygpCiAgICAgIH0KICAgIH0KCiAgICBsZXQgaXRlbSA9IEl0ZW0oCiAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgIHBhdGg6IHBhdGgudG9TdHJpbmcoKSwKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGFyZ2V0UGF0aDogdGFyZ2V0UGF0aCwKICAgICAgaXNDb2xsZWN0aW9uQ2FwOiBpc0NvbGxlY3Rpb25DYXAsCiAgICAgIHRva2VuSURzOiB0b2tlbklEcywKICAgICAgaXNCYWxhbmNlQ2FwOiBpc0JhbGFuY2VDYXAsCiAgICAgIGJhbGFuY2U6IGJhbGFuY2UKICAgICkKCiAgICBpdGVtcy5hcHBlbmQoaXRlbSkKICAgIHJldHVybiB0cnVlCiAgfSkKCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getPublicPaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbUHVibGljUGF0aF0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgY2xlYW5kUGF0aHM6IFtQdWJsaWNQYXRoXSA9IFtdCiAgZm9yIHBhdGggaW4gYWNjb3VudC5wdWJsaWNQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getStoragePaths": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MpOiBbU3RvcmFnZVBhdGhdIHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IGNsZWFuZFBhdGhzOiBbU3RvcmFnZVBhdGhdID0gW10KICBmb3IgcGF0aCBpbiBhY2NvdW50LnN0b3JhZ2VQYXRocyB7CiAgICBjbGVhbmRQYXRocy5hcHBlbmQocGF0aCkKICB9CiAgcmV0dXJuIGNsZWFuZFBhdGhzCn0=",
          "getStoredItems": "aW1wb3J0IEZ1bmdpYmxlVG9rZW4gZnJvbSAweEZ1bmdpYmxlVG9rZW4KaW1wb3J0IE5vbkZ1bmdpYmxlVG9rZW4gZnJvbSAweE5vbkZ1bmdpYmxlVG9rZW4KaW1wb3J0IE1ldGFkYXRhVmlld3MgZnJvbSAweE1ldGFkYXRhVmlld3MKCnB1YiBzdHJ1Y3QgQ29sbGVjdGlvbkRpc3BsYXkgewogIHB1YiBsZXQgbmFtZTogU3RyaW5nCiAgcHViIGxldCBzcXVhcmVJbWFnZTogTWV0YWRhdGFWaWV3cy5NZWRpYQoKICBpbml0KG5hbWU6IFN0cmluZywgc3F1YXJlSW1hZ2U6IE1ldGFkYXRhVmlld3MuTWVkaWEpIHsKICAgIHNlbGYubmFtZSA9IG5hbWUKICAgIHNlbGYuc3F1YXJlSW1hZ2UgPSBzcXVhcmVJbWFnZQogIH0KfQoKcHViIHN0cnVjdCBJdGVtIHsKICBwdWIgbGV0IGFkZHJlc3M6IEFkZHJlc3MKICBwdWIgbGV0IHBhdGg6IFN0cmluZwogIHB1YiBsZXQgdHlwZTogVHlwZQogIHB1YiBsZXQgaXNSZXNvdXJjZTogQm9vbAogIHB1YiBsZXQgaXNORlRDb2xsZWN0aW9uOiBCb29sCiAgcHViIGxldCBkaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8KICBwdWIgbGV0IHRva2VuSURzOiBbVUludDY0XQogIHB1YiBsZXQgaXNWYXVsdDogQm9vbAogIHB1YiBsZXQgYmFsYW5jZTogVUZpeDY0PwoKICBpbml0KGFkZHJlc3M6IEFkZHJlc3MsIHBhdGg6IFN0cmluZywgdHlwZTogVHlwZSwgaXNSZXNvdXJjZTogQm9vbCwgCiAgICBpc05GVENvbGxlY3Rpb246IEJvb2wsIGRpc3BsYXk6IENvbGxlY3Rpb25EaXNwbGF5PywKICAgIHRva2VuSURzOiBbVUludDY0XSwgaXNWYXVsdDogQm9vbCwgYmFsYW5jZTogVUZpeDY0PykgewogICAgICBzZWxmLmFkZHJlc3MgPSBhZGRyZXNzCiAgICAgIHNlbGYucGF0aCA9IHBhdGgKICAgICAgc2VsZi50eXBlID0gdHlwZQogICAgICBzZWxmLmlzUmVzb3VyY2UgPSBpc1Jlc291cmNlCiAgICAgIHNlbGYuaXNORlRDb2xsZWN0aW9uID0gaXNORlRDb2xsZWN0aW9uCiAgICAgIHNlbGYuZGlzcGxheSA9IGRpc3BsYXkKICAgICAgc2VsZi50b2tlbklEcyA9IHRva2VuSURzCiAgICAgIHNlbGYuaXNWYXVsdCA9IGlzVmF1bHQKICAgICAgc2VsZi5iYWxhbmNlID0gYmFsYW5jZQogIH0KfQoKcHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhJZGVudGlmaWVyczogW1N0cmluZ10pOiBbSXRlbV0gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcmVzb3VyY2VUeXBlID0gVHlwZTxAQW55UmVzb3VyY2U+KCkKICBsZXQgdmF1bHRUeXBlID0gVHlwZTxARnVuZ2libGVUb2tlbi5WYXVsdD4oKQogIGxldCBjb2xsZWN0aW9uVHlwZSA9IFR5cGU8QE5vbkZ1bmdpYmxlVG9rZW4uQ29sbGVjdGlvbj4oKQogIGxldCBtZXRhZGF0YVZpZXdUeXBlID0gVHlwZTxAQW55UmVzb3VyY2V7TWV0YWRhdGFWaWV3cy5SZXNvbHZlckNvbGxlY3Rpb259PigpCiAgbGV0IGl0ZW1zOiBbSXRlbV0gPSBbXQoKICBmb3IgaWRlbnRpZmllciBpbiBwYXRoSWRlbnRpZmllcnMgewogICAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBpZGVudGlmaWVyKSEKCiAgICBpZiBsZXQgdHlwZSA9IGFjY291bnQudHlwZShhdDogcGF0aCkgewogICAgICBsZXQgaXNSZXNvdXJjZSA9IHR5cGUuaXNTdWJ0eXBlKG9mOiByZXNvdXJjZVR5cGUpCiAgICAgIGxldCBpc05GVENvbGxlY3Rpb24gPSB0eXBlLmlzU3VidHlwZShvZjogY29sbGVjdGlvblR5cGUpCiAgICAgIGxldCBjb25mb3JtZWRNZXRhZGF0YVZpZXdzID0gdHlwZS5pc1N1YnR5cGUob2Y6IG1ldGFkYXRhVmlld1R5cGUpCgogICAgICB2YXIgdG9rZW5JRHM6IFtVSW50NjRdID0gW10KICAgICAgdmFyIGNvbGxlY3Rpb25EaXNwbGF5OiBDb2xsZWN0aW9uRGlzcGxheT8gPSBuaWwKICAgICAgaWYgaXNORlRDb2xsZWN0aW9uICYmIGNvbmZvcm1lZE1ldGFkYXRhVmlld3MgewogICAgICAgIGlmIGxldCBjb2xsZWN0aW9uUmVmID0gYWNjb3VudC5ib3Jyb3c8JntNZXRhZGF0YVZpZXdzLlJlc29sdmVyQ29sbGVjdGlvbiwgTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uUHVibGljfT4oZnJvbTogcGF0aCkgewogICAgICAgICAgdG9rZW5JRHMgPSBjb2xsZWN0aW9uUmVmLmdldElEcygpCgogICAgICAgICAgLy8gVE9ETzogbW92ZSB0byBhIGxpc3QKICAgICAgICAgIGlmIHRva2VuSURzLmxlbmd0aCA+IDAgCiAgICAgICAgICAmJiBwYXRoICE9IC9zdG9yYWdlL1JhcmlibGVORlRDb2xsZWN0aW9uIAogICAgICAgICAgJiYgcGF0aCAhPSAvc3RvcmFnZS9BUlRJRkFDVFBhY2tWM0NvbGxlY3Rpb24KICAgICAgICAgICYmIHBhdGggIT0gL3N0b3JhZ2UvQXJsZWVTY2VuZSB7CiAgICAgICAgICAgIGxldCByZXNvbHZlciA9IGNvbGxlY3Rpb25SZWYuYm9ycm93Vmlld1Jlc29sdmVyKGlkOiB0b2tlbklEc1swXSkgCiAgICAgICAgICAgIGlmIGxldCBkaXNwbGF5ID0gTWV0YWRhdGFWaWV3cy5nZXRORlRDb2xsZWN0aW9uRGlzcGxheShyZXNvbHZlcikgewogICAgICAgICAgICAgIGNvbGxlY3Rpb25EaXNwbGF5ID0gQ29sbGVjdGlvbkRpc3BsYXkoCiAgICAgICAgICAgICAgICBuYW1lOiBkaXNwbGF5Lm5hbWUsCiAgICAgICAgICAgICAgICBzcXVhcmVJbWFnZTogZGlzcGxheS5zcXVhcmVJbWFnZQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIGlzTkZUQ29sbGVjdGlvbiB7CiAgICAgICAgaWYgbGV0IGNvbGxlY3Rpb25SZWYgPSBhY2NvdW50LmJvcnJvdzwmTm9uRnVuZ2libGVUb2tlbi5Db2xsZWN0aW9uPihmcm9tOiBwYXRoKSB7CiAgICAgICAgICB0b2tlbklEcyA9IGNvbGxlY3Rpb25SZWYuZ2V0SURzKCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGxldCBpc1ZhdWx0ID0gdHlwZS5pc1N1YnR5cGUob2Y6IHZhdWx0VHlwZSkgCiAgICAgIHZhciBiYWxhbmNlOiBVRml4NjQ/ID0gbmlsCiAgICAgIGlmIGlzVmF1bHQgewogICAgICAgIGlmIGxldCB2YXVsdFJlZiA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuLlZhdWx0Pihmcm9tOiBwYXRoKSB7CiAgICAgICAgICBiYWxhbmNlID0gdmF1bHRSZWYuYmFsYW5jZQogICAgICAgIH0KICAgICAgfQoKICAgICAgbGV0IGl0ZW0gPSBJdGVtKAogICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgcGF0aDogcGF0aC50b1N0cmluZygpLAogICAgICAgIHR5cGU6IHR5cGUsCiAgICAgICAgaXNSZXNvdXJjZTogaXNSZXNvdXJjZSwKICAgICAgICBpc05GVENvbGxlY3Rpb246IGlzTkZUQ29sbGVjdGlvbiwKICAgICAgICBkaXNwbGF5OiBjb2xsZWN0aW9uRGlzcGxheSwKICAgICAgICB0b2tlbklEczogdG9rZW5JRHMsCiAgICAgICAgaXNWYXVsdDogaXNWYXVsdCwKICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICkKCiAgICAgIGl0ZW1zLmFwcGVuZChpdGVtKQogICAgfQogIH0KCiAgcmV0dXJuIGl0ZW1zCn0=",
          "getStoredResource": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlSZXNvdXJjZT8gewogIGxldCBhY2NvdW50ID0gZ2V0QXV0aEFjY291bnQoYWRkcmVzcykKICBsZXQgcGF0aCA9IFN0b3JhZ2VQYXRoKGlkZW50aWZpZXI6IHBhdGhTdHIpIQogIHJldHVybiBhY2NvdW50LmJvcnJvdzwmQW55UmVzb3VyY2U+KGZyb206IHBhdGgpCn0=",
          "getStoredStruct": "cHViIGZ1biBtYWluKGFkZHJlc3M6IEFkZHJlc3MsIHBhdGhTdHI6IFN0cmluZyk6ICZBbnlTdHJ1Y3Q/IHsKICBsZXQgYWNjb3VudCA9IGdldEF1dGhBY2NvdW50KGFkZHJlc3MpCiAgbGV0IHBhdGggPSBTdG9yYWdlUGF0aChpZGVudGlmaWVyOiBwYXRoU3RyKSEKICByZXR1cm4gYWNjb3VudC5ib3Jyb3c8JkFueVN0cnVjdD4oZnJvbTogcGF0aCkKfQ=="
        },
        "switchboard": {
          "getSwitchboard": "aW1wb3J0IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZCBmcm9tIDB4RnVuZ2libGVUb2tlblN3aXRjaGJvYXJkCmltcG9ydCBGdW5naWJsZVRva2VuIGZyb20gMHhGdW5naWJsZVRva2VuCgpwdWIgc3RydWN0IFN3aXRjaGJvYXJkSW5mbyB7CiAgcHViIGxldCB2YXVsdFR5cGVzOiBbVHlwZV0KCiAgaW5pdCh2YXVsdFR5cGVzOiBbVHlwZV0pIHsKICAgIHNlbGYudmF1bHRUeXBlcyA9IHZhdWx0VHlwZXMKICB9Cn0KCnB1YiBmdW4gbWFpbihhZGRyZXNzOiBBZGRyZXNzKTogU3dpdGNoYm9hcmRJbmZvPyB7CiAgbGV0IGFjY291bnQgPSBnZXRBdXRoQWNjb3VudChhZGRyZXNzKQogIGlmIGxldCBib2FyZCA9IGFjY291bnQuYm9ycm93PCZGdW5naWJsZVRva2VuU3dpdGNoYm9hcmQuU3dpdGNoYm9hcmQ+KGZyb206IEZ1bmdpYmxlVG9rZW5Td2l0Y2hib2FyZC5TdG9yYWdlUGF0aCkgewogICAgbGV0IHR5cGVzID0gYm9hcmQuZ2V0VmF1bHRUeXBlcygpCiAgICByZXR1cm4gU3dpdGNoYm9hcmRJbmZvKHZhdWx0VHlwZXM6IHR5cGVzKQogIH0KICByZXR1cm4gbmlsCn0="
        }
      }
    },
    "version": "1.1"
  },
  "status": 200
}